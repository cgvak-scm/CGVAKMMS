/*
Deployment script for MMSCGVAKDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MMSCGVAKDB"
:setvar DefaultFilePrefix "MMSCGVAKDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS2016\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS2016\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[getmeetingdetailsNew]...';


GO


---- exec [dbo].[getmeetingdetailsNew] 3,284,0,'2017-3-1','2019-01-10','All','false',0


CREATE procedure [dbo].[getmeetingdetailsNew]
 @ChairPerson int,              
 @Participant int,      
 @Status INT,
 @SDate DateTime,       
 @EDate DateTime,      
 @Priority varchar(10),  
 @IsNotClosed bit,   
 @Category int
  AS  
    
 IF @Priority = 'ALL' BEGIN      
  SET @Priority='%'    
 END     
 
BEGIN

select 
DISTINCT
 meetingDetails.Meeting_Id 
,meetingDetails.Employee_Id  
,meetingDetails.Participant
,meetingDetails.Task
,meetingDetails.Task_Id
,meetingDetails.Completion_date AS Completion_date
,meetingDetails.Priority  
,MMS_Meeting_Master.Meeting_Date
,mmc.CategoryName as Category
,meetingDetails.seen as Seen
,meetingDetails.IsDeleted as deleted
,meetingDetails.NextReviewDate as reviewdate
,ts.Name as Status
,ISNULL(MMS_Review_Frequency.Freq_Name,'') as reviewFreq  
,isnull((select TOP 1 Review_Status from MMS_Track_ReviewTasks where TaskId = meetingDetails.Task_Id order by ID desc),0) as ReviewStatus
,SUM(Case When LEN(MMSMS.Meeting_Status_Comments) > 0 THEN 1 ELSE 0 END) as  NoOfComments 

--into MMS_Meeting_Details_test28092018
--drop table MMS_Meeting_Details_test28092018

 
From MMS_Meeting_Details meetingDetails 
inner join (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) statusUpdate 
 on statusUpdate.EmployeeId=meetingDetails.Employee_Id 
 and  statusUpdate.MeetingId=meetingDetails.Meeting_Id 
 and statusUpdate.Task=meetingDetails.Task
 --AND statusUpdate.Status=meetingDetails.Status

 --inner join MMS_Meeting_Status_Update statusUpdate on statusUpdate.EmployeeId=meetingDetails.Employee_Id 
 --and  statusUpdate.MeetingId=meetingDetails.Meeting_Id 
	-- and statusUpdate.Task=meetingDetails.Task


join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingDetails.Meeting_Id
left join MMS_Meeting_Category mmc on mmc.ID= meetingDetails.Category
 left join MMS_Review_Frequency on meetingDetails.ReviewFrequencyID=MMS_Review_Frequency.Freq_In_Days
LEFT JOIN Task_Status ts on ts.ID=meetingDetails.Status
--FULL OUTER JOIN MMS_Track_ReviewTasks reviewTrack ON meetingDetails.Task_Id=reviewTrack.TaskId

    where meetingDetails.Chairperson=@ChairPerson
    AND meetingDetails.IsDeleted=0
    --AND meetingDetails.Employee_Id= iif(@Participant<>0,@Participant, meetingDetails.Employee_Id)  
	AND meetingDetails.Participant= iif(@Participant<>0,@Participant, meetingDetails.Participant)     
	AND meetingDetails.status = iif(@Status<>0,@Status, meetingDetails.status)  	
  --AND (meetingDetails.Completion_date Between @SDate AND @EDate)
	AND MMS_Meeting_Master.Meeting_Date Between @SDate AND @EDate     
    AND meetingDetails.Priority LIKE @Priority 
	AND meetingDetails.Category= iif(@Category<>0,@Category, meetingDetails.Category) 
	--	AND meetingDetails.Task_Id= iif(@Task_Id<>0,@Task_Id, meetingDetails.Task_Id) 

    GROUP BY
   meetingDetails.Meeting_Id   
,meetingDetails.Employee_Id    
,meetingDetails.Participant 
,meetingDetails.Task  
,meetingDetails.Task_Id  
,Completion_date  
,meetingDetails.Priority    
,MMS_Meeting_Master.Meeting_Date  
,mmt.meeting_name 
,meetingDetails.seen  
,meetingDetails.IsDeleted  
,meetingDetails.NextReviewDate  
,MMS_Review_Frequency.Freq_Name
,ts.Name

	order by MMS_Meeting_Master.Meeting_Date desc
	--and  meetingDetails.Meeting_Id>116107

END

-- select * from mms_meeting_details where task_id=787
-- select * from mms_meeting_master where meeting_id=97488

--select * from employeemaster where EmployeeDisplayName like '%samyu%'
GO
PRINT N'Creating [dbo].[getmeetingsummarydetailsNew]...';


GO



---- exec [dbo].[getmeetingsummarydetailsNew] 3,284,0,'2017-3-1','2019-01-10','All','false',0


CREATE procedure [dbo].[getmeetingsummarydetailsNew]
 @ChairPerson int,              
 @Participant int,      
 @Status INT,
 @SDate DateTime,       
 @EDate DateTime,      
 @Priority varchar(10),  
 @IsNotClosed bit,   
 @TemplateID int
  AS  
    
 IF @Priority = 'ALL' BEGIN      
  SET @Priority='%'    
 END     
 
BEGIN

select 
DISTINCT
 meetingDetails.Meeting_Id 
,meetingDetails.Employee_Id  
,meetingDetails.Participant
,meetingDetails.Task
,meetingDetails.Task_Id
,meetingDetails.Completion_date AS Completion_date
,meetingDetails.Priority  
,MMS_Meeting_Master.Meeting_Date
,mmt.meeting_name as TemplateName
,meetingDetails.seen as Seen
,meetingDetails.IsDeleted as deleted
,meetingDetails.NextReviewDate as reviewdate
,ts.Name as Status
,ISNULL(MMS_Review_Frequency.Freq_Name,'') as reviewFreq  
,isnull((select TOP 1 Review_Status from MMS_Track_ReviewTasks where TaskId = meetingDetails.Task_Id order by ID desc),0) as ReviewStatus

--into MMS_Meeting_Details_test28092018
--drop table MMS_Meeting_Details_test28092018

 
From MMS_Meeting_Details meetingDetails 
inner join (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) statusUpdate 
 on statusUpdate.EmployeeId=meetingDetails.Employee_Id 
 and  statusUpdate.MeetingId=meetingDetails.Meeting_Id 
 and statusUpdate.Task=meetingDetails.Task
 --AND statusUpdate.Status=meetingDetails.Status

 --inner join MMS_Meeting_Status_Update statusUpdate on statusUpdate.EmployeeId=meetingDetails.Employee_Id 
 --and  statusUpdate.MeetingId=meetingDetails.Meeting_Id 
	-- and statusUpdate.Task=meetingDetails.Task


join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingDetails.Meeting_Id
left join MMS_Meeting_Template mmt on mmt.tid = meetingDetails.TemplateID
 left join MMS_Review_Frequency on meetingDetails.ReviewFrequencyID=MMS_Review_Frequency.Freq_In_Days
LEFT JOIN Task_Status ts on ts.ID=meetingDetails.Status
--FULL OUTER JOIN MMS_Track_ReviewTasks reviewTrack ON meetingDetails.Task_Id=reviewTrack.TaskId

    where meetingDetails.Chairperson=@ChairPerson
    AND meetingDetails.IsDeleted=0
    --AND meetingDetails.Employee_Id= iif(@Participant<>0,@Participant, meetingDetails.Employee_Id)  
	AND meetingDetails.Participant= iif(@Participant<>0,@Participant, meetingDetails.Participant)     
	AND meetingDetails.status = iif(@Status<>0,@Status, meetingDetails.status)  	
  --AND (meetingDetails.Completion_date Between @SDate AND @EDate)
	AND MMS_Meeting_Master.Meeting_Date Between @SDate AND @EDate     
    AND meetingDetails.Priority LIKE @Priority 
	AND meetingDetails.TemplateID= iif(@TemplateID<>0,@TemplateID, meetingDetails.TemplateID) 
	--	AND meetingDetails.Task_Id= iif(@Task_Id<>0,@Task_Id, meetingDetails.Task_Id) 

	order by MMS_Meeting_Master.Meeting_Date desc
	--and  meetingDetails.Meeting_Id>116107

END

-- select * from mms_meeting_details where task_id=787
-- select * from mms_meeting_master where meeting_id=97488

--select * from employeemaster where EmployeeDisplayName like '%samyu%'
GO
PRINT N'Creating [dbo].[GetTaskComments]...';


GO




--  [dbo].[GetTaskComments] 11485
CREATE PROCEDURE [dbo].[GetTaskComments] 
	@TaskId int
AS
BEGIN
	
	SET NOCOUNT ON;    
	select * from (
select Meeting_Status_Comments as Comments,Meeting_Status_Date,  Commented_by,
Convert(varchar(20),Meeting_Status_Date) as StatusDate from MMS_Meeting_Status    
Where Task_Id = @TaskId) 
meetingstatus order by Meeting_Status_Date desc

END
GO
PRINT N'Creating [dbo].[Proc_Get_meeting_status]...';


GO


CREATE Procedure [dbo].[Proc_Get_meeting_status]    
 @Employee_id int,   
 @Meeting_Id int  
as  
select * from (
select Meeting_Status_Comments as Comments,Commented_by,Meeting_Status_Date as StatusDate from MMS_Meeting_Status   
Where Meeting_Status_Employee_Id=@Employee_id and Meeting_id = @Meeting_Id
union 
select Comments[Comments], meetdet.Chairperson, null[StatusDate] from mms_meeting_details meetdet
inner join MMS_Employee_Master empmaster on meetdet.employee_id=empmaster.employee_id 
where meetdet.employee_id=@Employee_id and meetdet.meeting_id=@Meeting_Id
) meetingstatus order by [StatusDate] desc
GO
PRINT N'Creating [dbo].[Proc_Get_Review_Tasks]...';


GO


 --  exec [dbo].[Proc_Get_Review_Tasks] '3',0,'0','All'

CREATE procedure [dbo].[Proc_Get_Review_Tasks]
  @Chairperson int,
  @Category_id INT,
  @Participant int,
  @PriorityType varchar(20),
  @ReviewFrequency varchar(20)
AS  

IF @PriorityType = 'ALL' BEGIN      
  SET @PriorityType='%'    
 END 

 IF @Participant = 0 BEGIN      
  SET @Participant=0    
 END

-- declare @check_status INT;
--set @check_status=(SELECT top 1 Review_Status FROM MMS_Track_ReviewTasks WHERE Review_Status=0 order by id desc)



  SELECT DISTINCT 
  MMD.Task_Id,
 MMD.Meeting_Id,     
  MMD.Employee_Id,
  CP.EmployeeDisplayName as Chairperson, 
  P.employeeDisplayName as Participant,
MMD.Task,
--(select top 1 MMD.Task from MMS_Meeting_Status where mms.Task_Id=MMD.Task_Id  Order by MeetingStatusAutoId desc) as Task,
  MMC.CategoryName as Category,
  Convert(varchar(11),MMD.Completion_Date,101) AS [Completion_Date],
  MMD.Priority,
MMD.Status,
  
  MMD.Comments,  
  0 Review_Status,
  MAX(MMR.NextReviewDate) AS Review_Date,
   MMM.Meeting_Date AS Assigned_Date,


  --convert(date,MMR.ActualReviewedDate ) AS Review_Date,

	-- -1 * convert(INT,datediff(dd,Getdate(),DATEADD(dd, ISNULL((DATEDIFF(DAY,MMD.NextReviewDate,GETDATE())/ISNULL(RF.Freq_In_Days, 1)),0) * ISNULL(RF.Freq_In_Days, 1), MMD.NextReviewDate))) as Overdue_days
	-1 * convert(INT,datediff(dd,Getdate(),MMM.Meeting_Date)) as Overdue_days 
	FROM MMS_Track_ReviewTasks MMR
	INNER JOIN MMS_Meeting_Details MMD on MMD.Task_Id = MMR.TaskId
	INNER JOIN MMS_Review_Frequency rf ON MMD.ReviewFrequencyID = RF.Freq_In_Days
INNER JOIN Employee_Master CP on CP.EmployeeICode=MMD.Participant
 INNER JOIN Employee_Master P on P.EmployeeICode=MMD.Participant
 INNER JOIN MMS_Meeting_Category MMC on MMC.ID= MMD.Category
  INNER JOIN MMS_Meeting_Master MMM on MMM.Meeting_Id=MMD.Meeting_Id
--left join MMS_Meeting_Status MMS on MMS.Task_Id=MMD.Task_Id
 
 WHERE 
 MMD.IsDeleted=0 
	--	and md.Status!='Closed'
		and MMD.Status!=1
    --CONVERT(date,MMR.ActualReviewedDate,108) = CONVERT(date, getdate()
	AND ((DATEADD(dd, ISNULL((DATEDIFF(DAY,MMD.nextreviewdate,GETDATE())/ISNULL(rf.freq_in_days, 1)),0) * ISNULL(rf.freq_in_days, 1), MMD.nextreviewdate)) between '2017-03-01' and GETDATE()+1
	AND MMD.ChairPerson = @Chairperson
	AND MMD.Category = IIF(@Category_id <> 0, @Category_id, MMD.Category)  
	AND MMD.Priority LIKE @PriorityType 
	AND MMD.Participant = IIF(@participant <> 0, @participant, MMD.participant)  )
	AND 
	(SELECT TOP 1 Review_Status from MMS_Track_ReviewTasks where TaskId=MMD.Task_Id  Order by ID desc) = 0
	AND MMM.Meeting_Date<>DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE()))
		AND MMD.ReviewFrequencyID= iif(@ReviewFrequency<>0,@ReviewFrequency, MMD.ReviewFrequencyID) 
	--and 
	--(select Meeting_Status_Task from MMS_Meeting_Status where mms.Task_Id=MMD.Task_Id  Order by MeetingStatusAutoId desc) =mmd.Task

GROUP BY  MMD.Task_Id,
 MMD.Meeting_Id,     
  MMD.Employee_Id,
  CP.EmployeeDisplayName, 
  P.employeeDisplayName ,
MMD.Task,
--(select top 1 MMD.Task from MMS_Meeting_Status where mms.Task_Id=MMD.Task_Id  Order by MeetingStatusAutoId desc) as Task,
  MMC.CategoryName ,
  Convert(varchar(11),MMD.Completion_Date,101) ,
  MMD.Priority,
MMD.Status,
  MMD.Comments
  , MMD.NextReviewDate
  , rf.freq_in_days
  ,  MMM.Meeting_Date
GO
PRINT N'Creating [dbo].[Proc_MyTask]...';


GO


---- exec [dbo].[Proc_MyTask] 284,'2017-03-01','2019-01-05',0,0


 CREATE procedure [dbo].[Proc_MyTask]
              
 @Participant int,      
 @SDate DateTime,       
 @EDate DateTime,        
 @Category int
, @ReviewFrequency int
 AS  
       
 
BEGIN

select 
DISTINCT
meetingDetails.task,
(Select EmployeeDisplayName from [dbo].Employee_Master where MMS_Meeting_Master.Meeting_Chairperson=Employee_Master.EmployeeICode) as 'Assigned_By'
,meetingDetails.Priority,
MMS_Review_Frequency.Freq_Name
,ISNULL(ISNULL((select top 1 Meeting_Status_Comments from [MMS_Meeting_Status] where Task_Id=meetingDetails.Task_Id order by Meeting_Status_Date desc), meetingDetails.Comments),'No Comments') Comments       
,ts.Name as Status,
meetingDetails.Completion_date AS 'Completed_date'
,MMS_Meeting_Master.Meeting_Date as Allocated_Date
,convert(int,datediff(dd,meetingDetails.Completion_Date,Getdate())) as 'Overdue_Days'
 ,meetingDetails.Meeting_Id
,convert(varchar(6), meetingDetails.Percentage_Completed)+' %' as Completed_Percentage
,mmc.CategoryName as Category
,isnull(d.mms_filename,'') as mms_filename
,meetingDetails.Task_Id

From MMS_Meeting_Details meetingDetails 
inner join (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) statusUpdate 
 on statusUpdate.EmployeeId=meetingDetails.Employee_Id 
 and  statusUpdate.MeetingId=meetingDetails.Meeting_Id 
 and statusUpdate.Task=meetingDetails.Task


join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingDetails.Meeting_Id
left join MMS_Meeting_Category mmc on mmc.ID= meetingDetails.Category
 left join MMS_Review_Frequency on meetingDetails.ReviewFrequencyID=MMS_Review_Frequency.Freq_In_Days
LEFT JOIN Task_Status ts on ts.ID=meetingDetails.Status
left join mms_attachment d  on d.meeting_id=meetingDetails.meeting_id
left join MMS_Meeting_Status on MMS_Meeting_Status.Meeting_Id=meetingDetails.Meeting_Id

    where meetingDetails.IsDeleted=0
	AND meetingDetails.Participant= iif(@Participant<>0,@Participant, meetingDetails.Participant)     	
  AND (MMS_Meeting_Master.Meeting_Date Between @SDate AND @EDate)    
	AND meetingDetails.Category= iif(@Category<>0,@Category, meetingDetails.Category) 
	AND meetingDetails.ReviewFrequencyID= iif(@ReviewFrequency<>0,@ReviewFrequency, meetingDetails.ReviewFrequencyID) 


END
GO
PRINT N'Creating [dbo].[sp_add_Employee_Department]...';


GO


CREATE PROCEDURE [dbo].[sp_add_Employee_Department]
	-- Add the parameters for the stored procedure here
	@employee_code int,
	@user_name nvarchar(100),
	
	@department_id int, 
	@emailid nvarchar(100)
AS
BEGIN
		INSERT INTO   [dbo].[Employee_Department](
		[Employee_Code]
		,[User_name]
		
		,[Department_Id]
		,[EmailId]
		)
		SELECT @employee_code, @user_name, @department_id, @emailid

		DECLARE @inserted bigint

		 SET @inserted =(SELECT SCOPE_IDENTITY())

		 SELECT
			[ID]
			,[Employee_Code]
			,[User_name]
			
			,[Department_Id]
			,[EmailID]
		FROM [dbo].[Employee_Department]
		WHERE [ID]=@inserted
	

END
GO
PRINT N'Creating [dbo].[sp_add_mms_notifications]...';


GO



CREATE procedure [dbo].[sp_add_mms_notifications]
(
@meeting_id int,
@chairperson int
)
as
 begin
   insert into mms_notifications(meeting_id,chairperson) values(@meeting_id,@chairperson)
 end
GO
PRINT N'Creating [dbo].[sp_Check_Login_Details]...';


GO



CREATE PROCEDURE [dbo].[sp_Check_Login_Details]  
 @Username [varchar](50)      
,@Password [varchar](50)            
      
AS            
BEGIN            
 SELECT       
   [dbo].[Employee_Master].[EmployeeIcode]  
 FROM      
   [dbo].[Employee_Master]  
  JOIN  
  [dbo].[MMS_Employee_Master]  
  ON  
   [dbo].[Employee_Master].EmployeeICode= [dbo].[MMS_Employee_Master].[profile_employee_id]  
 WHERE      
   [dbo].[Employee_Master].[LoginUserName] = @UserName      
  AND  [dbo].[Employee_Master].[LoginPassword] = @Password      
  AND  [dbo].[Employee_Master].[IsActive] = 1      
END
GO
PRINT N'Creating [dbo].[sp_get_EmailId]...';


GO


CREATE PROCEDURE [dbo].[sp_get_EmailId]  
@ParticpanId_In int  
AS      
BEGIN       
 SELECT       
  [dbo].employee_Master.employeecorporateemailid  
 FROM      
  [dbo].employee_master      
 WHERE      
  [dbo].employee_master.employeeicode=@ParticpanId_In     
 END      
RETURN
GO
PRINT N'Creating [dbo].[sp_Get_Employee_By_Email]...';


GO


-- =============================================
-- Author:		<>
-- Create date: <>
-- Description:	<Get all User Departments>
-- =============================================
CREATE PROCEDURE [dbo].[sp_Get_Employee_By_Email]
	-- Add the parameters for the stored procedure here
	@email varchar(100)
AS
BEGIN
		SELECT   
		[ID]
		,[Employee_Code]
		,[User_name]
		,[Department_Id]
		,[EmailId]
		FROM [dbo].[Employee_Department]
		WHERE [EmailId]=@email
		

END
GO
PRINT N'Creating [dbo].[sp_get_Employee_Department]...';


GO


-- =============================================
-- Author:		<>
-- Create date: <>
-- Description:	<Get all User Departments>
-- =============================================
CREATE PROCEDURE [dbo].[sp_get_Employee_Department]
	-- Add the parameters for the stored procedure here
AS
BEGIN
		SELECT 

		   [EmployeeICode] as [Employee_Code]
      ,[EmployeeDisplayName] as [User_name]
      ,[DepartmentICode] as [Department_Id]
      ,[EmployeeCorporateEmailId] as [EmailID]
		
		 FROM [dbo].[vw_get_EmployeeDepartment]

		--SELECT [ID]
  --    ,[Employee_Code]
  --    ,[User_name]
  --    ,[Department_Id]
  --    ,[EmailID]
  --FROM [dbo].[vw_get_EmployeeDepartments]
END
GO
PRINT N'Creating [dbo].[sp_get_EmployeeMaster_forJSON]...';


GO


   
  
   
CREATE PROCEDURE [dbo].[sp_get_EmployeeMaster_forJSON]    
@dept varchar(50)   
AS      
BEGIN      
      
 SELECT   
  [dbo].[Employee_Master].EmployeeICode as [Employee_Id]      
  --,[dbo].[Employee_Master].EmployeeFirstName + ' ' + EmployeeLastName as [Employee_Name]      
  ,[dbo].[Employee_Master].EmployeeDisplayName as [Employee_Name]      
  ,[dbo].[Employee_Master].EmployeeLastName as [Employee_LastName],  
  [dbo].[Employee_Master]. DepartmentICode as Department_ICode     
 FROM      
  [dbo].[Employee_Master]     
  JOIN    
  [dbo].[MMS_Employee_Master]    
  ON    
  [dbo].[Employee_Master].EmployeeICode=[dbo].[MMS_Employee_Master].[profile_employee_id]     
 WHERE      
  DepartmentICode = (SELECT DepartmentICode      
       FROM [dbo].[Department_Master]      
       WHERE DepartmentName = @dept)      
  AND IsActive = 1      
 ORDER BY      
  [dbo].[Employee_Master].EmployeeFirstName      
      
END      
RETURN
GO
PRINT N'Creating [dbo].[sp_get_meeting_details]...';


GO




CREATE PROCEDURE [dbo].[sp_get_meeting_details] 

@Meeting_Id  int  

AS  

BEGIN    

 SELECT    

  [dbo].MMS_Meeting_Details.Task_Id,

  [dbo].MMS_Meeting_Details.Meeting_Id,     

  [dbo].MMS_Meeting_Details.Employee_Id,

  [dbo].MMS_Meeting_Details.Chairperson,

  [dbo].MMS_Meeting_Details.Participant,

  [dbo].MMS_Meeting_Details.Task,
 [dbo].MMS_Meeting_Details.Category,
 -- mmc.CategoryName as Category,


  Convert(varchar(11),[dbo].MMS_Meeting_Details.Completion_Date,101) AS [Completion_Date],

  [dbo].MMS_Meeting_Details.Priority,

  [dbo].MMS_Meeting_Details.Status,
 -- ts.Name as Status,

  convert(int,datediff(dd,mms_meeting_details.Completion_Date,Getdate())) as 'Overdue_Days',

  [dbo].MMS_Meeting_Details.Comments

 FROM   

  [dbo].MMS_Meeting_Details  
  --LEFT JOIN Task_Status ts on ts.ID=mms_meeting_Details.Status
  --LEFT JOIN MMS_Meeting_Category mmc on mmc.ID=mms_meeting_Details.Status


 WHERE   

  [dbo].MMS_Meeting_Details.Meeting_Id =@Meeting_Id 

END    

RETURN
GO
PRINT N'Creating [dbo].[sp_get_meeting_details_Advanced]...';


GO





CREATE PROCEDURE [dbo].[sp_get_meeting_details_Advanced] 
@Meeting_Id  int,
@Priority	VARCHAR(50),
--@Status		VARCHAR(50) 
@Status INT
AS  
BEGIN  
--IF @Status = 'ALL'  
--  BEGIN    
--  SET @Status='%'  
--  END   
     
 IF @Priority = 'ALL'  
  BEGIN    
  SET @Priority='%'  
  END  
 
 SELECT    
  [dbo].MMS_Meeting_Details.Meeting_Id,     
  [dbo].MMS_Meeting_Details.Employee_Id,
  [dbo].MMS_Meeting_Details.Chairperson,
  [dbo].MMS_Meeting_Details.Participant,
  [dbo].MMS_Meeting_Details.Task,
  Convert(varchar(11),[dbo].MMS_Meeting_Details.Completion_Date,103) AS [Completion_Date],
  [dbo].MMS_Meeting_Details.Priority,
  --[dbo].MMS_Meeting_Details.Status, 
  ts.Name as Status,
  convert(int,datediff(dd,mms_meeting_details.Completion_Date,Getdate())) as 'Overdue_Days',
  [dbo].MMS_Meeting_Details.Comments
 FROM   
  [dbo].MMS_Meeting_Details  
  LEFT JOIN Task_Status ts on ts.ID=mms_meeting_Details.Status
 WHERE   
  (
	[dbo].MMS_Meeting_Details.Meeting_Id =@Meeting_Id  AND
	Priority LIKE @Priority AND
	Status = @Status
  )

END
GO
PRINT N'Creating [dbo].[sp_get_meeting_id]...';


GO


CREATE PROCEDURE [dbo].[sp_get_meeting_id]
AS
BEGIN
SELECT 
	Max(Meeting_ID)
FROM
	[dbo].MMS_Meeting_Master
RETURN
END
GO
PRINT N'Creating [dbo].[sp_get_meeting_master_viewByDept]...';


GO


-- exec  [dbo].[sp_get_meeting_master_viewByDept] 10009,'2018-11-01','2018-11-30','All'

CREATE PROCEDURE [dbo].[sp_get_meeting_master_viewByDept] 

@Chairperson  int,
@fromDate Datetime,
@toDate Datetime,
@department varchar(50)

AS  
 IF @department = 'ALL' BEGIN      
  SET @department='%'    
 END        
BEGIN    

 select distinct
[dbo].MMS_Meeting_Master.Meeting_Id,
[dbo].MMS_Meeting_Master.Meeting_Objective,
[dbo].MMS_Meeting_Master.Meeting_Type,
--Convert(varchar(20),[dbo].MMS_Meeting_Master.Meeting_Chairperson) as[Meeting_Chairperson],

  (Select EmployeeDisplayName from [dbo].Employee_Master where [dbo].MMS_Meeting_Master.Meeting_Chairperson=Employee_Master.EmployeeICode) as [Meeting_Chairperson],


 --Convert(varchar(11),[dbo].MMS_Meeting_Master.Meeting_Date,101) AS [Meeting_Date],

 --(Select EmployeeDisplayName from [dbo].Employee_Master where meetingDetails.Participant=Employee_Master.EmployeeICode) as Participant,


 CAST(DAY([dbo].MMS_Meeting_Master.Meeting_Date) AS VARCHAR(2))+ '-' +  Convert(char(3), [dbo].MMS_Meeting_Master.Meeting_Date, 0)
           + '-' + CAST(YEAR([dbo].MMS_Meeting_Master.Meeting_Date) AS VARCHAR(4)) AS [Meeting_Date],
[dbo].MMS_Meeting_Master.Meeting_Time,
[dbo].MMS_Meeting_Master.Meeting_Duration,

[dbo].MMS_Meeting_Master.Meeting_Venue,
[dbo].MMS_Meeting_Master.Meeting_Department,
[dbo].MMS_Meeting_Master.Meeting_No_Of_Participants
from
  [dbo].MMS_Meeting_Master 
  join [dbo].MMS_Meeting_Details
  
  on
   MMS_Meeting_Master.Meeting_Id=MMS_Meeting_Details.Meeting_Id
   join MMS_Meeting_Participant on MMS_Meeting_Master.Meeting_Id=MMS_Meeting_Participant.Meeting_Id
where 

([dbo].MMS_Meeting_Master.Meeting_Date between @fromDate and @toDate
and 
[dbo].MMS_Meeting_Master.Meeting_Department like @department
and [dbo].MMS_Meeting_Details.IsDeleted=0)


END    

RETURN
GO
PRINT N'Creating [dbo].[sp_get_MeetingSearch_Summary_01102019]...';


GO




-- exec [dbo].[sp_get_MeetingSearch_Summary_01102019] '3',10087,'0','2017-3-1','2018-11-30','all','0'

CREATE PROCEDURE [dbo].[sp_get_MeetingSearch_Summary_01102019]
  @chairperson INT
, @participant INT
, @status      INT
, @sdate       DATETIME
, @edate       DATETIME
, @priority    VARCHAR(10)
, @template    INT

AS

--IF @priority = 'ALL'
--    BEGIN
--        SET @priority = '%'
--    END

IF @participant = 0
    BEGIN
        SET @participant = 0
    END

    BEGIN
        SELECT 
               SUM(total)                  total
             , SUM(assigned)               assigned
             , SUM(inprogress)             inprogress
             , SUM(completed)              completed
             , SUM(closed)                 closed
             , SUM(reopened)               reopened
             , SUM(high)                   high
             , SUM(medium)                 medium
             , SUM(low)                    low
             , Convert(varchar(20),ISNULL(temp.participant, 0)) participant
			  --(select Distinct Convert(varchar(20),temp.Participant))as Participant,

             , isnull(temp.employee_id, 0) employee_id
             , isnull(temp.chairperson, 0) chairperson


			
			--   ,isnull(temp.review_Status,0) review_status
		



          FROM
                        (
                          SELECT DISTINCT
                                 ISNULL(COUNT(statusupdate.meetingid), 0) total
                               , 0                                        assigned
                               , 0                                        inprogress
                               , 0                                        completed
                               , 0                                        closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , ISNULL(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson


							--   ,reviewTrack.review_Status

                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	  -- and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								--     Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.isdeleted = 0
                                
                                AND meetingdetail.Status = IIF(@status <> 0, @status, meetingdetail.status)     
								 AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)     
                               --   AND meetingdetail.priority LIKE @priority		
							    AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)						
                                  --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  	AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate  
									--and  meetingdetail.Meeting_Id>116107   
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								  
								 --  ,reviewTrack.review_Status

                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , ISNULL(COUNT(statusupdate.meetingid), 0) assigned
                               , 0                                        inprogress
                               , 0                                        completed
                               , 0                                        closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , ISNULL(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson

							  -- ,reviewTrack.review_Status


                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								  --   Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=5 or @status='0',5 ,-1) --5
                                 -- AND meetingdetail.status LIKE @status
                                  AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)                                    
								 AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)     
                                  AND meetingdetail.isdeleted = 0
                                 --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								 	AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								   
								--   ,reviewTrack.review_Status



                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , 0                                        assigned
                               , ISNULL(COUNT(statusupdate.meetingid), 0) inprogress
                               , 0                                        completed
                               , 0                                        closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , isnull(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson
							   
							 --  ,reviewTrack.review_Status



                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

							--	     Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
-- AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=3 or @status='0',3 ,-1)  --3
                                   
								 AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)         
                                 -- AND meetingdetail.priority LIKE @priority
								 AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)
                                  AND meetingdetail.isdeleted = 0
                                  --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  	AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
							

--								   ,reviewTrack.review_Status



                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , 0                                        assigned
                               , 0                                        inprogress
                               , ISNULL(COUNT(statusupdate.meetingid), 0) completed
                               , 0                                        closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , isnull(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson


							 --  ,reviewTrack.Review_Status


                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								--     Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=2 or @status='0',2 ,-1) -- 2
                                
                                --  AND meetingdetail.priority LIKE @priority
								 AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)                                                  
								 AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)     
                                  AND meetingdetail.isdeleted = 0
                                  --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson



								 --  ,reviewTrack.review_Status




                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , 0                                        assigned
                               , 0                                        inprogress
                               , 0                                        completed
                               , ISNULL(COUNT(statusupdate.meetingid), 0) closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , isnull(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson


							--   ,reviewTrack.review_Status



                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	  -- and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                    AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								 --   Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=1 or @status='0',1 ,-1)  -- 1
                                                                                              
								  AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)        
                                 -- AND meetingdetail.priority LIKE @priority	
								  AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)							  
                                 -- AND meetingdetail.completion_date BETWEEN @sdate AND @edate
                                 AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
									AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson

								 --  ,reviewTrack.Review_Status


                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , 0                                        assigned
                               , 0                                        inprogress
                               , 0                                        completed
                               , 0                                        closed
                               , ISNULL(COUNT(statusupdate.meetingid), 0) reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , isnull(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson



						 	 --  ,reviewTrack.review_Status

                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	  -- and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								   --  Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
-- AND MeetingDetail.Participant= @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=4 or @status='0',4 ,-1)  --4
                                                                                    
								  AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)
                                  --AND meetingdetail.priority LIKE @priority
								   AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)
								 
                                 -- AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								 AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
                                  AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson


								 --  ,reviewTrack.review_Status


                          UNION ALL
                          SELECT DISTINCT
                                 0                                    total
                               , 0                                    assigned
                               , 0                                    inprogress
                               , 0                                    completed
                               , 0                                    closed
                               , 0                                    reopened
                               , COUNT(priority)                      high
                               , 0                                    medium
                               , 0                                    low
                               , isnull(meetingdetail.participant, 0) participant
                               , employee_id
                               , meetingdetail.chairperson


							  -- ,reviewTrack.review_Status


                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								  --   Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId
								  --  AND meetingdetail.status = IIF(@status=4 or @status='0',4 ,-1)  --4


                            --WHERE meetingdetail.priority = 'High'
							Where --meetingdetail.Priority=IIF(@priority='High','High','a')
							meetingdetail.priority = IIF(@priority = 'ALL' or @priority = 'High', 'High', 'a')
                                 AND meetingdetail.Status = IIF(@status <> 0, @status, meetingdetail.status)                                                            
								  AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)
                                  AND meetingdetail.chairperson = @chairperson
                                 -- AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								   
								   								   
								   --,reviewTrack.review_Status



                          UNION ALL
                          SELECT DISTINCT
                                 0                                    total
                               , 0                                    assigned
                               , 0                                    inprogress
                               , 0                                    completed
                               , 0                                    closed
                               , 0                                    reopened
                               , 0                                    high
                               , COUNT(priority)                      medium
                               , 0                                    low
                               , isnull(meetingdetail.participant, 0) participant
                               , meetingdetail.employee_id
                               , meetingdetail.chairperson

						     --  ,reviewTrack.Review_Status


                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson


                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								--     Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                           -- WHERE meetingdetail.priority = 'Medium'

						   Where -- meetingdetail.Priority=IIF(@priority='Medium','Medium','a')
                                 meetingdetail.priority = IIF(@priority = 'ALL' or @priority = 'Medium', 'Medium', 'a')
                                 AND meetingdetail.Status = IIF(@status <> 0, @status, meetingdetail.status)                                                            
								  AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)
                                  AND meetingdetail.chairperson = @chairperson
								  
                                  --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								   
								  -- ,reviewTrack.Review_Status
								   

                          UNION ALL
                          SELECT DISTINCT
                                 0                                    total
                               , 0                                    assigned
                               , 0                                    inprogress
                               , 0                                    completed
                               , 0                                    closed
                               , 0                                    reopened
                               , 0                                    high
                               , 0                                    medium
                               , COUNT(priority)                      low
                               , ISNULL(meetingdetail.participant, 0) participant
                               , meetingdetail.employee_id
                               , meetingdetail.chairperson
							   
							 --  ,reviewTrack.Review_Status
							   							 
                            FROM  dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

	--   full join MMS_Review_Frequency on   meetingdetail.ReviewFrequencyID=MMS_Review_Frequency.Freq_Id



                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								--   LEFT JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            --WHERE meetingdetail.priority = 'Low'

							 Where --meetingdetail.Priority=IIF(@priority='Low','Low','a')
							  meetingdetail.priority = IIF(@priority = 'ALL' or @priority = 'Low', 'Low', 'a') 
							AND meetingdetail.chairperson = @chairperson
                                   AND meetingdetail.Status = IIF(@status <> 0, @status, meetingdetail.status)                                                            
								  AND meetingdetail.TemplateID = IIF(@template <> 0, @template, meetingdetail.TemplateID)
                                 -- AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
-- AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								   

								--  ,reviewTrack.Review_Status



								


                        ) temp
          GROUP BY
                   temp.participant
                 , temp.employee_id
                 , temp.chairperson
  

  --,temp.review_Status



               ORDER BY
                        temp.participant DESC

    END

-- exec [dbo].[sp_get_MeetingSearch_Summary_16072018] '10013','0','Closed','2017-3-1','2018-7-13','Low'
-- exec [dbo].[sp_get_MeetingSearch_Summary_13072018] '10009','0','All','2017-3-1','2018-7-31','All'
--select * from Employee_Master where EmployeeICode=10010
GO
PRINT N'Creating [dbo].[sp_get_MeetingSearch_Summary_13072018]...';


GO



-- exec [dbo].[sp_get_MeetingSearch_Summary_13072018] '3',10087,'0','2017-3-1','2018-11-30','all','0'

CREATE PROCEDURE [dbo].[sp_get_MeetingSearch_Summary_13072018]
  @chairperson INT
, @participant INT
, @status      INT
, @sdate       DATETIME
, @edate       DATETIME
, @priority    VARCHAR(10)
, @category    INT

AS

--IF @priority = 'ALL'
--    BEGIN
--        SET @priority = '%'
--    END

IF @participant = 0
    BEGIN
        SET @participant = 0
    END

    BEGIN
        SELECT 
               SUM(total)                  total
             , SUM(assigned)               assigned
             , SUM(inprogress)             inprogress
             , SUM(completed)              completed
             , SUM(closed)                 closed
             , SUM(reopened)               reopened
             , SUM(high)                   high
             , SUM(medium)                 medium
             , SUM(low)                    low
             , Convert(varchar(20),ISNULL(temp.participant, 0)) participant
			  --(select Distinct Convert(varchar(20),temp.Participant))as Participant,

             , isnull(temp.employee_id, 0) employee_id
             , isnull(temp.chairperson, 0) chairperson


			
			--   ,isnull(temp.review_Status,0) review_status
		



          FROM
                        (
                          SELECT DISTINCT
                                 ISNULL(COUNT(statusupdate.meetingid), 0) total
                               , 0                                        assigned
                               , 0                                        inprogress
                               , 0                                        completed
                               , 0                                        closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , ISNULL(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson


							--   ,reviewTrack.review_Status

                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	  -- and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								--     Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.isdeleted = 0
                                
                                AND meetingdetail.Status = IIF(@status <> 0, @status, meetingdetail.status)     
								 AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)     
                               --   AND meetingdetail.priority LIKE @priority		
							    AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)						
                                  --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  	AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate  
									--and  meetingdetail.Meeting_Id>116107   
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								  
								 --  ,reviewTrack.review_Status

                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , ISNULL(COUNT(statusupdate.meetingid), 0) assigned
                               , 0                                        inprogress
                               , 0                                        completed
                               , 0                                        closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , ISNULL(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson

							  -- ,reviewTrack.review_Status


                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								  --   Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=5 or @status='0',5 ,-1) --5
                                 -- AND meetingdetail.status LIKE @status
                                  AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)                                    
								 AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)     
                                  AND meetingdetail.isdeleted = 0
                                 --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								 	AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								   
								--   ,reviewTrack.review_Status



                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , 0                                        assigned
                               , ISNULL(COUNT(statusupdate.meetingid), 0) inprogress
                               , 0                                        completed
                               , 0                                        closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , isnull(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson
							   
							 --  ,reviewTrack.review_Status



                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

							--	     Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
-- AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=3 or @status='0',3 ,-1)  --3
                                   
								 AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)         
                                 -- AND meetingdetail.priority LIKE @priority
								 AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)
                                  AND meetingdetail.isdeleted = 0
                                  --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  	AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
							

--								   ,reviewTrack.review_Status



                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , 0                                        assigned
                               , 0                                        inprogress
                               , ISNULL(COUNT(statusupdate.meetingid), 0) completed
                               , 0                                        closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , isnull(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson


							 --  ,reviewTrack.Review_Status


                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								--     Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=2 or @status='0',2 ,-1) -- 2
                                
                                --  AND meetingdetail.priority LIKE @priority
								 AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)                                                  
								 AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)     
                                  AND meetingdetail.isdeleted = 0
                                  --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson



								 --  ,reviewTrack.review_Status




                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , 0                                        assigned
                               , 0                                        inprogress
                               , 0                                        completed
                               , ISNULL(COUNT(statusupdate.meetingid), 0) closed
                               , 0                                        reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , isnull(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson


							--   ,reviewTrack.review_Status



                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	  -- and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                    AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								 --   Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=1 or @status='0',1 ,-1)  -- 1
                                                                                              
								  AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)        
                                 -- AND meetingdetail.priority LIKE @priority	
								  AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)							  
                                 -- AND meetingdetail.completion_date BETWEEN @sdate AND @edate
                                 AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
									AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson

								 --  ,reviewTrack.Review_Status


                          UNION ALL
                          SELECT DISTINCT
                                 0                                        total
                               , 0                                        assigned
                               , 0                                        inprogress
                               , 0                                        completed
                               , 0                                        closed
                               , ISNULL(COUNT(statusupdate.meetingid), 0) reopened
                               , 0                                        high
                               , 0                                        medium
                               , 0                                        low
                               , isnull(meetingdetail.participant, 0)     participant
                               , employee_id
                               , meetingdetail.chairperson



						 	 --  ,reviewTrack.review_Status

                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	  -- and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								   --  Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            WHERE meetingdetail.chairperson = @chairperson
-- AND MeetingDetail.Participant= @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.status = IIF(@status=4 or @status='0',4 ,-1)  --4
                                                                                    
								  AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)
                                  --AND meetingdetail.priority LIKE @priority
								   AND meetingdetail.priority = IIF(@priority <> 'ALL', @priority, meetingdetail.priority)
								 
                                 -- AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								 AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
                                  AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson


								 --  ,reviewTrack.review_Status


                          UNION ALL
                          SELECT DISTINCT
                                 0                                    total
                               , 0                                    assigned
                               , 0                                    inprogress
                               , 0                                    completed
                               , 0                                    closed
                               , 0                                    reopened
                               , COUNT(priority)                      high
                               , 0                                    medium
                               , 0                                    low
                               , isnull(meetingdetail.participant, 0) participant
                               , employee_id
                               , meetingdetail.chairperson


							  -- ,reviewTrack.review_Status


                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								  --   Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId
								  --  AND meetingdetail.status = IIF(@status=4 or @status='0',4 ,-1)  --4


                            --WHERE meetingdetail.priority = 'High'
							Where --meetingdetail.Priority=IIF(@priority='High','High','a')
							meetingdetail.priority = IIF(@priority = 'ALL' or @priority = 'High', 'High', 'a')
                                 AND meetingdetail.Status = IIF(@status <> 0, @status, meetingdetail.status)                                                            
								  AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)
                                  AND meetingdetail.chairperson = @chairperson
                                 -- AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								   
								   								   
								   --,reviewTrack.review_Status



                          UNION ALL
                          SELECT DISTINCT
                                 0                                    total
                               , 0                                    assigned
                               , 0                                    inprogress
                               , 0                                    completed
                               , 0                                    closed
                               , 0                                    reopened
                               , 0                                    high
                               , COUNT(priority)                      medium
                               , 0                                    low
                               , isnull(meetingdetail.participant, 0) participant
                               , meetingdetail.employee_id
                               , meetingdetail.chairperson

						     --  ,reviewTrack.Review_Status


                            FROM   dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson


                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								--     Full JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                           -- WHERE meetingdetail.priority = 'Medium'

						   Where -- meetingdetail.Priority=IIF(@priority='Medium','Medium','a')
                                 meetingdetail.priority = IIF(@priority = 'ALL' or @priority = 'Medium', 'Medium', 'a')
                                 AND meetingdetail.Status = IIF(@status <> 0, @status, meetingdetail.status)                                                            
								  AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)
                                  AND meetingdetail.chairperson = @chairperson
								  
                                  --AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
--AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								   
								  -- ,reviewTrack.Review_Status
								   

                          UNION ALL
                          SELECT DISTINCT
                                 0                                    total
                               , 0                                    assigned
                               , 0                                    inprogress
                               , 0                                    completed
                               , 0                                    closed
                               , 0                                    reopened
                               , 0                                    high
                               , 0                                    medium
                               , COUNT(priority)                      low
                               , ISNULL(meetingdetail.participant, 0) participant
                               , meetingdetail.employee_id
                               , meetingdetail.chairperson
							   
							 --  ,reviewTrack.Review_Status
							   							 
                            FROM  dbo.mms_meeting_details meetingdetail

							join MMS_Meeting_Master on MMS_Meeting_Master.Meeting_Id=meetingdetail.Meeting_Id
	   --and MMS_Meeting_Master.Meeting_Chairperson=meetingdetail.Chairperson

	--   full join MMS_Review_Frequency on   meetingdetail.ReviewFrequencyID=MMS_Review_Frequency.Freq_Id



                            INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update)  statusupdate
                                ON meetingdetail.employee_id = statusupdate.employeeid
                                   AND meetingdetail.task = statusupdate.task
                                   AND meetingdetail.meeting_id = statusupdate.meetingid

								--   LEFT JOIN MMS_Track_ReviewTasks reviewTrack ON meetingdetail.Task_Id=reviewTrack.TaskId

                            --WHERE meetingdetail.priority = 'Low'

							 Where --meetingdetail.Priority=IIF(@priority='Low','Low','a')
							  meetingdetail.priority = IIF(@priority = 'ALL' or @priority = 'Low', 'Low', 'a') 
							AND meetingdetail.chairperson = @chairperson
                                   AND meetingdetail.Status = IIF(@status <> 0, @status, meetingdetail.status)                                                            
								  AND meetingdetail.Category = IIF(@category <> 0, @category, meetingdetail.Category)
                                 -- AND meetingdetail.completion_date BETWEEN @sdate AND @edate
								  AND MMS_Meeting_Master.Meeting_Date Between @sdate AND @edate     
-- AND MeetingDetail.Participant = @Participant
                                  AND meetingdetail.participant = IIF(@participant <> 0, @participant, meetingdetail.participant)
                                  AND meetingdetail.isdeleted = 0
                            GROUP BY
                                     meetingdetail.participant
                                   , meetingdetail.employee_id
                                   , meetingdetail.chairperson
								   

								--  ,reviewTrack.Review_Status



								


                        ) temp
          GROUP BY
                   temp.participant
                 , temp.employee_id
                 , temp.chairperson
  

  --,temp.review_Status



               ORDER BY
                        temp.participant DESC

    END

-- exec [dbo].[sp_get_MeetingSearch_Summary_16072018] '10013','0','Closed','2017-3-1','2018-7-13','Low'
-- exec [dbo].[sp_get_MeetingSearch_Summary_13072018] '10009','0','All','2017-3-1','2018-7-31','All'
--select * from Employee_Master where EmployeeICode=10010
GO
PRINT N'Creating [dbo].[sp_get_mms_notification]...';


GO


 CREATE procedure [dbo].[sp_get_mms_notification]          
(          
--@chairperson varchar(40)          
@chairperson int
)          
as          
begin          
     select a.meeting_id ,a.meeting_objective,a.meeting_date from       
    mms_meeting_master a      
   inner  join  mms_meeting_details b  on a.meeting_id=b.meeting_id     
    inner join mms_meeting_status_update c on b.meeting_id=c.meetingid         
    where b.participant=@chairperson and b.is_read_notification='false'     
    group by a.meeting_id,a.meeting_objective,a.meeting_date    
    order by a.meeting_date desc  
           
end
GO
PRINT N'Creating [dbo].[sp_get_notification_summary]...';


GO



CREATE  PROCEDURE [dbo].[sp_get_notification_summary]         
 @ChairPerson int,                    
 @Participant int,            
 --@Status varchar(20),                   
 @Status INT,
 @Priority varchar(10),
 @MeetingId int                           
AS                    
 --IF @Participant = '0'          
 --BEGIN            
 -- SET @Participant='%'          
 --END               
           
 --IF @Status = 'ALL'          
 --BEGIN            
 -- SET @Status='%'          
 --END           
             
 IF @Priority = 'ALL'          
 BEGIN            
  SET @Priority='%'          
 END           
           
BEGIN    
SELECT    
  [dbo].mms_meeting_details.Employee_Id, EmpMast.Employee_FirstName + ' ' + EmpMast.Employee_LastName as Participant,   
  Count(*) as TotalTasks,   
  (SELECT COUNT(StatusUpdate.MeetingID)     
  FROM    
   [dbo].mms_meeting_details MeetingDetail     
   INNER JOIN [dbo].mms_meeting_status_update StatusUpdate ON     
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId        
   AND MeetingDetail.Task = StatusUpdate.Task         
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId   
  WHERE   
   MeetingDetail.chairperson = @ChairPerson   
   AND StatusUpdate.EmployeeID = [dbo].mms_meeting_details.Employee_Id   
   AND StatusUpdate.status = 5   
   AND MeetingDetail.Meeting_Id=@MeetingId
  ) as Assigned,   
  (SELECT COUNT(StatusUpdate.MeetingID)     
  FROM    
   [dbo].mms_meeting_details MeetingDetail     
   INNER JOIN [dbo].mms_meeting_status_update StatusUpdate ON     
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId        
   AND MeetingDetail.Task = StatusUpdate.Task         
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId   
  WHERE   
   MeetingDetail.chairperson = @ChairPerson   
   AND StatusUpdate.EmployeeID = [dbo].mms_meeting_details.Employee_Id   
   AND StatusUpdate.status = 3   
   AND MeetingDetail.Meeting_Id=@MeetingId 
  ) as InProgress,   
  (SELECT COUNT(StatusUpdate.MeetingID)     
  FROM    
   [dbo].mms_meeting_details MeetingDetail     
   INNER JOIN [dbo].mms_meeting_status_update StatusUpdate ON     
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId        
   AND MeetingDetail.Task = StatusUpdate.Task         
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId   
  WHERE   
   MeetingDetail.chairperson = @ChairPerson   
   AND StatusUpdate.EmployeeID = [dbo].mms_meeting_details.Employee_Id   
   AND StatusUpdate.status = 2   
   AND MeetingDetail.Meeting_Id=@MeetingId
  ) as Completed,   
  (SELECT COUNT(StatusUpdate.MeetingID)     
  FROM    
   [dbo].mms_meeting_details MeetingDetail     
   INNER JOIN [dbo].mms_meeting_status_update StatusUpdate ON     
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId        
   AND MeetingDetail.Task = StatusUpdate.Task         
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId   
  WHERE   
   MeetingDetail.chairperson = @ChairPerson   
   AND StatusUpdate.EmployeeID = [dbo].mms_meeting_details.Employee_Id   
   AND StatusUpdate.status = 1   
   AND MeetingDetail.Meeting_Id=@MeetingId
  ) as Closed,   
  (SELECT COUNT(Priority)     
  FROM    
   [dbo].mms_meeting_details MeetingDetail     
   INNER JOIN [dbo].mms_meeting_status_update StatusUpdate ON     
   MeetingDetail.Employee_Id= StatusUpdate.EmployeeId        
   AND MeetingDetail.Task= StatusUpdate.Task         
   AND MeetingDetail.Meeting_Id= StatusUpdate.MeetingId     
  WHERE    
   MeetingDetail.Priority = 'High'     
   AND MeetingDetail.chairperson = @ChairPerson   
   AND MeetingDetail.Meeting_Id=@MeetingId
   AND MeetingDetail.Employee_Id = [dbo].mms_meeting_details.Employee_Id 
   AND StatusUpdate.Status != 1 
  ) as High,     
(SELECT COUNT(Priority)     
  FROM    
   [dbo].mms_meeting_details MeetingDetail    
   INNER JOIN [dbo].mms_meeting_status_update StatusUpdate ON     
   MeetingDetail.Employee_Id= StatusUpdate.EmployeeId        
   AND MeetingDetail.Task= StatusUpdate.Task        
   AND MeetingDetail.Meeting_Id= StatusUpdate.MeetingId     
  WHERE    
   MeetingDetail.Priority = 'Medium'     
   AND MeetingDetail.chairperson = @ChairPerson   
   AND MeetingDetail.Meeting_Id=@MeetingId
   AND MeetingDetail.Employee_Id = [dbo].mms_meeting_details.Employee_Id  
   AND StatusUpdate.Status != 1  
  ) as Medium,     
  (SELECT COUNT(Priority)     
  FROM    
   [dbo].mms_meeting_details MeetingDetail    
   INNER JOIN [dbo].mms_meeting_status_update StatusUpdate ON     
   MeetingDetail.Employee_Id= StatusUpdate.EmployeeId        
   AND MeetingDetail.Task= StatusUpdate.Task         
   AND MeetingDetail.Meeting_Id= StatusUpdate.MeetingId     
  WHERE    
   MeetingDetail.Priority = 'Low'     
   AND MeetingDetail.chairperson = @ChairPerson   
   AND MeetingDetail.Meeting_Id=@MeetingId
   AND MeetingDetail.Employee_Id = [dbo].mms_meeting_details.Employee_Id  
   AND StatusUpdate.Status != 1
  ) as Low     
FROM     
 [dbo].mms_meeting_details     
 INNER JOIN [dbo].mms_meeting_status_update ON    
 [dbo].mms_meeting_details.Employee_Id= [dbo].mms_meeting_status_update.EmployeeId        
 AND [dbo].mms_meeting_details.Task= [dbo].mms_meeting_status_update.Task         
 AND [dbo].mms_meeting_details.Meeting_Id= [dbo].mms_meeting_status_update.MeetingId   
 INNER JOIN [dbo].MMS_Employee_Master EmpMast ON   
 EmpMast.Employee_Id = [dbo].mms_meeting_details.Employee_Id   
WHERE     
 [dbo].mms_meeting_details.chairperson = @ChairPerson   
 AND --[dbo].mms_meeting_details.Employee_Id LIKE @Participant   
 [dbo].mms_meeting_details.Employee_Id= iif(@Participant<>0,@Participant, [dbo].mms_meeting_details.Employee_Id)
 AND [dbo].mms_meeting_status_update.status = @Status   
 AND mms_meeting_details.Meeting_Id=@MeetingId
 AND [dbo].mms_meeting_details.Priority LIKE @Priority   
GROUP BY [dbo].mms_meeting_details.Employee_Id, EmpMast.Employee_FirstName, EmpMast.Employee_LastName 
ORDER BY EmpMast.Employee_FirstName, EmpMast.Employee_LastName 
END            
RETURN
GO
PRINT N'Creating [dbo].[sp_get_Participants]...';


GO


 CREATE PROCEDURE  [dbo].[sp_get_Participants]    
@Chairperson int
AS    
BEGIN    
 SELECT    
    DISTINCT(meetingDetails.employee_id) ,
	(empMaster.employeeFirstname+' '+empMaster.EmployeeLastName ) as name, meetingDetails.Participant
 FROM    									  
  Mms_Meeting_details  meetingDetails  
  inner join  Employee_Master empMaster  ON empMaster.EmployeeICode=meetingDetails.Participant
  -- on empMaster.employeeFirstname+' '+empMaster.EmployeeLastName = meetingDetails.Participant
 

 WHERE    
 meetingDetails.chairperson = @Chairperson
  
 END
GO
PRINT N'Creating [dbo].[sp_getCompletionEffectivenessReport]...';


GO



--exec [sp_getCompletionEffectivenessReport] '2017-3-1','2018-8-16',3,0,0,1
CREATE procedure [dbo].[sp_getCompletionEffectivenessReport]
@SDate DateTime, @EDate DateTime,@ChairPerson int,@Participant int,@Task_Id int,@ReviewFrequencyID int
 AS     

 IF @ReviewFrequencyID='1'
 BEGIN
 SET @ReviewFrequencyID='1' 
 END
 
 IF @ReviewFrequencyID='2'
 BEGIN
 SET @ReviewFrequencyID='7' 
 END

 IF @ReviewFrequencyID='3'
 BEGIN
 SET @ReviewFrequencyID='14' 
 END

 IF @ReviewFrequencyID='4'
 BEGIN
 SET @ReviewFrequencyID='30' 
 END

 IF @ReviewFrequencyID='5'
 BEGIN
 SET @ReviewFrequencyID='90' 
 END

 IF @ReviewFrequencyID='6'
 BEGIN
 SET @ReviewFrequencyID='180' 
 END

 IF @ReviewFrequencyID='7'
 BEGIN
 SET @ReviewFrequencyID='365' 
 END
 
 --IF @Participant = '0' BEGIN      
 -- SET @Participant='%'    
 --END        
    

	--IF @Participant !='0' BEGIN
	-- SET @Participant=@Participant
 --END 
    
 --IF @Priority = 'ALL' BEGIN      
 -- SET @Priority='%'    
 --END  
 
 BEGIN  
select

--(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as HighAssigned from MMS_Meeting_Details MeetingDetail 
--INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
--   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
--   AND MeetingDetail.Task = StatusUpdate.Task                 
--   and MeetingDetail.IsDeleted=0      
--   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
--where MeetingDetail.Priority = 'High'  
--AND MeetingDetail.chairperson = @ChairPerson 
--AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) 
--AND MeetingDetail.Completion_Date between @SDate and @EDate ) as HighAssigned 



(select DISTINCT ISNULL(count(Meeting_Id),0) as HighTotal from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId 
where MeetingDetail.Priority like 'H%'  AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Employee_Id= iif(@Participant<>0,@Participant, MeetingDetail.Employee_Id) AND MeetingDetail.Completion_Date between @SDate and @EDate) as HighTotal ,

(select ISNULL(COUNT(Meeting_Id),0) as MediumTotal from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId 
where MeetingDetail.Priority like'M%' AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Employee_Id= iif(@Participant<>0,@Participant, MeetingDetail.Employee_Id) AND MeetingDetail.Completion_Date between @SDate and @EDate) as MediumTotal, 

(select ISNULL(COUNT(Meeting_Id),0)  as LowTotal from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId where MeetingDetail.Priority like 'L%' 
AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Employee_Id= iif(@Participant<>0,@Participant, MeetingDetail.Employee_Id) AND MeetingDetail.Completion_Date between @SDate and @EDate) as LowTotal,

(select ISNULL(COUNT(Meeting_Id),0) as HighCompleted from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId
   where MeetingDetail.Priority like'H%' and MeetingDetail.Status like 'Com%' AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Employee_Id= iif(@Participant<>0,@Participant, MeetingDetail.Employee_Id) AND MeetingDetail.Completion_Date between @SDate and @EDate) as HighCompleted,

(select ISNULL(COUNT(Meeting_Id),0) as MediumCompleted from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId
where MeetingDetail.Priority like 'M%' and MeetingDetail.Status like 'Com%' AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Employee_Id= iif(@Participant<>0,@Participant, MeetingDetail.Employee_Id) AND MeetingDetail.Completion_Date between @SDate and @EDate) as MediumCompleted, 
   
(select ISNULL(COUNT(Meeting_Id),0) as LowCompleted from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId where MeetingDetail.Priority like 'L%' and MeetingDetail.Status like 'Com%' AND MeetingDetail.chairperson = @ChairPerson  AND MeetingDetail.Employee_Id= iif(@Participant<>0,@Participant, MeetingDetail.Employee_Id) AND MeetingDetail.Completion_Date between @SDate and @EDate) as LowCompleted,
  


  --select count(*) as HighDelay from MMS_Meeting_Details where NOT Exists(SELECT ISNULL(DateDiff(DAY, (select top 1 Meeting_Status_Date from MMS_Meeting_Status where Task_Id=4279 order by Meeting_Status_Date desc ) ,meetdetails.Completion_Date),0) as MediumDelay FROM MMS_Meeting_Details meetdetails JOIN MMS_Meeting_Status mmsstatus ON meetdetails.Task_Id = 4279 and mmsstatus.Task_Id=4279  WHERE   meetdetails.chairperson = 'charu' AND meetdetails.Participant LIKE 'abc' and meetdetails.Priority like 'High%' and  meetdetails.Completion_Date between '4/1/2017' and '4/26/2018 5:10:52 PM'and not exists(SELECT Comments FROM MMS_Meeting_Details WHERE Completion_Date between DATEADD(DAY,-10,GETDATE()) and '4/26/2018 5:10:52 PM' and Task_Id =4279)) and MMS_Meeting_Details.Task_Id = 4279
  

 
(select count(Task_Id) as HighDelay from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId 
 where NOT Exists(SELECT ISNULL(DateDiff(DAY, (select top 1 Meeting_Status_Date from MMS_Meeting_Status where Task_Id=@Task_Id order by Meeting_Status_Date desc ) ,meetdetails.Completion_Date),0) FROM MMS_Meeting_Details meetdetails JOIN MMS_Meeting_Status mmsstatus ON meetdetails.Task_Id = @Task_Id and mmsstatus.Task_Id=@Task_Id WHERE meetdetails.chairperson = @ChairPerson AND meetdetails.Employee_Id= iif(@Participant<>0,@Participant, meetdetails.Employee_Id) and meetdetails.Priority like 'High%' and  meetdetails.Completion_Date between @SDate and @EDate and not exists(SELECT Comments FROM MMS_Meeting_Details WHERE Completion_Date between DATEADD(DAY,-(@ReviewFrequencyID),GETDATE()) and (select top 1 Meeting_Status_Date from MMS_Meeting_Status where Task_Id=@Task_Id order by Meeting_Status_Date desc ) and Task_Id =@Task_Id)) and MeetingDetail.Task_Id = @Task_Id and Priority like 'High%') as HighDelay,

 
  (select count(Task_Id) as MediumDelay from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId 
  where NOT Exists(SELECT ISNULL(DateDiff(DAY, (select top 1 Meeting_Status_Date from MMS_Meeting_Status where Task_Id=@Task_Id order by Meeting_Status_Date desc ) ,meetdetails.Completion_Date),0) FROM MMS_Meeting_Details meetdetails JOIN MMS_Meeting_Status mmsstatus ON meetdetails.Task_Id = @Task_Id and mmsstatus.Task_Id=@Task_Id WHERE meetdetails.chairperson = @ChairPerson AND meetdetails.Employee_Id= iif(@Participant<>0,@Participant, meetdetails.Employee_Id) and meetdetails.Priority like 'Medium%' and  meetdetails.Completion_Date between @SDate and @EDate and not exists(SELECT Comments FROM MMS_Meeting_Details WHERE Completion_Date between DATEADD(DAY,-(@ReviewFrequencyID),GETDATE()) and (select top 1 Meeting_Status_Date from MMS_Meeting_Status where Task_Id=@Task_Id order by Meeting_Status_Date desc ) and Task_Id =@Task_Id)) and MeetingDetail.Task_Id = @Task_Id and Priority like 'Mediu%') as MediumDelay,

  

  (select count(Task_Id) as LowDelay from MMS_Meeting_Details MeetingDetail
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId   
   AND MeetingDetail.Task = StatusUpdate.Task            
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId 
   where NOT Exists(SELECT ISNULL(DateDiff(DAY, (select top 1 Meeting_Status_Date from MMS_Meeting_Status where Task_Id=@Task_Id order by Meeting_Status_Date desc ) ,meetdetails.Completion_Date),0) FROM MMS_Meeting_Details meetdetails JOIN MMS_Meeting_Status mmsstatus ON meetdetails.Task_Id = @Task_Id and mmsstatus.Task_Id=@Task_Id WHERE meetdetails.chairperson = @ChairPerson AND meetdetails.Employee_Id= iif(@Participant<>0,@Participant, meetdetails.Employee_Id) and meetdetails.Priority like 'Low%' and  meetdetails.Completion_Date between @SDate and @EDate and not exists(SELECT Comments FROM MMS_Meeting_Details WHERE Completion_Date between DATEADD(DAY,-(@ReviewFrequencyID),GETDATE()) and (select top 1 Meeting_Status_Date from MMS_Meeting_Status where Task_Id=@Task_Id order by Meeting_Status_Date desc ) and Task_Id =@Task_Id)) and MeetingDetail.Task_Id = @Task_Id and Priority like 'Low%') as LowDelay

END
GO
PRINT N'Creating [dbo].[sp_getCompReport_2442018]...';


GO


CREATE procedure [dbo].[sp_getCompReport_2442018]
@SDate DateTime, @EDate DateTime,@ChairPerson int,@Participant int
 AS  
 --[dbo].[sp_getCompReport_2442018] '2017-3-1','2018-8-16',3,0
 BEGIN  
SELECT DISTINCT
(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as HighAssigned from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority = 'High'  
AND MeetingDetail.chairperson = @ChairPerson 
AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) 
AND MeetingDetail.Completion_Date between @SDate and @EDate ) as HighAssigned ,

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as MediumAssigned from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority ='Medium' AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as MediumAssigned, 

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as LowAssigned from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority = 'Low' AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as LowAssigned, 

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as HighCompleted from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority ='High' and MeetingDetail.Status = 2 AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as HighCompleted,

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as MediumCompleted from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority = 'Medium' and MeetingDetail.Status = 2 AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as MediumCompleted, 
   
(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as LowCompleted from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority like 'Low' and MeetingDetail.Status = 2 AND MeetingDetail.chairperson = @ChairPerson  AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as LowCompleted, 

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as HighInProgress from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority ='High' and MeetingDetail.Status = 3 AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as HighInProgress, 

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as MediumInProgress from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority ='Medium' and MeetingDetail.Status = 3 AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as MediumInProgress, 

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as LowInProgress from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority ='Low' and MeetingDetail.Status = 3 AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as LowInProgress, 

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as HighYetToBegin from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority like 'High' and MeetingDetail.Status = 5 AND MeetingDetail.chairperson =@ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as HighYetToBegin, 

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as MediumYetToBegin from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority like'Medium' and MeetingDetail.Status = 5 AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as MediumYetToBegin,

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as LowYetToBegin from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority ='Low' and MeetingDetail.Status = 5 AND MeetingDetail.chairperson = @ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as LowYetToBegin,

   (SELECT ISNULL(AVG(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as HighAVERAGEDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE  meetdetails.Priority ='High' AND meetdetails.chairperson = @ChairPerson AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as HighAVERAGEDays, 
   
   (SELECT ISNULL(AVG(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as MediumAVERAGEDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE  meetdetails.Priority = 'Medium' AND meetdetails.chairperson = @ChairPerson AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as MediumAVERAGEDays,

 (SELECT ISNULL(AVG(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as LowAVERAGEDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE  meetdetails.Priority = 'Low' AND meetdetails.chairperson = @ChairPerson AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as LowAVERAGEDays, 

 (SELECT ISNULL(MAX(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as HighMAXIMUMDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE  meetdetails.Priority = 'High' AND meetdetails.chairperson = @ChairPerson AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as HighMAXIMUMDays, 
   
   (SELECT ISNULL(MAX(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as MediumMAXIMUMDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE  meetdetails.Priority = 'Medium' AND meetdetails.chairperson = @ChairPerson
AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as MediumMAXIMUMDays,

 (SELECT ISNULL(MAX(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as LowMAXIMUMDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE  meetdetails.Priority ='Low' AND meetdetails.chairperson = @ChairPerson AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as LowMAXIMUMDays,

(SELECT ISNULL(MIN(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as HighMINIMUMDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId
 JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE meetdetails.Priority ='High' AND meetdetails.chairperson = @ChairPerson AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as HighMINIMUMDays , 
   
   (SELECT ISNULL(MIN(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as MediumMINIMUMDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId
    JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE  meetdetails.Priority = 'Medium' AND meetdetails.chairperson = @ChairPerson AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as MediumMINIMUMDays ,

 (SELECT ISNULL(MIN(DateDiff(DAY, mmsmaster.Meeting_Date,meetdetails.Completion_Date)),0) as LowMINIMUMDays FROM MMS_Meeting_Details meetdetails  
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   meetdetails.Employee_Id = StatusUpdate.EmployeeId                
   AND meetdetails.Task = StatusUpdate.Task                 
   and meetdetails.IsDeleted=0      
   AND meetdetails.Meeting_Id = StatusUpdate.MeetingId
 JOIN MMS_Meeting_Master mmsmaster ON meetdetails.Meeting_Id = mmsmaster.Meeting_Id WHERE meetdetails.Priority = 'Low' AND meetdetails.chairperson = @ChairPerson AND meetdetails.Participant= iif(@Participant<>0,@Participant, meetdetails.Participant) AND meetdetails.Completion_Date between @SDate and @EDate and meetdetails.IsDeleted=0) as LowMINIMUMDays ,

 --New

 (select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as HighClosed from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
 where MeetingDetail.Priority = 'High' and MeetingDetail.Status = 1 AND MeetingDetail.chairperson =@ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as HighClosed,

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as HighReOpened from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority = 'High' and MeetingDetail.Status = 4 AND MeetingDetail.chairperson =@ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as HighReOpened,

 (select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as MediumClosed from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
 where MeetingDetail.Priority = 'Medium' and MeetingDetail.Status = 1 AND MeetingDetail.chairperson =@ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as MediumClosed,

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as MediumReOpened from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority = 'Medium' and MeetingDetail.Status = 4 AND MeetingDetail.chairperson =@ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as MediumReOpened,

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as LowClosed from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority = 'Low' and MeetingDetail.Status = 1 AND MeetingDetail.chairperson =@ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as LowClosed,

(select Distinct(ISNULL(count(StatusUpdate.MeetingID),0)) as LowReOpened from MMS_Meeting_Details MeetingDetail 
INNER JOIN (SELECT DISTINCT MeetingId, EmployeeId, Task from MMS_Meeting_Status_Update) StatusUpdate ON 
   MeetingDetail.Employee_Id = StatusUpdate.EmployeeId                
   AND MeetingDetail.Task = StatusUpdate.Task                 
   and MeetingDetail.IsDeleted=0      
   AND MeetingDetail.Meeting_Id = StatusUpdate.MeetingId  
where MeetingDetail.Priority = 'Low' and MeetingDetail.Status = 4 AND MeetingDetail.chairperson =@ChairPerson AND MeetingDetail.Participant= iif(@Participant<>0,@Participant, MeetingDetail.Participant) AND MeetingDetail.Completion_Date between @SDate and @EDate ) as LowReOpened

--  exec sp_getCompReport_2442018 @SDate='2017-03-01',@EDate='2018-03-1',@ChairPerson='Charu',@Participant='abc',@Priority='ALL'

END


--exec sp_getCompReport_2442018 '2017-3-1','2018-7-12','10013',0
GO
PRINT N'Creating [dbo].[sp_getname_EmployeeMaster]...';


GO


CREATE PROCEDURE [dbo].[sp_getname_EmployeeMaster]  
@User [varchar](50)
  
AS  
BEGIN  
	SELECT
		[dbo].[Employee_Master].[EmployeeFirstName] + ' ' +
		[dbo].[Employee_Master].[EmployeeLastName]
	FROM
		[dbo].[Employee_Master]
	WHERE
		[dbo].[Employee_Master].[LoginUserName] = @User
END  
RETURN
GO
PRINT N'Creating [dbo].[sp_insert_Attachment]...';


GO


CREATE PROCEDURE [dbo].[sp_insert_Attachment]
@Mid INT,
@Fname VARCHAR(50),
@Fextension VARCHAR(10),
@File IMAGE
AS
BEGIN
	INSERT INTO [dbo].MMS_Attachment
	(
		[dbo].MMS_Attachment.Meeting_Id,
		[dbo].MMS_Attachment.MMS_FileName,
		[dbo].MMS_Attachment.MMS_FileExtension,
		[dbo].MMS_Attachment.MMS_File
	)
	VALUES
	(
		@Mid,
		@Fname,
		@Fextension,
		@File
	)
RETURN
END
GO
PRINT N'Creating [dbo].[sp_insert_EmployeeAttachments]...';


GO



CREATE PROCEDURE [dbo].[sp_insert_EmployeeAttachments]
@Mid INT,
@Fname VARCHAR(50),
@Fextension VARCHAR(10),
@File IMAGE,
@IsActive bit
AS
BEGIN
	INSERT INTO [dbo].MMS_Employee_Attachment
	(
		[dbo].MMS_Employee_Attachment.Id,
		[dbo].MMS_Employee_Attachment.MMS_FileName,
		[dbo].MMS_Employee_Attachment.MMS_FileExtension,
		[dbo].MMS_Employee_Attachment.MMS_File,
		[dbo].MMS_Employee_Attachment.IsActive
	)
	VALUES
	(
		@Mid,
		@Fname,
		@Fextension,
		@File,
		@IsActive
	)
RETURN
END
GO
PRINT N'Creating [dbo].[sp_insert_EmployeeMaster]...';


GO



CREATE PROCEDURE [dbo].[sp_insert_EmployeeMaster]      

@CompanyICode [int]
,@DepartmentICode [int]
,@DesignationICode [int]
,@EmployeeNumber [varchar](10)
,@EmployeeFirstName [varchar](50)
,@EmployeeLastName [varchar](50)
,@EmployeeDisplayName [varchar](20)
,@EmployeeCurrentAddress1 [varchar](100)
,@EmployeeCurrentAddress2 [varchar](100)
,@EmployeeCurrentCity [varchar](50)
,@EmployeeCurrentState [varchar](25)
,@EmployeeCurrentCountry [varchar](25)
,@EmployeeCurrentPinCode [varchar](20)
,@EmployeeCurrentPhoneNo [varchar](20)
,@IsSameAsCurrentAddress bit
,@EmployeePermanentAddress1 [varchar](100)
,@EmployeePermanentAddress2 [varchar](100)
,@EmployeePermanentCity [varchar](50)
,@EmployeePermanentState [varchar](25)
,@EmployeePermanentCountry [varchar](25)
,@EmployeePermanentPinCode [varchar](20)
,@EmployeePermanentPhoneNo [varchar](20)
,@EmployeeMobileNo [varchar](20)
,@EmployeeFatherName [varchar](50)
,@EmployeeDateofBirth [datetime]
,@EmployeePersonalEmailId [varchar](100)
,@EmployeeDateOfJoining [datetime]
,@EmployeeCorporateEmailId [varchar](100)
,@EmployeeIM [varchar](50)
,@LoginUserName [varchar](25)
,@LoginPassword [varchar](25)
,@EmployeeBloodGroupId [int]
,@EmployeePANNo [varchar](25)
,@EmployeePFNo [varchar](25)
,@EmployeeESINo [varchar](25)
,@EmployeeBankName [varchar](50)
,@EmployeeBankAccountNo [varchar](25)
,@EmployeeMaritalStatus bit
,@EmployeePrimarySkill [varchar](50)
,@EmployeePreviousEmployer [varchar](100)
,@EmployeePreviousExperienceYears [int]
,@EmployeePreviousExperienceMonths [int]
,@EmployeeReference1Remarks [varchar](200)
,@EmployeeReference2Remarks [varchar](200)
,@EmployeeBioData [image]
,@DocumentExtension [char](10)
,@EmployeePhoto [image]
,@PhotoExtension [char](10)
,@EmployeeDateofLeaving [datetime]
,@EmployeeReasonforLeaving [varchar](200)
,@IsActive bit
,@CreatedBy int
,@CreatedDate [datetime]
,@ModifiedBy [int]
,@ModifiedDate [datetime]
,@SwipeICode [int]
,@Location [char](2)
,@Groupid [int]
,@shiftid [int]
,@originalname [varchar](100)
,@pseudo bit
,@currenttechnology [int]
,@picture [image]
,@primaryskillstreamid [int]
,@empphoto [varchar](2000)
,@nightshift bit

AS      
     
--DECLARE @EmpNoCount INT
--DECLARE @DisNameCount varchar(50)

--SET @EmpNoCount =( SELECT count(*) FROM [dbo].[Employee_Master] Where [dbo].[Employee_Master].[EmployeeNumber] = @EmployeeNumber)
--SET @EmpNoCount =( SELECT count(*) FROM [dbo].[Employee_Master] Where [dbo].[Employee_Master].[EmployeeDisplayName] = @EmployeeDisplayName)


--IF @EmpNoCount = 1 and @DisNameCount = 1
--BEGIN
 BEGIN  
 INSERT INTO [dbo].[Employee_Master]    
 (      
  [dbo].[Employee_Master].[CompanyICode]
,[dbo].[Employee_Master].[DepartmentICode]
,[dbo].[Employee_Master].[DesignationICode]
,[dbo].[Employee_Master].[EmployeeNumber]
,[dbo].[Employee_Master].[EmployeeFirstName]
,[dbo].[Employee_Master].[EmployeeLastName]
,[dbo].[Employee_Master].[EmployeeDisplayName]
,[dbo].[Employee_Master].[EmployeeCurrentAddress1]
,[dbo].[Employee_Master].[EmployeeCurrentAddress2]
,[dbo].[Employee_Master].[EmployeeCurrentCity]
,[dbo].[Employee_Master].[EmployeeCurrentState]
,[dbo].[Employee_Master].[EmployeeCurrentCountry]
,[dbo].[Employee_Master].[EmployeeCurrentPinCode]
,[dbo].[Employee_Master].[EmployeeCurrentPhoneNo]
,[dbo].[Employee_Master].[IsSameAsCurrentAddress]
,[dbo].[Employee_Master].[EmployeePermanentAddress1]
,[dbo].[Employee_Master].[EmployeePermanentAddress2]
,[dbo].[Employee_Master].[EmployeePermanentCity]
,[dbo].[Employee_Master].[EmployeePermanentState]
,[dbo].[Employee_Master].[EmployeePermanentCountry]
,[dbo].[Employee_Master].[EmployeePermanentPinCode]
,[dbo].[Employee_Master].[EmployeePermanentPhoneNo]
,[dbo].[Employee_Master].[EmployeeMobileNo]
,[dbo].[Employee_Master].[EmployeeFatherName]
,[dbo].[Employee_Master].[EmployeeDateofBirth]
,[dbo].[Employee_Master].[EmployeePersonalEmailId]
,[dbo].[Employee_Master].[EmployeeDateOfJoining]
,[dbo].[Employee_Master].[EmployeeCorporateEmailId]
,[dbo].[Employee_Master].[EmployeeIM]
,[dbo].[Employee_Master].[LoginUserName]
,[dbo].[Employee_Master].[LoginPassword]
,[dbo].[Employee_Master].[EmployeeBloodGroupId]
,[dbo].[Employee_Master].[EmployeePANNo]
,[dbo].[Employee_Master].[EmployeePFNo]
,[dbo].[Employee_Master].[EmployeeESINo]
,[dbo].[Employee_Master].[EmployeeBankName]
,[dbo].[Employee_Master].[EmployeeBankAccountNo]
,[dbo].[Employee_Master].[EmployeeMaritalStatus]
,[dbo].[Employee_Master].[EmployeePrimarySkill]
,[dbo].[Employee_Master].[EmployeePreviousEmployer]
,[dbo].[Employee_Master].[EmployeePreviousExperienceYears]
,[dbo].[Employee_Master].[EmployeePreviousExperienceMonths]
,[dbo].[Employee_Master].[EmployeeReference1Remarks]
,[dbo].[Employee_Master].[EmployeeReference2Remarks]
,[dbo].[Employee_Master].[EmployeeBioData]
,[dbo].[Employee_Master].[DocumentExtension]
,[dbo].[Employee_Master].[EmployeePhoto]
,[dbo].[Employee_Master].[PhotoExtension]
,[dbo].[Employee_Master].[EmployeeDateofLeaving]
,[dbo].[Employee_Master].[EmployeeReasonforLeaving]
,[dbo].[Employee_Master].[IsActive]
,[dbo].[Employee_Master].[CreatedBy]
,[dbo].[Employee_Master].[CreatedDate]
,[dbo].[Employee_Master].[ModifiedBy]
,[dbo].[Employee_Master].[ModifiedDate]
,[dbo].[Employee_Master].[SwipeICode]
,[dbo].[Employee_Master].[Location]
,[dbo].[Employee_Master].[Group_id]
,[dbo].[Employee_Master].[shift_id]
,[dbo].[Employee_Master].[original_name]
,[dbo].[Employee_Master].[pseudo]
,[dbo].[Employee_Master].[current_technology]
,[dbo].[Employee_Master].[picture]
,[dbo].[Employee_Master].[primary_skill_stream_id]
,[dbo].[Employee_Master].[emp_photo]
,[dbo].[Employee_Master].[night_shift]
  )      
 VALUES      
 (      
 @CompanyICode   
,@DepartmentICode
,@DesignationICode
,@EmployeeNumber
,@EmployeeFirstName
,@EmployeeLastName
,@EmployeeDisplayName
,@EmployeeCurrentAddress1
,@EmployeeCurrentAddress2
,@EmployeeCurrentCity
,@EmployeeCurrentState
,@EmployeeCurrentCountry
,@EmployeeCurrentPinCode
,@EmployeeCurrentPhoneNo
,@IsSameAsCurrentAddress
,@EmployeePermanentAddress1
,@EmployeePermanentAddress2
,@EmployeePermanentCity
,@EmployeePermanentState
,@EmployeePermanentCountry
,@EmployeePermanentPinCode
,@EmployeePermanentPhoneNo
,@EmployeeMobileNo
,@EmployeeFatherName
,@EmployeeDateofBirth
,@EmployeePersonalEmailId
,@EmployeeDateOfJoining
,@EmployeeCorporateEmailId
,@EmployeeIM
,@LoginUserName
,@LoginPassword
,@EmployeeBloodGroupId
,@EmployeePANNo
,@EmployeePFNo
,@EmployeeESINo
,@EmployeeBankName
,@EmployeeBankAccountNo
,@EmployeeMaritalStatus
,@EmployeePrimarySkill
,@EmployeePreviousEmployer
,@EmployeePreviousExperienceYears
,@EmployeePreviousExperienceMonths
,@EmployeeReference1Remarks
,@EmployeeReference2Remarks
,@EmployeeBioData
,@DocumentExtension
,@EmployeePhoto
,@PhotoExtension
,@EmployeeDateofLeaving
,@EmployeeReasonforLeaving
,@IsActive
,@CreatedBy
,@CreatedDate
,@ModifiedBy
,@ModifiedDate
,@SwipeICode
,@Location
,@Groupid
,@shiftid
,@originalname
,@pseudo
,@currenttechnology
,@picture
,@primaryskillstreamid
,@empphoto
,@nightshift

 )


 -- Insert into MMS_Employee_Master based on Employee_Master

 DECLARE @EmployeeMasterId int;
 DECLARE @Department varchar(100);

 SET @EmployeeMasterId = SCOPE_IDENTITY();
 
IF @DepartmentICode='1'
BEGIN
SET @Department ='Management' 
END
IF @DepartmentICode='2'
BEGIN
SET @Department ='Human Resource' 
END
IF @DepartmentICode='3'
BEGIN
SET @Department ='Accounts and Administration' 
END
IF @DepartmentICode='4'
BEGIN
SET @Department ='Marketing' 
END
IF @DepartmentICode='5'
BEGIN
SET @Department ='Software Developer' 
END
IF @DepartmentICode='7'
BEGIN
SET @Department ='System Administration' 
END
IF @DepartmentICode='10'
BEGIN
SET @Department ='Technical' 
END
IF @DepartmentICode='11'
BEGIN
SET @Department ='Accounts' 
END
IF @DepartmentICode='12'
BEGIN
SET @Department ='Administration' 
END
IF @DepartmentICode='13'
BEGIN
SET @Department ='IT Recruitment' 
END
IF @DepartmentICode='14'
BEGIN
SET @Department ='Processing' 
END

 INSERT INTO [dbo].[MMS_Employee_Master]    
 (

 [dbo].[MMS_Employee_Master].[Employee_FirstName]
      ,[dbo].[MMS_Employee_Master].[Employee_LastName]
      ,[dbo].[MMS_Employee_Master].[Employee_DateofBirth]
      ,[dbo].[MMS_Employee_Master].[Employee_Address]
      ,[dbo].[MMS_Employee_Master].[Employee_Department]
      ,[dbo].[MMS_Employee_Master].[Employee_Qualification]
      ,[dbo].[MMS_Employee_Master].[Employee_DateofJoin]
      ,[dbo].[MMS_Employee_Master].[Employee_ContactNo]
      ,[dbo].[MMS_Employee_Master].[Employee_Status]
      ,[dbo].[MMS_Employee_Master].[Employee_ModifyDate]
      ,[dbo].[MMS_Employee_Master].[Employee_EmailAddress]
      ,[dbo].[MMS_Employee_Master].[profile_employee_id]
 )
 values
 (

 @EmployeeFirstName
,@EmployeeLastName
,@EmployeeDateofBirth
,@EmployeeCurrentAddress1
,@Department
,@EmployeePrimarySkill
,@EmployeeDateOfJoining
,@EmployeeMobileNo
,@IsActive
,@ModifiedDate
,@EmployeeCorporateEmailId
,@EmployeeMasterId

 )

END

--END
GO
PRINT N'Creating [dbo].[sp_insert_Meeting_Participant]...';


GO


CREATE PROCEDURE [dbo].[sp_insert_Meeting_Participant]
@MeetingId_In Int,
@ParticipantId_In Int,
@ParticipantName_In Varchar(50)
AS
BEGIN
	INSERT INTO [dbo].MMS_Meeting_Participant
	(
		[dbo].MMS_Meeting_Participant.Meeting_Id,
		[dbo].MMS_Meeting_Participant.Participant_Id,
		[dbo].MMS_Meeting_Participant.Participant_Name
	)
	VALUES
	(
		@MeetingId_In, 
		@ParticipantId_In,
		@ParticipantName_In 
	)
RETURN
END
GO
PRINT N'Creating [dbo].[sp_insert_Meeting_Status]...';


GO

CREATE PROCEDURE [dbo].[sp_insert_Meeting_Status]
 @EmpId_In						[INT],  
 @Status_Task_In				[varchar](250),  
 @Status_ResponsiblePerson_In	int,  
 --@Status_Date_In				[varchar](50),  
 @Status_Date_In                [datetime],
 @Status_Comments_In			[varchar](MAX),  
-- @Meeting_Status_In				[varchar](50),
@Meeting_status_In INT,
 @Meeting_Status_Hours			[varchar](50),
 @Meeting_Id					[INT],  
 @Commented_By					[INT],
 @Commented_By_ID				[INT],
 @Task_Id						[INT]

 AS  
	BEGIN
		BEGIN TRANSACTION  
  		INSERT INTO [dbo].[MMS_Meeting_Status]  
   			(	[dbo].[MMS_Meeting_Status].[Meeting_Status_Employee_Id],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status_Task],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status_ResponsiblePerson],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status_Date],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status_Comments],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status],
   				[dbo].[MMS_Meeting_Status].[Meeting_Id],
				[dbo].[MMS_Meeting_Status].[Meeting_Status_Hours],
				[dbo].[MMS_Meeting_Status].[Commented_By],				
				[dbo].[MMS_Meeting_Status].[Commented_By_ID],
				[dbo].[MMS_Meeting_Status].[Task_Id]
			)
   				 
  		VALUES  
   			(	@EmpId_In,  
   				@Status_Task_In,  
   				@Status_ResponsiblePerson_In,  
   				--Convert(varchar(50),@Status_Date_In,109),  	
				Format(getdate(),'M/dd/yyyy h:mm:ss tt'),
				--@Status_Date_In,			
   				@Status_Comments_In,  
   				@Meeting_Status_In,
				@Meeting_Id,
				@Meeting_Status_Hours,
				@Commented_By,
				@Commented_By_ID,
				@Task_Id
   			)  
		Update  
			dbo.MMS_Meeting_Details
		Set  
			Status =@Meeting_Status_In   ,
			--below line has been added to check---
			 Comments=@Status_Comments_In
		where Task_Id=@Task_Id
		--Where    
		--	Meeting_Id=@Meeting_Id     
		--AND    
		--	 Employee_Id=@EmpId_In    
		--AND    
		--	Task = @Status_Task_In 
		--MMS_Track_ReviewTasks



		IF @@ERROR != 0 BEGIN --check @@ERROR variable after each DML statements.. 			
			ROLLBACK TRANSACTION --RollBack Transaction if Error..
			RETURN
		END
		ELSE BEGIN
			COMMIT TRANSACTION --finally, Commit the transaction if Success..
			RETURN
		END
 	END  
RETURN
GO
PRINT N'Creating [dbo].[sp_insert_meeting_status_24062014_1]...';


GO


CREATE PROCEDURE [dbo].[sp_insert_meeting_status_24062014_1]  
 @EmpId_In [int],  
 @Status_Task_In [varchar](250),  
 @Status_ResponsiblePerson_In [varchar](50),  
 @Status_Date_In [varchar](50),  
 @Status_Comments_In [varchar](250),  
 --@Meeting_Status_In [varchar](50),
 @Meeting_Status_In INT,
 @Meeting_Status_Hours	VARCHAR(50),
 @Meeting_Id INT,
 @Task_Id int
 AS  
	BEGIN
		BEGIN TRANSACTION  
  		INSERT INTO [dbo].[MMS_Meeting_Status]  
   			(	[dbo].[MMS_Meeting_Status].[Meeting_Status_Employee_Id],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status_Task],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status_ResponsiblePerson],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status_Date],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status_Comments],  
   				[dbo].[MMS_Meeting_Status].[Meeting_Status],
   				[dbo].[MMS_Meeting_Status].[Meeting_Id],
				Meeting_Status_Hours,[dbo].[MMS_Meeting_Status].Task_Id

			)
   				 
  		VALUES  
   			(	@EmpId_In,  
   				@Status_Task_In,  
   				@Status_ResponsiblePerson_In,  
   				@Status_Date_In,  
   				@Status_Comments_In,  
   				@Meeting_Status_In,
				@Meeting_Id,
				@Meeting_Status_Hours,@Task_Id
   			)  
		Update  
			dbo.MMS_Meeting_Details
		Set  
			Status =@Meeting_Status_In   
		Where    
			Meeting_Id=@Meeting_Id     
		AND    
			 Employee_Id=@EmpId_In    
		AND    
			Task = @Status_Task_In 
		AND
		Task_Id=@Task_Id
			

		IF @@ERROR != 0 --check @@ERROR variable after each DML statements..

			BEGIN

				ROLLBACK TRANSACTION --RollBack Transaction if Error..

				RETURN

			END

			ELSE

				BEGIN

				COMMIT TRANSACTION --finally, Commit the transaction if Success..

				RETURN

			END
 	END
GO
PRINT N'Creating [dbo].[sp_insert_MeetingDetails]...';


GO


    
CREATE PROCEDURE [dbo].[sp_insert_MeetingDetails]      
@Mid [int],      
@Eid [int],      
@Cperson int,       
@Participant int,      
@Task [varchar](250),      
@Ctime [datetime],      
@Priority  [varchar](50),      
@Comments  [varchar](max),     
@Category  [varchar](max),    
@Isread   varchar(10),  
@seen bit ,
@istemplate bit   ,
@NextRevDt [datetime],      
@Revfreq  [varchar](50)

--,

--@Review_Status bit



AS      
BEGIN      
 INSERT INTO [dbo].MMS_Meeting_Details      
 (      
  [dbo].MMS_Meeting_Details.[Meeting_Id],      
  [dbo].MMS_Meeting_Details.[Employee_Id],      
  [dbo].MMS_Meeting_Details.[Chairperson],      
  [dbo].MMS_Meeting_Details.[Participant],      
  [dbo].MMS_Meeting_Details.[Task],      
  [dbo].MMS_Meeting_Details.[Completion_Date],      
  [dbo].MMS_Meeting_Details.[Priority],      
  [dbo].MMS_Meeting_Details.[Comments],      
  [dbo].MMS_Meeting_Details.[Category],    
  [dbo].MMS_Meeting_Details.[is_read_notification] ,   
  [dbo].MMS_Meeting_Details.[seen],
  [dbo].MMS_meeting_details.[is_template]  ,
  [dbo].MMS_meeting_details.[NextReviewDate]  ,
  [dbo].MMS_meeting_details.[ReviewFrequencyID]  


  --,


  --[dbo].MMS_Meeting_Details.Review_Status
  )      
 VALUES      
 (      
  @Mid,      
  @Eid,      
  @Cperson,      
  @Participant,      
  @Task,      
  @Ctime,      
  @Priority,      
  @Comments,    
  @Category,    
  @Isread,  
  @seen,
 @istemplate,
 @NextRevDt,
 @Revfreq

 --,

 -- 0


 )      
--RETURN      
SELECT Task_Id FROM MMS_Meeting_Details WHERE Task_Id = SCOPE_IDENTITY();
END
GO
PRINT N'Creating [dbo].[sp_insert_MeetingDetails1]...';


GO


CREATE PROCEDURE [dbo].[sp_insert_MeetingDetails1]      
@Mid [int],      
@Eid [int],      
@Cperson [int],       
@Participant [int],      
@Task [varchar](250),      
@Ctime [datetime],      
@Priority  [varchar](50), 
@Status [int],      
@Comments  [varchar](max),     
@Category  [varchar](max),    
@Isread   varchar(10),  
@seen bit ,
@istemplate bit   ,
@NextRevDt [datetime],      
@Revfreq  [varchar](50),
@TemplateID [int]

--,@Review_Status bit


AS      
     
--	 IF @Revfreq = '1' BEGIN      
--  SET @Revfreq='1'    
-- END 
--  IF @Revfreq = '7' BEGIN      
--  SET @Revfreq='2'    
-- END 
--  IF @Revfreq = '14' BEGIN      
--  SET @Revfreq='3'    
-- END 
--  IF @Revfreq = '30' BEGIN      
--  SET @Revfreq='4'    
-- END 
--  IF @Revfreq = '90' BEGIN      
--  SET @Revfreq='5'    
-- END 
-- IF @Revfreq = '180' BEGIN      
--  SET @Revfreq='6'    
-- END
-- IF @Revfreq = '365' BEGIN      
--  SET @Revfreq='7'    
-- END

 BEGIN  
 INSERT INTO [dbo].MMS_Meeting_Details      
 (      
  [dbo].MMS_Meeting_Details.[Meeting_Id],      
  [dbo].MMS_Meeting_Details.[Employee_Id],      
  [dbo].MMS_Meeting_Details.[ChairPerson],          
  [dbo].MMS_Meeting_Details.[Participant],      
  [dbo].MMS_Meeting_Details.[Task],      
  [dbo].MMS_Meeting_Details.[Completion_Date],      
  [dbo].MMS_Meeting_Details.[Priority], 
  [dbo].MMS_Meeting_Details.[Status],     
  [dbo].MMS_Meeting_Details.[Comments],      
  [dbo].MMS_Meeting_Details.[Category],    
  [dbo].MMS_Meeting_Details.[is_read_notification] ,   
  [dbo].MMS_Meeting_Details.[seen],
  [dbo].MMS_meeting_details.[is_template]  ,
  [dbo].MMS_meeting_details.[NextReviewDate]  ,
  [dbo].MMS_meeting_details.[ReviewFrequencyID],
  [dbo].MMS_meeting_details.[TemplateID]


--  [dbo].MMS_Meeting_Details.Review_Status

  )      
 VALUES      
 (      
  @Mid,      
  @Eid,      
  @Cperson,      
  @Participant,      
  @Task,      
  @Ctime,      
  @Priority, 
  @Status,       
  @Comments,    
  @Category,    
  @Isread,  
  @seen,
 @istemplate,
 @NextRevDt,
 @Revfreq,
 @TemplateID
 
 --, 0

 )

INSERT INTO MMS_Track_ReviewTasks(TaskId,NextReviewDate,ActualReviewedDate,Review_Status)
SELECT MAX(mmd.Task_Id), @NextRevDt,GETDATE(),0
FROM dbo.MMS_Meeting_Details mmd
WHERE Task = @Task

END
GO
PRINT N'Creating [dbo].[sp_insert_MeetingMaster]...';


GO



CREATE PROCEDURE [dbo].[sp_insert_MeetingMaster]        
@Objective_In [varchar](150),        
@Date_In [datetime],        
@Time_In [varchar](50),        
@Venue_In [varchar](40),      
@Type_In [varchar](150),      
@Duration_In [varchar](50),        
@Department_In [varchar](50),        
--@Chairperson_In [varchar](50),   
@Chairperson_In int,   
@Minutes_Of_Meeting_In [varchar](500),       
@Participants_In [int] ,
@Istemplate [bit],
@TemplateID [int]
AS        
BEGIN        
--[Meeting_Objective] is Meeting_Name
--[Meeting_Type] is Meeting_Objective
 INSERT INTO [dbo].MMS_Meeting_Master        
 (   
  [dbo].MMS_Meeting_Master.[Meeting_Objective],        
  [dbo].MMS_Meeting_Master.[Meeting_Date],        
  [dbo].MMS_Meeting_Master.[Meeting_Time],        
  [dbo].MMS_Meeting_Master.[Meeting_Venue],    
  [dbo].MMS_Meeting_Master.[Meeting_Type],    
  [dbo].MMS_Meeting_Master.[Meeting_Duration],        
  [dbo].MMS_Meeting_Master.[Meeting_Department],        
  [dbo].MMS_Meeting_Master.[Meeting_Chairperson],    
  [dbo].MMS_Meeting_Master.[Minutes_Of_Meeting],       
  [dbo].MMS_Meeting_Master.[Meeting_No_Of_Participants] ,
  [dbo].MMS_Meeting_Master.[Istemplate],
  [dbo].MMS_Meeting_Master.[TemplateID]
 )        
 VALUES        
 (   
  @Objective_In,        
  @Date_In,        
  @Time_In,     
  @Venue_In,      
  @Type_In,    
  @Duration_In,        
  @Department_In,        
  @Chairperson_In,   
  @Minutes_Of_Meeting_In,        
  @Participants_In     ,
  @Istemplate,
  @TemplateID
 )        
SELECT Meeting_Id FROM MMS_Meeting_Master WHERE Meeting_Id = SCOPE_IDENTITY();
END
GO
PRINT N'Creating [dbo].[sp_insert_status_update]...';


GO


CREATE PROCEDURE [dbo].[sp_insert_status_update]    
@MeetingId int,    
@EmployeeId int,    
@Task varchar(250),    
--@Status varchar(30),
@Status INT,
@TaskId int    
AS    
BEGIN
	INSERT INTO [dbo].mms_meeting_status_update    
	(
		[dbo].mms_meeting_status_update.MeetingId,
		[dbo].mms_meeting_status_update.EmployeeId,
		[dbo].mms_meeting_status_update.Task,
		[dbo].mms_meeting_status_update.status,
		[dbo].mms_meeting_status_update.TaskId
	)
	VALUES    
	(    
		@MeetingId ,    
		@EmployeeId,    
		@Task ,    
		@Status,
		@TaskId    
	)    
RETURN   
END
GO
PRINT N'Creating [dbo].[sp_notification_count_message]...';


GO


CREATE PROCEDURE [dbo].[sp_notification_count_message]  
@Meeting_Id_In [int]
AS  
 BEGIN  
  SELECT    
  count(*) as totalCounts 
  FROM    
   [dbo].MMS_Meeting_Status  
  WHERE    
   [dbo].MMS_Meeting_Status.Meeting_Id = @Meeting_Id_In   
  END  
RETURN
GO
PRINT N'Creating [dbo].[sp_select_AttendedMeeting_Name]...';


GO


CREATE PROCEDURE [dbo].[sp_select_AttendedMeeting_Name]  
@Employee_Id INT,
@StartDate_In DateTime,
@EndDate_In DateTime  
AS  
 BEGIN  
  SELECT   
   [dbo].MMS_Meeting_Master.Meeting_Objective,  
   [dbo].MMS_Meeting_Master.Meeting_Id   
  FROM  
   [dbo].MMS_Meeting_Master  
  WHERE  
   Meeting_Id IN ( SELECT DISTINCT   
      Meeting_Id  
     FROM   
      MMS_Meeting_Details  
     Where   
      Employee_Id = @Employee_Id)  
   AND
       Meeting_Date between @StartDate_In AND @EndDate_In     
 END
GO
PRINT N'Creating [dbo].[sp_select_Meeting_Id]...';


GO


CREATE PROCEDURE [dbo].[sp_select_Meeting_Id]  
@Chairperson int,
@StartDate_In DateTime,
@EndDate_In DateTime    
AS  
 BEGIN  
  SELECT   
   [dbo].MMS_Meeting_Master.Meeting_Objective,  
   [dbo].MMS_Meeting_Master.Meeting_Id   
  FROM  
   [dbo].MMS_Meeting_Master  
  WHERE  
   [dbo].MMS_Meeting_Master.Meeting_Chairperson=@Chairperson  
  AND
    Meeting_Date between @StartDate_In AND @EndDate_In   
 END  
RETURN
GO
PRINT N'Creating [dbo].[sp_select_Meeting_Name]...';


GO



-- sp_select_meeting_name '3','2017-03-1','2018-11-26','All',0


CREATE PROCEDURE [dbo].[sp_select_Meeting_Name]      
@ChairPerson int,    
@StartDate_In DATETIME,    
@EndDate_In DATETIME,
@priority VARCHAR(20),
--@status VARCHAR(20)   
@status INT
AS      
 BEGIN      
   
    
  if(@priority='All')
    SET @priority='%'
  --if(@status='All')
  -- SET @status='%'
   
   --Convert(varchar(20),[dbo].MMS_Meeting_Details.Participant) As Participant


   
 if @status=0

   SELECT meetingDetails.meeting_id,meetingDetails.employee_id,meetingDetails.Task_Id,meetingDetails.Task,
 
  -- Convert(varchar(20),meetingDetails.participant) as Participant,
  --after change of names to Id, this below code is used to populate the database and the above is commented. 

  (Select EmployeeDisplayName from [dbo].Employee_Master where meetingDetails.Participant=Employee_Master.EmployeeICode) as Participant,


   meetingMaster.meeting_date,meetingDetails.completion_date,meetingDetails.priority,
   --meetingDetails.status, 
    Convert(varchar(20),ts.Name) as status,
   convert(int,datediff(dd,meetingDetails.Completion_Date,Getdate())) as 'Overdue_Days'
    from mms_meeting_master meetingMaster 
   join
   mms_meeting_details meetingDetails
   on meetingMaster.meeting_id=meetingDetails.meeting_id
   full join Task_Status ts on meetingDetails.Status=ts.ID
   where
    meetingMaster.Meeting_chairperson=@ChairPerson
   and 
   meetingDetails.IsDeleted=0
   and
	meetingDetails.Completion_Date BETWEEN @StartDate_In AND @EndDate_In
	and
	meetingDetails.priority like @priority
	 --and meetingDetails.status like @status


	 else if @status!=0

	  SELECT meetingDetails.meeting_id,meetingDetails.employee_id,meetingDetails.Task_Id,meetingDetails.Task,
 
  -- Convert(varchar(20),meetingDetails.participant) as Participant,
  --after change of names to Id, this below code is used to populate the database and the above is commented. 

  (Select EmployeeDisplayName from [dbo].Employee_Master where meetingDetails.Participant=Employee_Master.EmployeeICode) as Participant,


   meetingMaster.meeting_date,meetingDetails.completion_date,meetingDetails.priority,
   --meetingDetails.status, 
   ts.Name as status,
   convert(int,datediff(dd,meetingDetails.Completion_Date,Getdate())) as 'Overdue_Days'
    from mms_meeting_master meetingMaster 
   join
   mms_meeting_details meetingDetails
   on meetingMaster.meeting_id=meetingDetails.meeting_id
   full join Task_Status ts on meetingDetails.Status=ts.ID
   where
    meetingMaster.Meeting_chairperson=@ChairPerson
	and 
   meetingDetails.IsDeleted=0
   and 
	meetingDetails.Completion_Date BETWEEN @StartDate_In AND @EndDate_In
	and
	meetingDetails.priority like @priority
	 and meetingDetails.status like @status
 END      
RETURN
GO
PRINT N'Creating [dbo].[sp_select_Meeting_Participant]...';


GO


CREATE PROCEDURE [dbo].[sp_select_Meeting_Participant]
@MeetingId_In Int
AS
BEGIN
	SELECT
		[dbo].MMS_Meeting_Participant.Participant_Id,
		[dbo].MMS_Meeting_Participant.Participant_Name
	FROM
		[dbo].MMS_Meeting_Participant		
	WHERE
		[dbo].MMS_Meeting_Participant.Meeting_Id=@MeetingId_In
END
RETURN
GO
PRINT N'Creating [dbo].[sp_select_meeting_status]...';


GO


---- exec [sp_select_meeting_status] 11553

CREATE PROCEDURE [dbo].[sp_select_meeting_status]  
--@Meeting_Id_In [int],    
@Status_Task_In  [int] 

--@Status_ResponsiblePerson_In varchar(20)

--@Status_ResponsiblePerson_In int

AS  
 BEGIN  
  SELECT  Meeting_Status_Employee_Id,
Meeting_Status_Task,
Convert(varchar(20),Meeting_Status_ResponsiblePerson) as Meeting_Status_ResponsiblePerson,
--Convert(varchar(20),Meeting_Status_Date,105) as Meeting_Status_Date,
Convert(VARCHAR(20), Meeting_Status_Date, 105) + ' '  + convert(VARCHAR(8), Meeting_Status_Date, 14)  as Meeting_Status_Date,
Meeting_Status_Comments,
--Convert(varchar(20),Meeting_Status) as Meeting_Status,
ts.Name as Meeting_Status,
MMS_Meeting_Status.Meeting_Id,
Meeting_Status_Hours,
Convert(varchar(20),Commented_By) as Commented_By,
Commented_By_ID,
MeetingStatusAutoId,
MMS_Meeting_Status.Task_Id
--from
--  select * from [dbo].MMS_Meeting_Status.*  
  FROM    
   [dbo].MMS_Meeting_Status 
   LEFT JOIN Task_Status ts on ts.ID=[dbo].MMS_Meeting_Status .Meeting_Status 
   --join MMS_Meeting_Details MMD on MMD.Task_Id=MMS_Meeting_Status.Task_Id
  WHERE    
  -- [dbo].MMS_Meeting_Status.Meeting_Id = @Meeting_Id_In   
  --AND  
     [dbo].MMS_Meeting_Status.Task_Id=@Status_Task_In 
	 
	-- or MMD.Task_Id=@Status_Task_In
	
 -- AND COnvert(varchar(20),[dbo].MMS_Meeting_Status.Meeting_Status_ResponsiblePerson)=@Status_ResponsiblePerson_In

  
  
  ORDER BY  
   [dbo].MMS_Meeting_Status.Meeting_Status_Date DESC  
 END
GO
PRINT N'Creating [dbo].[sp_select_mms_meeting_details]...';


GO



-- exec [sp_select_mms_meeting_details] 97511

CREATE PROCEDURE [dbo].[sp_select_mms_meeting_details]  
@Meeting_Id [Int]
AS   
	BEGIN  
		SELECT 
		--Convert(varchar(25),[dbo].MMS_Meeting_Details.Chairperson) as Chairperson,

		  (Select EmployeeDisplayName from [dbo].Employee_Master where [dbo].MMS_Meeting_Details.Chairperson=Employee_Master.EmployeeICode) as Chairperson,

			[dbo].mms_meeting_Details.Task_Id,
			[dbo].mms_meeting_Details.Meeting_Id,
			[dbo].mms_meeting_Details.Employee_Id,
			--[dbo].mms_meeting_Details.Chairperson,
			-- (Select EmployeeDisplayName from [dbo].Employee_Master where [dbo].MMS_Meeting_Details.Chairperson=Employee_Master.EmployeeICode) as Chairperson,

			  (Select EmployeeDisplayName from [dbo].Employee_Master where [dbo].MMS_Meeting_Details.Participant=Employee_Master.EmployeeICode) as Participant,
			--Convert(varchar(25),[dbo].mms_meeting_Details.Participant) as Participant,
			
			[dbo].mms_meeting_Details.Task,
			[dbo].mms_meeting_Details.Completion_Date,
			[dbo].mms_meeting_Details.Priority,
			--[dbo].mms_meeting_Details.Status,
			ts.Name as Status
			,[dbo].mms_meeting_Details.Comments,
			[dbo].mms_meeting_Details.Percentage_Completed,
			--[dbo].mms_meeting_Details.Category,
			mmc.CategoryName as Category,
			[dbo].mms_meeting_Details.is_read_notification,
			[dbo].mms_meeting_Details.seen,
			[dbo].mms_meeting_Details.is_template,
			[dbo].mms_meeting_Details.NextReviewDate,
			[dbo].mms_meeting_Details.ReviewFrequencyID,
			[dbo].mms_meeting_Details.IsDeleted			
		FROM 
			[dbo].mms_meeting_Details   
			LEFT JOIN Task_Status ts on ts.ID=mms_meeting_Details.Status
			left join MMS_Meeting_Category mmc on mmc.ID= mms_meeting_Details.Category
  		WHERE 
			[dbo].mms_meeting_Details.Meeting_Id=@Meeting_Id 
	END  
RETURN
GO
PRINT N'Creating [dbo].[sp_select_mms_meeting_master]...';


GO


CREATE PROCEDURE [dbo].[sp_select_mms_meeting_master]  
@Meeting_Id [Int]
AS   
	BEGIN  --Convert(varchar(25),[dbo].MMS_Meeting_Details.Chairperson) as Chairperson,
		SELECT 
			[dbo].mms_meeting_master.Meeting_Id,
			[dbo].mms_meeting_master.Meeting_Objective,
			[dbo].mms_meeting_master.Meeting_Date,
			[dbo].mms_meeting_master.Meeting_Time,
			[dbo].mms_meeting_master.Meeting_Venue,
			[dbo].mms_meeting_master.Meeting_Type,
			[dbo].mms_meeting_master.Meeting_Duration,
			[dbo].mms_meeting_master.Meeting_Department,
			--Convert(varchar(25),[dbo].mms_meeting_master.Meeting_Chairperson) as Meeting_Chairperson,
			(Select EmployeeDisplayName from [dbo].Employee_Master where [dbo].mms_meeting_master.Meeting_Chairperson=Employee_Master.EmployeeICode) as Meeting_Chairperson,
			[dbo].mms_meeting_master.Minutes_Of_Meeting,
			[dbo].mms_meeting_master.Meeting_No_Of_Participants,
			[dbo].mms_meeting_master.istemplate 
		FROM 
			[dbo].mms_meeting_master  
  		WHERE 
			[dbo].mms_meeting_master.Meeting_Id=@Meeting_Id 
	END  
RETURN
GO
PRINT N'Creating [dbo].[Sp_Update_Attachment]...';


GO



CREATE Procedure [dbo].[Sp_Update_Attachment]  
@MeetingId INT,
@Fname VARCHAR(50),
@Fextension VARCHAR(10),
@File IMAGE

as   
BEGIN   
  
 UPDATE MMS_Attachment set 
 MMS_FileName =@Fname,  
 MMS_FileExtension=@Fextension,  
 MMS_File=@File

 where  Meeting_Id =@MeetingId  
  
    
END
GO
PRINT N'Creating [dbo].[Sp_Update_EmployeeAttachments]...';


GO




CREATE Procedure [dbo].[Sp_Update_EmployeeAttachments]  
@MeetingId INT,
@Fname VARCHAR(50),
@Fextension VARCHAR(10),
@File IMAGE,
@IsActive bit

as   
BEGIN   
  
 UPDATE MMS_Employee_Attachment set 
 MMS_FileName =@Fname,  
 /*MMS_FileExtension=@Fextension,*/
 MMS_File=@File,
 IsActive=@IsActive

 where  Id =@MeetingId AND MMS_FileExtension=@Fextension
  
    
END
GO
PRINT N'Creating [dbo].[Sp_Update_EmployeeMaster]...';


GO




CREATE PROCEDURE [dbo].[Sp_Update_EmployeeMaster]      

@EmployeeICode [int]
,@CompanyICode [int]
,@DepartmentICode [int]
,@DesignationICode [int]
,@EmployeeNumber [varchar](10)
,@EmployeeFirstName [varchar](50)
,@EmployeeLastName [varchar](50)
,@EmployeeDisplayName [varchar](20)
,@EmployeeCurrentAddress1 [varchar](100)
,@EmployeeCurrentAddress2 [varchar](100)
,@EmployeeCurrentCity [varchar](50)
,@EmployeeCurrentState [varchar](25)
,@EmployeeCurrentCountry [varchar](25)
,@EmployeeCurrentPinCode [varchar](20)
,@EmployeeCurrentPhoneNo [varchar](20)
,@IsSameAsCurrentAddress bit
,@EmployeePermanentAddress1 [varchar](100)
,@EmployeePermanentAddress2 [varchar](100)
,@EmployeePermanentCity [varchar](50)
,@EmployeePermanentState [varchar](25)
,@EmployeePermanentCountry [varchar](25)
,@EmployeePermanentPinCode [varchar](20)
,@EmployeePermanentPhoneNo [varchar](20)
,@EmployeeMobileNo [varchar](20)
,@EmployeeFatherName [varchar](50)
,@EmployeeDateofBirth [datetime]
,@EmployeePersonalEmailId [varchar](100)
,@EmployeeDateOfJoining [datetime]
,@EmployeeCorporateEmailId [varchar](100)
,@EmployeeIM [varchar](50)
,@LoginUserName [varchar](25)
,@LoginPassword [varchar](25)
,@EmployeeBloodGroupId [int]
,@EmployeePANNo [varchar](25)
,@EmployeePFNo [varchar](25)
,@EmployeeESINo [varchar](25)
,@EmployeeBankName [varchar](50)
,@EmployeeBankAccountNo [varchar](25)
,@EmployeeMaritalStatus bit
,@EmployeePrimarySkill [varchar](50)
,@EmployeePreviousEmployer [varchar](100)
,@EmployeePreviousExperienceYears [int]
,@EmployeePreviousExperienceMonths [int]
,@EmployeeReference1Remarks [varchar](200)
,@EmployeeReference2Remarks [varchar](200)
,@EmployeeBioData [image]
,@DocumentExtension [char](10)
,@EmployeePhoto [image]
,@PhotoExtension [char](10)
,@EmployeeDateofLeaving [datetime]
,@EmployeeReasonforLeaving [varchar](200)
,@IsActive bit
,@CreatedBy int
,@CreatedDate [datetime]
,@ModifiedBy [int]
,@ModifiedDate [datetime]
,@SwipeICode [int]
,@Location [char](2)
,@Groupid [int]
,@shiftid [int]
,@originalname [varchar](100)
,@pseudo bit
,@currenttechnology [int]
,@picture [image]
,@primaryskillstreamid [int]
,@empphoto [varchar](2000)
,@nightshift bit

AS      
     
--DECLARE @EmpNoCount INT
--DECLARE @DisNameCount varchar(50)

--SET @EmpNoCount =( SELECT count(*) FROM [dbo].[Employee_Master] Where [dbo].[Employee_Master].[EmployeeNumber] = @EmployeeNumber)
--SET @EmpNoCount =( SELECT count(*) FROM [dbo].[Employee_Master] Where [dbo].[Employee_Master].[EmployeeDisplayName] = @EmployeeDisplayName)


--IF @EmpNoCount = 1 and @DisNameCount = 1
--BEGIN

 BEGIN  

 UPDATE [dbo].[Employee_Master] set

     
 [dbo].[Employee_Master].[CompanyICode]=@CompanyICode
,[dbo].[Employee_Master].[DepartmentICode]=@DepartmentICode
,[dbo].[Employee_Master].[DesignationICode]=@DesignationICode
,[dbo].[Employee_Master].[EmployeeNumber]=@EmployeeNumber
,[dbo].[Employee_Master].[EmployeeFirstName]=@EmployeeFirstName
,[dbo].[Employee_Master].[EmployeeLastName]=@EmployeeLastName
,[dbo].[Employee_Master].[EmployeeDisplayName]=@EmployeeDisplayName
,[dbo].[Employee_Master].[EmployeeCurrentAddress1]=@EmployeeCurrentAddress1
,[dbo].[Employee_Master].[EmployeeCurrentAddress2]=@EmployeeCurrentAddress2
,[dbo].[Employee_Master].[EmployeeCurrentCity]=@EmployeeCurrentCity
,[dbo].[Employee_Master].[EmployeeCurrentState]=@EmployeeCurrentState
,[dbo].[Employee_Master].[EmployeeCurrentCountry]=@EmployeeCurrentCountry
,[dbo].[Employee_Master].[EmployeeCurrentPinCode]=@EmployeeCurrentPinCode
,[dbo].[Employee_Master].[EmployeeCurrentPhoneNo]=@EmployeeCurrentPhoneNo
,[dbo].[Employee_Master].[IsSameAsCurrentAddress]=@IsSameAsCurrentAddress
,[dbo].[Employee_Master].[EmployeePermanentAddress1]=@EmployeePermanentAddress1
,[dbo].[Employee_Master].[EmployeePermanentAddress2]=@EmployeePermanentAddress2
,[dbo].[Employee_Master].[EmployeePermanentCity]=@EmployeePermanentCity
,[dbo].[Employee_Master].[EmployeePermanentState]=@EmployeePermanentState
,[dbo].[Employee_Master].[EmployeePermanentCountry]=@EmployeePermanentCountry
,[dbo].[Employee_Master].[EmployeePermanentPinCode]=@EmployeePermanentPinCode
,[dbo].[Employee_Master].[EmployeePermanentPhoneNo]=@EmployeePermanentPhoneNo
,[dbo].[Employee_Master].[EmployeeMobileNo]=@EmployeeMobileNo
,[dbo].[Employee_Master].[EmployeeFatherName]=@EmployeeFatherName
,[dbo].[Employee_Master].[EmployeeDateofBirth]=@EmployeeDateofBirth
,[dbo].[Employee_Master].[EmployeePersonalEmailId]=@EmployeePersonalEmailId
,[dbo].[Employee_Master].[EmployeeDateOfJoining]=@EmployeeDateOfJoining
,[dbo].[Employee_Master].[EmployeeCorporateEmailId]=@EmployeeCorporateEmailId
,[dbo].[Employee_Master].[EmployeeIM]=@EmployeeIM
,[dbo].[Employee_Master].[LoginUserName]=@LoginUserName
,[dbo].[Employee_Master].[LoginPassword]=@LoginPassword
,[dbo].[Employee_Master].[EmployeeBloodGroupId]=@EmployeeBloodGroupId
,[dbo].[Employee_Master].[EmployeePANNo]=@EmployeePANNo
,[dbo].[Employee_Master].[EmployeePFNo]=@EmployeePFNo
,[dbo].[Employee_Master].[EmployeeESINo]=@EmployeeESINo
,[dbo].[Employee_Master].[EmployeeBankName]=@EmployeeBankName
,[dbo].[Employee_Master].[EmployeeBankAccountNo]=@EmployeeBankAccountNo
,[dbo].[Employee_Master].[EmployeeMaritalStatus]=@EmployeeMaritalStatus
,[dbo].[Employee_Master].[EmployeePrimarySkill]=@EmployeePrimarySkill
,[dbo].[Employee_Master].[EmployeePreviousEmployer]=@EmployeePreviousEmployer
,[dbo].[Employee_Master].[EmployeePreviousExperienceYears]=@EmployeePreviousExperienceYears
,[dbo].[Employee_Master].[EmployeePreviousExperienceMonths]=@EmployeePreviousExperienceMonths
,[dbo].[Employee_Master].[EmployeeReference1Remarks]=@EmployeeReference1Remarks
,[dbo].[Employee_Master].[EmployeeReference2Remarks]=@EmployeeReference2Remarks
,[dbo].[Employee_Master].[EmployeeBioData]=@EmployeeBioData
,[dbo].[Employee_Master].[DocumentExtension]=@DocumentExtension
,[dbo].[Employee_Master].[EmployeePhoto]=@EmployeePhoto
,[dbo].[Employee_Master].[PhotoExtension]=@PhotoExtension
,[dbo].[Employee_Master].[EmployeeDateofLeaving]=@EmployeeDateofLeaving
,[dbo].[Employee_Master].[EmployeeReasonforLeaving]=@EmployeeReasonforLeaving
,[dbo].[Employee_Master].[IsActive]=@IsActive
,[dbo].[Employee_Master].[CreatedBy]=@CreatedBy
,[dbo].[Employee_Master].[CreatedDate]=@CreatedDate
,[dbo].[Employee_Master].[ModifiedBy]=@ModifiedBy
,[dbo].[Employee_Master].[ModifiedDate]=@ModifiedDate
,[dbo].[Employee_Master].[SwipeICode]=@SwipeICode
,[dbo].[Employee_Master].[Location]=@Location
,[dbo].[Employee_Master].[Group_id]=@Groupid
,[dbo].[Employee_Master].[shift_id]=@shiftid
,[dbo].[Employee_Master].[original_name]=@originalname
,[dbo].[Employee_Master].[pseudo]=@pseudo
,[dbo].[Employee_Master].[current_technology]=@currenttechnology
,[dbo].[Employee_Master].[picture]=@picture
,[dbo].[Employee_Master].[primary_skill_stream_id]=@primaryskillstreamid
,[dbo].[Employee_Master].[emp_photo]=@empphoto
,[dbo].[Employee_Master].[night_shift]=@nightshift
 
 where EmployeeICode=@EmployeeICode

 -- Insert into MMS_Employee_Master based on Employee_Master

 DECLARE @EmployeeMasterId int;
 DECLARE @Department varchar(100);

 SET @EmployeeMasterId = SCOPE_IDENTITY();
 
IF @DepartmentICode='1'
BEGIN
SET @Department ='Management' 
END
IF @DepartmentICode='2'
BEGIN
SET @Department ='Human Resource' 
END
IF @DepartmentICode='3'
BEGIN
SET @Department ='Accounts and Administration' 
END
IF @DepartmentICode='4'
BEGIN
SET @Department ='Marketing' 
END
IF @DepartmentICode='5'
BEGIN
SET @Department ='Software Developer' 
END
IF @DepartmentICode='7'
BEGIN
SET @Department ='System Administration' 
END
IF @DepartmentICode='10'
BEGIN
SET @Department ='Technical' 
END
IF @DepartmentICode='11'
BEGIN
SET @Department ='Accounts' 
END
IF @DepartmentICode='12'
BEGIN
SET @Department ='Administration' 
END
IF @DepartmentICode='13'
BEGIN
SET @Department ='IT Recruitment' 
END
IF @DepartmentICode='14'
BEGIN
SET @Department ='Processing' 
END

 UPDATE [dbo].[MMS_Employee_Master] set

    [dbo].[MMS_Employee_Master].[Employee_FirstName] = @EmployeeFirstName
    ,[dbo].[MMS_Employee_Master].[Employee_LastName] = @EmployeeLastName
    ,[dbo].[MMS_Employee_Master].[Employee_DateofBirth] = @EmployeeDateofBirth
    ,[dbo].[MMS_Employee_Master].[Employee_Address] = @EmployeeCurrentAddress1
    ,[dbo].[MMS_Employee_Master].[Employee_Department] = @Department
    ,[dbo].[MMS_Employee_Master].[Employee_Qualification] = @EmployeePrimarySkill
    ,[dbo].[MMS_Employee_Master].[Employee_DateofJoin] = @EmployeeDateOfJoining
    ,[dbo].[MMS_Employee_Master].[Employee_ContactNo] = @EmployeeMobileNo
    ,[dbo].[MMS_Employee_Master].[Employee_Status] = @IsActive
    ,[dbo].[MMS_Employee_Master].[Employee_ModifyDate] = @ModifiedDate
    ,[dbo].[MMS_Employee_Master].[Employee_EmailAddress] = @EmployeeCorporateEmailId
    
	where [dbo].[MMS_Employee_Master].[profile_employee_id] = @EmployeeICode
--END

End
GO
PRINT N'Creating [dbo].[sp_update_meeting_Percent]...';


GO


 CREATE PROCEDURE [dbo].[sp_update_meeting_Percent]      
@MeetingId int,      
@EmployeeId int,      
@Percent numeric(5,2),
@TaskId  int
AS      
BEGIN  
 Update    
  [dbo].MMS_Meeting_Details      
 Set    
  [dbo].MMS_Meeting_Details.Percentage_Completed =@Percent      
 Where      
  [dbo].MMS_Meeting_Details.Task_Id=@TaskId       
 AND      
  [dbo].MMS_Meeting_Details.Employee_Id =@EmployeeId       
RETURN    
END
GO
PRINT N'Creating [dbo].[Sp_Update_MMS_Meeting_Details_Change]...';


GO


CREATE Procedure [dbo].[Sp_Update_MMS_Meeting_Details_Change]  
 @emp_id int,
@Task_Id  Int ,  
@Completion_Date Datetime,  
--@Status varchar(20),  
@Status INT,
--@Category nvarchar(20),  
@Category INT,
@MeetingId int,  
@Comments nvarchar(MAX),
@NextReviewDate datetime,
@ReviewFrequencyID int  ,
@commented_by int,
@task varchar(30),
@Priority varchar(10)
as   
BEGIN   
  
 UPDATE MMS_Meeting_Details    
 set Category =@Category ,  
 Completion_Date=@Completion_Date,  
 Status=@Status,  
Comments=@Comments,
 NextReviewDate=@NextReviewDate,
 ReviewFrequencyID=@ReviewFrequencyID,
 Priority=@Priority
 where  Task_Id =@Task_Id  
   
 --UPDATE mms_meeting_status_update  
 --set Status = @Status  
 --where TaskId = @Task_Id  

   INSERT into  mms_meeting_status (Meeting_Id,Meeting_Status_Employee_Id,meeting_status_comments,Task_Id,Meeting_Status_Task,Commented_By,Commented_By_ID,Meeting_Status_ResponsiblePerson,Meeting_Status_Date,Meeting_Status) values
   (@MeetingId,@emp_id,@comments,@Task_Id,@task,@commented_by,@emp_id,@emp_id, Format(getdate(),'M/dd/yyyy h:mm:ss tt'),@Status)
  --(@MeetingId,@emp_id,@comments,@Task_Id,@task,@commented_by,(select EmployeeFirstName from Employee_Master where 
  --EmployeeICode=@emp_id), Format(getdate(),'M/dd/yyyy h:mm:ss tt'),@Status)

   
  --insert into  mms_meeting_status (Meeting_Id,Meeting_Status_Employee_Id,meeting_status_comments,Task_Id,Meeting_Status_Task,Commented_By,Meeting_Status_ResponsiblePerson,Meeting_Status_Date,Meeting_Status) values
  --(@MeetingId,@emp_id,@comments,@Task_Id,@task,@commented_by,(select EmployeeFirstName from Employee_Master where EmployeeICode=@emp_id), CONVERT(VARCHAR(50), getdate(), 101),@Status )
    
 
   
END
GO
PRINT N'Creating [dbo].[Sp_Update_MMS_Meeting_Details_Change1]...';


GO



CREATE Procedure [dbo].[Sp_Update_MMS_Meeting_Details_Change1]  
 @MeetingId int,
 @MeetingObjective varchar(150),
 @MeetingDate datetime,
 @MeetingTime varchar(40),
 @MeetingDuration varchar(40),
 @MeetingVenue varchar(40),
 @MeetingType varchar(150),
 @MeetingDepartment varchar(50),
 @MeetingChairperson int,
 @MinutesOfMeeting varchar(500)
 

as   
BEGIN   
  
 UPDATE MMS_Meeting_Master set Meeting_Objective =@MeetingObjective,  
 Meeting_Date=@MeetingDate,
 Meeting_Time=@MeetingTime,
 Meeting_Duration=@MeetingDuration,
 Meeting_Venue=@MeetingVenue,
 Meeting_Type=@MeetingType,
 Meeting_Department=@MeetingDepartment,
 Meeting_Chairperson=@MeetingChairperson,
 Minutes_Of_Meeting=@MinutesOfMeeting
 

 where  Meeting_Id =@MeetingId  
      
END
GO
PRINT N'Creating [dbo].[sp_update_read_notification]...';


GO


 CREATE procedure [dbo].[sp_update_read_notification]
 (@id int)
 as
 begin
   update mms_meeting_details set is_read_notification='true' where meeting_id=@id 
 end
GO
PRINT N'Creating [dbo].[vw_get_EmployeeDepartment].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Employee_Master"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 321
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vw_get_EmployeeDepartment';


GO
PRINT N'Creating [dbo].[vw_get_EmployeeDepartment].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vw_get_EmployeeDepartment';


GO
PRINT N'Update complete.';


GO
