@model MMS.Models.EmpPersonalViewDetails

@{
    ViewBag.Title = "Create Employee";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<style>
    #EmpBloodGroupId {
        max-width: 270px;
    }
</style>

<div class="panel panel-primary">
    <div class="panel-heading">
        Create Employee Personal Details
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("CreateEmployeePage1", "CreateEmployee", FormMethod.Post, htmlAttributes: new { @class = "Employee-form", @id = "CreatEmpformPage1", @enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary(true, "fill the errors", new { @class = "text-danger" })

            <input type="hidden" class="files" name="files" />

            <div class="form-horizontal">
                <div class="col-md-12 col-sm-12">
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.Label("Employee First Name", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeFirstName, new { htmlAttributes = new { @class = "form-control required", @id = "EmpFirstName", @maxlength = "150", @required = "required", @minlength = "3" } })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Employee Last Name", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeLastName, new { htmlAttributes = new { @class = "form-control required", @id = "EmpLastName", @maxlength = "150", @required = "required", @minlength = "3" } })

                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.Label("Employee Display Name", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeDisplayName, new { htmlAttributes = new { @class = "form-control", @id = "EmpDisplayName", @maxlength = "150" } })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Employee Father Name", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeFatherName, new { htmlAttributes = new { @class = "form-control", @id = "EmpFatherName", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-horizontal">
                <div class="col-md-12 col-sm-12">
                    <div class="form-row">
                        <div class="form-group col-md-6 form-inline alert alert-warning" style="padding: 8px;">
                            @Html.Label("Employee Current Address", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.CheckBoxFor(model => model.IsSameAsCurrentAddress, new { htmlAttributes = new { @class = "form-control", @id = "IsSameAsCurrentAddress", @maxlength = "150" } })
                            </div>
                        </div>

                        <div class="form-group col-md-6 form-inline alert alert-warning" style="padding: 8px;">
                            @Html.Label("Employee Permanent Address", htmlAttributes: new { @class = "control-label col-lg-5 col-md-5" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.Label("Current Address1", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeCurrentAddress1, new { htmlAttributes = new { @class = "form-control required", @id = "EmpCurrentAdd1", @maxlength = "150", @required = "required" } })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Permanent Address1", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7 EmpPermanentAdd1">
                                @Html.EditorFor(model => model.EmployeePermanentAddress1, new { htmlAttributes = new { @class = "form-control", @id = "EmpPermanentAdd1", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.Label("Current Address2", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeCurrentAddress2, new { htmlAttributes = new { @class = "form-control", @id = "EmpCurrentAdd2", @maxlength = "150" } })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Permanent Address2", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeePermanentAddress2, new { htmlAttributes = new { @class = "form-control", @id = "EmpPermanentAdd2", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.Label("Current City", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeCurrentCity, new { htmlAttributes = new { @class = "form-control required", @id = "EmpCurrentCity", @maxlength = "150", @required = "required" } })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Permanent City", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeePermanentCity, new { htmlAttributes = new { @class = "form-control", @id = "EmpPermanentCity", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.Label("Current State", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.EmployeeCurrentState, new { htmlAttributes = new { @class = "form-control required", @id = "EmpCurrentState", @maxlength = "150", @required = "required" } })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Permanent State", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.EmployeePermanentState, new { htmlAttributes = new { @class = "form-control", @id = "EmpPermanentState", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>

                    <div class="form-row">

                        <div class="form-group col-md-6">
                            @Html.Label("Current Country and Pin Code", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.EmployeeCurrentCountry, new { htmlAttributes = new { @class = "form-control required", @id = "EmpCurrentCountry", @maxlength = "150", @required = "required" } })

                            </div>
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.EmployeeCurrentPinCode, new { htmlAttributes = new { @class = "form-control required", @id = "EmpCurrentPinCode", @maxlength = "150", @required = "required" } })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Permanent Country and Pin Code", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.EmployeePermanentCountry, new { htmlAttributes = new { @class = "form-control", @id = "EmpPermanentCountry", @maxlength = "150" } })

                            </div>
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.EmployeePermanentPinCode, new { htmlAttributes = new { @class = "form-control", @id = "EmpPermanentPinCode", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.Label("Current Phone Number", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeCurrentPhoneNo, new { htmlAttributes = new { @class = "form-control required", @id = "EmpCurrentPhoneNo", @maxlength = "150", @required = "required" } })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.Label("Permanent Phone Number", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeePermanentPhoneNo, new { htmlAttributes = new { @class = "form-control", @id = "EmpPermanentPhoneNo", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>



                </div>
            </div>

            <div class="form-horizontal">

                <div class="col-md-12 col-sm-12">
                    <div class="form-inline alert alert-warning" style="padding: 8px;">

                        <label>
                            Employee Others Details
                        </label>

                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-4">
                            @Html.Label("Mobile Number", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeMobileNo, new { htmlAttributes = new { @class = "form-control", @id = "EmpMobileNo", @maxlength = "150" } })

                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @Html.Label("Date of Birth", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeeDateofBirth, new { htmlAttributes = new { @class = "form-control datepicker", @id = "EmpDateOfBirth", @maxlength = "150" } })

                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @Html.Label("Personal EmailId", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EmployeePersonalEmailId, new { htmlAttributes = new { @class = "form-control", @id = "EmpEmailId", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        @*<div class="form-group col-md-4">
                                @Html.Label("Location", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @id = "EmpLocation", @maxlength = "150" } })

                                </div>
                            </div>*@
                        <div class="form-group col-md-4">
                            @Html.Label("Employee Location", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.Location, new SelectList(ViewBag.EmpLocation, "Vales", "Name"), "--Select Your Location--", new { @class = "form-control", @id = "EmpLocation" })
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @Html.Label("Blood Group Name", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(model => model.EmployeeBloodGroupId, new SelectList(ViewBag.EmpBloodName, "Vales", "Descriptions"), "--Select Your Blood Group--", new { @class = "form-control", @id = "EmpBloodGroupId" })
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            @Html.Label("Marital Status", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                            <div class="control-label col-md-8">
                                @Html.RadioButtonFor(model => model.EmployeeMaritalStatus, true, new { id = "married-true", @value = "Married", @maxlength = "150" }) Married &nbsp;
                                @Html.RadioButtonFor(model => model.EmployeeMaritalStatus, false, new { id = "married-false", @value = "Single", @maxlength = "150" }) Single
                            </div>
                        </div>

                    </div>

                </div>
            </div>

            <div class="pull-right">
                <input type="submit" value="Save & Next" class="btn" id="CreateNewEmployeePag1" />

            </div>
        }
    </div>
</div>