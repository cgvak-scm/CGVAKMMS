@model MMS.Models.MeetingViewModel

@{
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    string endDateStr = ViewBag.EndDate;
}

<div class="panel panel-primary">
    <div class="panel-heading">
        Create Meeting
    </div>
        <div class="panel-body">
            @using (Html.BeginForm("Index", "CreateMeeting", FormMethod.Post, htmlAttributes: new { @class = "meeting-form", @enctype = "multipart/form-data" }))
            {

                @Html.ValidationSummary(true, "fill the errors", new { @class = "text-danger" })

                <input type="hidden" class="files" name="files" />

                <div class="form-horizontal">
                    <div class="col-md-12 col-sm-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Use Template", htmlAttributes: new { @class = "control-label col-md-4 col-md-5" })
                                <div class="col-md-6 col-lg-4">
                                    @Html.DropDownList("Template", new SelectList(ViewBag.Template, "meeting_name", "meeting_name"), "--SELECT---", htmlAttributes: new { @class = "form-control template" })

                                </div>
                            </div>
                        </div>                    
                    </div>
                </div>

                <div class="form-horizontal">

                        <div class="col-md-12 col-sm-12">
                            <div class="form-inline alert alert-warning" style="padding: 8px;">

                                <label>
                                    Meeting Details
                                </label>

                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Meeting Name", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.mmsMeetingMaster.Meeting_Objective, new { htmlAttributes = new { @class = "form-control required", @id = "meetingObj", @maxlength = "150", @required = "required" } })

                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.mmsMeetingMaster.Meeting_Date, new { htmlAttributes = new { @class = "main_datepicker form-control input-sm ", @id = "meetingDate", @style = "background-color:white;", @required = "required" } })


                                    </div>
                                    @Html.Label("Time", htmlAttributes: new { @class = "control-label col-md-2 required" })

                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.mmsMeetingMaster.Meeting_Time, endDateStr, new { htmlattributes = new { @class = " form-control meeting_hours required", @id = "meetingHours", @readonly = "readonly", @required = "required" } })

                                    </div>

                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Meeting Venue", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5 required" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.mmsMeetingMaster.Meeting_Venue, new { htmlAttributes = new { @class = "form-control required", @id = "meetingVenue", @maxlength = "150", @required = "required" } })

                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Duration", htmlAttributes: new { @class = "control-label col-md-2 required" })
                                    <div class="col-lg-4 col-md-8">
                                        @Html.EditorFor(model => model.mmsMeetingMaster.Meeting_Duration, new { htmlattributes = new { @class = " form-control Meeting_duration required", @id = "meetingDuration", @readonly = "readonly", @required = "required" } })

                                    </div>

                                </div>

                            </div>

                            <div class="col-md-6">

                                <div class="form-group" id="FileUploaded">
                                    @Html.Label("Attachments if any", htmlAttributes: new { @class = "control-label col-lg-4 col-md-5" })
                                    <div class="col-md-4">

                                        <a href="@Url.Action("Index", "Upload")" class="modal-link btn btn-default btn-sm" data-placement="top" data-toggle="tooltip" data-original-title="Upload File">
                                            Upload file
                                        </a>
                                        <input type="hidden" id="hid_txt" />
                                    </div>
                                </div>
                                <div id='dynContent' class="hide">
                                    <h5><b>The files are:</b></h5>

                                </div>
                            </div>
                        </div>


                    </div>

                <div class="form-horizontal">

                        <div class="col-md-12 col-sm-12">

                            <div class="form-inline alert alert-warning" style="padding: 8px;">
                                <label>
                                    Participant Details
                                </label>
                            </div>


                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.Label("Department", htmlAttributes: new { @class = "control-label col-md-4 required" })
                                    <div class="col-md-7">
                                        @Html.DropDownListFor(model => model.mmsMeetingMaster.Meeting_Department, new SelectList(ViewBag.Departments, "DepartmentName", "DepartmentName"), "--SELECT---", htmlAttributes: new { @class = "form-control Meeting_Department required" })

                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.Label("If others specify", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-lg-4 col-md-8">
                                        @Html.Editor("Meeting_other_dept", new { htmlattributes = new { @class = "form-control Meeting_other_dept" } })

                                    </div>
                                </div>
                            </div>


                            <div class="col-md-10 col-md-offset-2">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="wait"><img src='../Content/Images/wait.gif' width='100' /></div>
                                        @Html.ListBox("Participants", new SelectList(""), htmlAttributes: new { @class = "form-control " })
                                    </div>
                                </div>

                                <div class="col-md-4 col-lg-2 col-xs-5">
                                    <div class="form-group" style="margin-left: 0px; margin-right: 0px;">
                                        <input type="button" class="form-control btn-default" value=">>" name="move_next" id="move_nxt" />
                                        <br />
                                        <input type="button" class="form-control btn-default" value="<<" name="move_prev" id="move_prv" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="participant_wait"><img src='../Content/Images/wait.gif' width='100' /></div>
                                        @Html.ListBox("Added_Participants", new SelectList(""), htmlAttributes: new { @class = "form-control" })
                                        @Html.Hidden("hidden_participants")
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Objective", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.mmsMeetingMaster.Meeting_Type, new { htmlAttributes = new { @class = "form-control", @id = "meeting_type", @maxlength = "150", @required = "required" } })

                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Meeting Chairperson", htmlAttributes: new { @class = "control-label col-md-4 required" })
                                    <div class="col-lg-4 col-md-8">
                                        @*ViewBag.emp = emp*@
                                        @*Meetmaster*@
                                        @*@Html.DropDownListFor(model => model.mmsMeetingMaster.Meeting_Chairperson, new SelectList(""), "--SELECT--", htmlAttributes: new { @class = "form-control meeting_chairperson required ", @id = "chairperson", @name = "chairperson" })*@

                                        @Html.DropDownListFor(model => model.Meetmaster, new SelectList(""), "--SELECT--", htmlAttributes: new { @class = "form-control meeting_chairperson required ", @id = "chairperson", @name = "chairperson" })



                                        @*@Html.DropDownList("ChairPerson", new SelectList("ViewBag.emp", "", ""), "--SELECT--", htmlAttributes: new { @class = "form-control meeting_chairperson required ", @id = "chairperson", @name = "chairperson" })*@



                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>

                <div class="form-horizontal">
                    <div class="col-md-12 col-sm-12">
                        <div class="col-md-12">
                            <div class="form-group">

                                @Html.Label("Minutes of Meeting", htmlAttributes: new { @class = "control-label col-md-2" })

                                <div class="col-lg-8 col-md-10 col-sm-12">
                                    @Html.EditorFor(model => model.mmsMeetingMaster.Minutes_Of_Meeting, new { htmlattributes = new { @class = "form-control required tinymce", @id = "minutesOfMeeting" } })

                                </div>
                            </div>
                        </div>

                     </div>

                </div>

                    <div class="form-horizontal">
                        <div class="col-md-12 col-sm-12">

                            <div class="form-inline alert alert-warning" style="padding: 8px;">
                                <label>
                                    Tasks/Actions for the Meeting
                                </label>
                            </div>
                            <div class="responsive-table">
                                <table class="table table-hover table-condensed" id="createTable">
                                    <tr class="tbl_header">
                                        <th>Sno</th>
                                        <th>Tasks/Projects Discussed</th>
                                        <th>Responsible Person</th>
                                        <th>Priority</th>
                                        <th>Completion Date</th>
                                        <th>Comments</th>
                                        <th>Category</th>
                                    </tr>
                                </table>
                            </div>

                            <input type="button" value="Add" class="btn" name="add_meeting" id="add_meeting" />

                            <input type="button" value="Delete" class="btn" name="delete_meeting" id="delete_meeting" />

                            <div class="pull-right">

                                @*<input type="submit" value="Create Template & Save" class="btn" name="command" id="save_template_meeting" />*@

                                <input type="submit" value="Save" class="btn" name="command" id="save_meeting" />

                            </div>

                        </div>
                    </div>

                    <div id="alertbox" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
                        <div class="modal-dialog modal-sm" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">×</span>
                                    </button>
                                    <h5 class="modal-title text-center" id="mySmallModalLabel">Please enter all the fields </h5>
                                </div>

                            </div>
                        </div>
                    </div>
                    }
                </div>
</div>


<script type="text/javascript" src="~/Scripts/tinymce/js/tinymce/tinymce.min.js"></script>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/customValScript")

}



<script>

    function getCustomDay(dayStr) {
        var day = parseInt(dayStr);
        if (day < 10)
            return '0' + dayStr;
        else
            return dayStr;
    }

    $(document).ready(function () {

      
            
      
        //added for DatePicker to  PREVENT set Meeting date for past Dates

        //old CODE--------->
        var d = new Date();

        var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        var day = d.getDate();


        var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

        var start = new Date();
        start.setFullYear(start.getFullYear() - 70);
        var end = new Date();
        end.setFullYear(end.getFullYear() + 1);



        $('.date').datepicker({ dateFormat: 'dd/M/yy' });
        //var output = (month < 10 ? '0' : '') + month + '/' +
            //(day < 10 ? '0' : '') + day + '/' +
           // d.getFullYear();

        var output = month + '/' + day + '/' + d.getFullYear();

        //original--->
        //$(".datepicker").datepicker({ dateFormat: 'mm-dd-yy', startDate: output, autoclose: true, minDate: 0 });



        //var formarDATE = (day < 10 ? '0' : '') + day + '/' +
             //(month < 10 ? '0' : '') + month + '/' +
              //d.getFullYear();

        var formarDATE = month + '/' + day + '/' + d.getFullYear();

        //new CODE july 13 edit
        $(".main_datepicker").datepicker({
            // dateFormat: "mm/dd/yy", startDate: formarDATE, autoclose: true, minDate: 0
            dateFormat: "dd/M/yy", startDate: formarDATE, autoclose: true, minDate: 0,
            changeMonth: true,
            changeYear: true,
            //minDate: '1/1/1990',
            //maxDate: end,
            yearRange: 1990 + ':' + end.getFullYear(),
        });


        $('.main_datepicker').keydown(function () { return false; }); // Charles S / 09-Jun-2017 - Keyboard input not to allow
        ////-----

        $("body").addClass("active");


        if ($("html").hasClass("attach-active")) {
            $(this).remove();
        }

        $("#meetingObj").change(function () {
            
            var data = 'meetingName=' + $(this).val();

            $.post('@Url.Action("CheckMeetingName","Search")', data).success(function (res) {
                if (res > 0) {
                    alert("Meeting Name already exist!..");
                    $("#meetingObj").val("");
                }

            });
        });
        DisableButtons();

        function InitializeDate() {           
            var getDate = new Date();
            getDate.setDate(getDate.getDate());
         
            $(".dyn_datepicker").datepicker({                
                startDate: $("#meetingDate").val(),
                changeMonth: true,
                changeYear: true,
                //minDate: '1/1/1990',
                //maxDate: end,
                yearRange: 1990 + ':' + end.getFullYear(),
                //autoclose: true, minDate: 0, dateFormat: "dd/MM/yyyy"
            });


            $('.dyn_datepicker').keydown(function () { return false; }); // Charles S / 09-Jun-2017 - Keyboard input not to allow
        }

        function GetSelectedOptions() {
                        var items;
            $("#Added_Participants option").each(function () {
                items += "<option value='" + $(this).val() + "'>" + $(this).text() + "</option>";
            });
            return items;
        }
        function DisableButtons() {

            var tableRow = document.getElementById("createTable");
            if (tableRow.rows.length < 2) {
                $("#save_meeting").attr('disabled', true);
                $("#save_template_meeting").attr('disabled', true);

            }
        }


        $("#searchMeeting").on('input', function () {
            if ($(this).val() == "") {
                $("#meetingObj,#meetingDate,#meetingHours,#meetingVenue,#meetingDuration,#meeting_type").val("");

            }

        });

        $("#add_meeting").click(function () {

            var startIndex = 0;
            var tableRow = document.getElementById("createTable");

            var d = new Date();

            var month = d.getMonth() + 1;
            var day = d.getDate();

            //var output = (month < 10 ? '0' : '') + month + '/' +
                //(day < 10 ? '0' : '') + day + '/' +
                //d.getFullYear();

            var output = month + '/' + day + '/' + d.getFullYear();


            var count = tableRow.rows.length;

            for (var i = 1; i <= 1 ; i++) {
                //original
                //var tableString = '<tr class=newGen" id="newGen"><td id="newId">' + count + '</td>';
                //tableString += '<td><textarea class="form-control task text-box single-line" id="mms_meeting_details_Task' + count + '" required name="task' + count + '"  type="text"></textarea></td>';
                var tableString = '<tr class=newGen" id="newGen"><td id="newId">' + count + '</td>';
                tableString += '<td><textarea class="form-control task text-box single-line" id="mms_meeting_details_Task' + count + '" required name="task"  type="text" required></textarea></td>';


                var selectedOptions = GetSelectedOptions();
                if (count > 1 && selectedOptions != "undefined") // If add row clicked without Meeting template initially , later selected the same or Chair person selected case - Charles S / 17-Jun-2017
                {
                    // selectedOptions = selectedOptions.replace("undefined", "");
                    for (xyz = 1; xyz < count; xyz++) {
                        $('.Participant').attr('name', 'Participant' + xyz).append(selectedOptions);
                    }
                }
                //original Commented not able get this value in controller method
                //tableString += '<td><select class="form-control resp" id="mms_meeting_details_Participant' + count + '" required  name="Participant' + count + '"><option value="">---SELECT---</option>' + selectedOptions + '</select></td>';

                tableString += '<td><select class="form-control resp" id="mms_meeting_details_Participant' + count + '" required  name="Participant"><option value="">---SELECT---</option>' + selectedOptions + '</select></td>';
                //original Commented not able get this value in controller method
                //tableString += '<td><select class="form-control priority" id="Priority' + count + '" required name="Priority' + count + '"><option value="">--SELECT--</option>';

                tableString += '<td><select class="form-control priority" id="Priority" required name="Priority"><option value="">--SELECT--</option>';

                tableString += '<option value="High">High</option><option value="Medium">Medium</option><option value="Low">Low</option></select>';
                //original Commented not able get this value in controller method
                //tableString += '<td><input class="dyn_datepicker form-control" required id="mms_meeting_details_Completion_Date' + count + '" min="' + output + '" name="Completion_Date' + count + '" type="datetime" autocomplete="off"></td>';

                tableString += '<td><input class="dyn_datepicker form-control" id="mms_meeting_details_Completion_Date' + count + '" name="Completion_Date" type="datetime" autocomplete="off" required></td>';

                //original Commented not able get this value in controller method
                //tableString += '<td><textarea class=" form-control comments text-box single-line"  id="mms_meeting_details_Comments' + count + '" name="Comments' + count + '" type="text" /></td>';

                tableString += '<td><textarea class=" form-control comments text-box single-line"  id="mms_meeting_details_Comments" name="Comments" type="text" /></td>';

                var listItems = [];
                listItems.push("<select  class='form-control' id='category" + count + "' required name='Category' ><option value=''>--SELECT--</option>");

                var category =  @Html.Raw(Json.Encode(ViewBag.Categories))

                $.each(category, function (key, val) {

                    listItems.push('<option value="' + val.ID + '">' + val.CategoryName + '</option>');

                });

                listItems.push("</select>");

                tableString += "<td>" + listItems + "</td>";
                tableString += "<input type=hidden id='reviewdate" + count + "' required name='reviewdate'><input type=hidden id='reviewFreq" + count + "' required name='reviewFreq'>"

                tableString += "</tr>";
                $("#createTable").append(tableString);

                InitializeDate();


            }

            $("#save_meeting").attr("disabled", false);
            $("#save_template_meeting").attr("disabled", false);
        });


        $("#delete_meeting").click(function () {

            $("#createTable tr:last").not('.tbl_header').remove();
            DisableButtons();
        });

        //$("#save_meeting").click(function () {
        //    //alert(output);
        //   // alert("1");
        //    $("#Added_Participants option").attr("selected", "selected");


        //    $("form").submit();
        //});


        //$("#save_meeting").click(function (e) {
        $(document).on("click","#save_meeting",function(e){
            e.preventDefault();

            $("#Added_Participants option").prop("selected", "selected");
            $("#Participants option").prop("selected", "selected");
            //alert( $("#Added_Participants").val());
          $("#save_meeting").parents("form").submit();
        });

        

        var TemplateChangeEvent = function (selected) {
            
            if (selected != "") {
                var selectedMeeting = selected;
                var Meetingobjective = @Html.Raw(Json.Encode(ViewBag.selectedMeetingobjective));

                $.ajax({

                    url: "@Url.Action("ObjectiveSelected", "CreateMeeting")",
                    type: "post",
                    data: JSON.stringify({ "selectedObjective": selectedMeeting }),
                    dataType: "Json",
                    async: false,
                    contentType: "Application/json;charset=utf-8",
                    success: function (data) {


                        $.each(data, function (i, val) {
                                                        $("#meetingObj").val(Meetingobjective);

                            var Jsdate = new Date();
                            var Jsgetdate = Jsdate.getDate();
                            var Jsnmonth = month[Jsdate.getMonth()];
                            var Jyear = Jsdate.getFullYear(); var JsMeetingDate = Jsgetdate + "/" + Jsnmonth + "/" + Jyear;

                            var Hours = Jsdate.getHours();
                            var AmPm = "AM";

                            if (Hours > 12) {
                                Hours = Hours % 12;
                                AmPm = "PM";
                            }
                            //var JHour = Hours + ":" + Jsdate.getMinutes() + ":" + Jsdate.getSeconds() + " " + AmPm;
                            var JHour = Hours + ":" + Jsdate.getMinutes() + " " + AmPm;
                            //":" + Jsdate.getSeconds() + // This seconds removed from above line, Since manual date selection dont have seconds , So removed here too // Charles S / 09/06/2017

                            $("#meetingDate").val(JsMeetingDate);
                            $("#mmsMeetingMaster_Meeting_Department").val(val.department);
                            //$("#meetingHours").val(JHour);
                            $("#meetingHours").val(val.meeting_time);
                            $("#meetingVenue").val(val.meeting_venue);
                            $("#meetingDuration").val(val.meeting_duration);
                            $("#chairperson").each(function () {

                                $(this).find('option').not(":first").remove();

                                $(this).append("<option value='" + val.meeting_chairperson + "' selected='selected'>" + val.meeting_chairperson + "</option>");
                                //$(this).prop('selected', true);
                                //$("#chairperson option:selected").val(val.meeting_chairperson).text(val.meeting_chairperson);

                            });

                            $("#meeting_type").val(val.objective);
                            dynamicAddedParticipantsEntry(val.tid);
                            dynamicParticipantsListEntry(val.department);

                            //tinymce.activeEditor.execCommand('mceInsertContent', false, data);

                        })

                    }, error: function (responseText) {
                        console.log(responseText);
                    }
                });
            }
            else {

                $(this).closest('form').find('input[type=text],input[type=datetime],select').val("");
                $("#Participants,#Added_Participants").text("");

                $("#chairperson").find("option").not(":first").remove();

            }
        }

        var list1 = [];

        var dynamicAddedParticipantsEntry = function (tid) {

            $("#Added_Participants option").each(function () {
                $(this).remove();
            });


            //Template
            $("#Template").on('change', function () {
                window.sessionStorage.setItem("Template", this.value);
            });

            $(document).ready(function () {
                $("#Template").val(window.sessionStorage.getItem("Template"));
            });


            $.ajax({
                url: '@Url.Action("GetSelectedParticipantId","Search")',
                data: JSON.stringify({ 'tid': tid }),
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                beforeSend: function () {
                    $(".participant_wait").show();
                },
                success: function (data) {
                                        $(".participant_wait").hide();
                    var listItems = [];
                    $.each(data, function (item, val) {
                        //console.log(val);
                        //listItems.push('<option value="' + val.participants + '">' + val.participants + '</option>');

                        //original--->
                        //listItems.push('<option value="' + val.uid + '">' + val.participants + '</option>'); // Charles S / 14-Jun-2017 - Above line commented and valid id passed for element value , Thus the insert error rectified.

                        //Modified--->Binded 'EmployeeICode' in list instead of 'uid'

                        listItems.push('<option value="' + val.EmployeeICode + '">' + val.participants + '</option>');
                        //list1.push('<option value="' + val.EmployeeICode + '">' + val.participants + '</option>');
                        list1.push({
                            Employee_Id: val.EmployeeICode,
                            Employee_Name: val.participants
                        });

                    });

                    $("#meeting_type").attr("readonly", "true");
                    $("#Added_Participants").append(listItems.join(''));

                    $(".resp option").each(function () { // Charles S / 19-Jun-2017
                        $(this).remove();
                    });
                    $(".resp").append(listItems.join('')); // Charles S / 19-Jun-2017
                },
                error: function (data, textStatus, jqXHR) {
                    alert(data.error);
                }
            });
        };

         var dynamicParticipantsListEntry = function (deptName) {

            $("#Participants option").each(function () {
                $(this).remove();
            });

            //var url = '@Url.Action("GetParticipants", "Search")'

            $.ajax({
                url: '@Url.Action("GetParticipants", "Search") ',
                data: JSON.stringify({ 'deptName': deptName }),
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                beforeSend: function () {
                    $(".wait").show();
                },
                success: function (data) {

                    $(".wait").hide();

                    var listItems = [];
                    var count;
                    $.each(data, function (item, val) {
                        var arraycheck = 0;
                        for (count = 0; count < list1.length; count++) {
                            console.log(val.Employee_Id + '=' + list1[count].Employee_Id);
                            if (list1[count].Employee_Id == val.Employee_Id)
                            {
                                arraycheck = 1;
                            }
                        }
                        if (arraycheck == 0)
                        {
                            listItems.push('<option value="' + val.Employee_Id + '">' + val.Employee_Name + '</option>');
                        }
                    });

                    $("#Participants").append(listItems.join(''));

                },
                error: function (data, textStatus, jqXHR) {
                    alert(data.error);
                }
            });
        };

                $("#Template").change(function () {

            if($(this).val() != ""){
                TemplateChangeEvent($(this).val());
            }                    
        });
          
        var selectedMeeting =  @Html.Raw(Json.Encode(ViewBag.selectedMeeting));        
        if (selectedMeeting != "") {

            TemplateChangeEvent(selectedMeeting);
        }                       
    });

    tinymce.init({
        selector: ".tinymce",
        theme: "modern",
        menubar: false,
        resize: false,
        statusbar: false,
        plugins: ["preview hr anchor",
            "nonbreaking contextmenu directionality paste"],
        toolbar2: "alignleft aligncenter alignright alignjustify | bullist numlist outdent indent"
    });
</script>





