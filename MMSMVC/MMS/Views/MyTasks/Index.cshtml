@model dynamic

@{
    ViewBag.Title = "My Tasks";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    string startDateStr = Convert.ToDateTime(ViewBag.StartDate).ToString("dd/MMM/yyyy");
    string endDateStr = ViewBag.EndDate;
}


<style>
    a.ex1 {
        color: crimson;
    }

    .completed {
        background-color: #dff0d8;
    }

    .started {
        background-color: #d9edf7;
    }

    .ongoing {
        background-color: #fcf8e3;
    }
</style>

<div class="panel panel-primary">
    <div class="panel-heading">
                    My Tasks
    </div>
    <div class="panel-body">

        <form class="mytasks">
            <div class="alert alert-warning">
                <div class="row">
                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">Start Date</div>
                            @Html.TextBox("start_date", startDateStr, new { @class = " datepick form-control input-sm fromDate", @style = "background-color:white;", @required = "required", @readonly = "readonly" })
                        </div>
                    </div>
                    <div>
                        @Html.Hidden("Hidden_Datep", null, new { @id = "Hidden_Datep" })
                    </div>
                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">End Date</div>

                            @Html.TextBox("end_date", endDateStr, new { @class = "form-control input-sm toDate", @style = "background-color:white;", @required = "required", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">Category</div>
                            @Html.DropDownList("CategoryID", new SelectList(ViewBag.CategoryTypeID, "ID", "CategoryName"), "All", htmlAttributes: new { @class = "form-control input-sm required" })
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">Frequency</div>
                            @Html.DropDownList("ReviewFrequencyID", new SelectList(ViewBag.ReviewFrequencyID, "Freq_In_Days", "Freq_Name"), "All", htmlAttributes: new { @class = "form-control input-sm required" })
                        </div>
                    </div>
                    <div>

                        <div class="input-group">
                            @*@Html.Label("HiddenDateValue", htmlAttributes: new { @class = "form-control input-sm hidden" })*@
                            @Html.Hidden("HiddenDateValue", new { id = "hat", @class = "MyHiddenId" })
                        </div>
                    </div>
                    <div class="col-md-12 col-sm-12">
                        <br />
                        <div class="input-group pull-right">

                            <button type="submit" id="view_task" class="btn btn-primary btn-sm">View Task</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="responsive-table">
                    <div class="result_grid  col-md-12">
                        <!--- dynamic results will be fetched here -->
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>
<style type="text/css">
    #modal-content .navbar, #modal-content .mms-footer-bar {
        display: none;
    }
</style>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/customVal")

}
<script>

    var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

    var start = new Date();
    start.setFullYear(start.getFullYear() - 70);
    var end = new Date();
    end.setFullYear(end.getFullYear() + 1);

    function getCustomDay(dayStr) {
        var day = parseInt(dayStr);
        if (day < 10)
            return '0' + dayStr;
        else
            return dayStr;
    }
    $(document).ready(function () {
        //var minDate=$(".fromDate").val();
        //$(".toDate").datepicker({ autoclose: true, "minDate": minDate });

        $(".fromDate").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: 1990 + ':' + end.getFullYear(),
            autoclose: true,
            minDate: new Date('3/1/2017'),

            dateFormat: 'dd/M/yy',
            onSelect: function (selected) {
                //console.log(selected);
                var dt = new Date(selected);
                dt.setDate(dt.getDate() + 1);
                var selectedDate = selected;
                $(".start_date").datepicker("setDate", selected)
                $(".toDate").datepicker("option", "minDate", dt);


                var selectDates = $('.fromDate').val();

                $.get('@Url.Action("Index", "MyTasks")', { selectDates: selectDates });
                //$(this).data('datepicker').inline = true;

            }
        });



        @*.on("load", function () {
            @*var selectDates = $('.fromDate').val();
            $.get('@Url.Action("Index", "MyTasks")', { selectDates: selectDates });*@




        @*.on("load",function () {
            var selectDates = $('.fromDate').val();

            $.get('@Url.Action("Index", "MyTasks")', { selectDates: selectDates });
        })*@

        LoadInitialEvents();

        $("#view_task").click(function (e) {
            e.preventDefault();
            this.disabled = 'disabled';
            $('.assigned').remove();
            $(".Paginate").remove();

            ViewTaskClicked();

        });

    });


    /////
    function EndDateChange(_startDate) {
        $("#end_date").datepicker('remove');
        $("#end_date").datepicker({ startDate: _startDate, autoclose: true, dateFormat: 'dd/M/yy', }).datepicker('fill');
    }

    function InitializePaging() {

        $(document).ready(function () {
            $('#view_task', this).prop('disabled', false);
             @if (TempData["Success"] != null)
                    {
                        <div id="errorMessage" class="alert alert-success" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <span aria-hidden="true" class="glyphicon glyphicon-ok"></span>
                            <span class="sr-only">Success:</span>
                            &nbsp;&nbsp;@TempData["Success"]
                        </div>
                    }
        });



        $(document).ready(function () {
            $("#CategoryID").val(window.sessionStorage.getItem("CategoryID"));
            //window.sessionStorage.clear();
        });





        @*$(".fromDate").datepicker().on('load', function (ev) {
            //var firstDate = $(this).val();
            //alert(firstDate);
            var selectDates = $('.fromDate').val();
            $.get('@Url.Action("Index", "MyTasks")', { selectDates: selectDates });


        });*@

        var jslink = $("<script src='@Url.Content("~/Scripts/jquery.simplePagination.js")' type='text/javascript'/>");
        $('head').append(jslink);
        $(".assigned").simplePagination();
    }

    function LoadInitialEvents() {

        var d = new Date();
        var curr_date = getCustomDay(d.getDate());

        var curr_month = month[d.getMonth() + 1];
        var curr_year = d.getFullYear();

        //$("#start_date").val(curr_month + "/" + 1 + "/" + curr_year);
        //$("#end_date").val(curr_month + "/" + curr_date + "/" + curr_year);
        //$(".toDate").datepicker({ autoclose: true, "minDate": curr_month + "/" + 1 + "/" + curr_year, dateFormat: 'dd/M/yy', });
        //
        // $(".toDate").datepicker({ autoclose: true, "minDate": '@startDateStr', dateFormat: 'dd/M/yy', });






        @*$(".fromDate").datepicker({

        }).on("load", function () {
            var selectDates = $('.fromDate').val();

            $.get('@Url.Action("Index", "MyTasks")', { selectDates: selectDates });
        });*@


        $(".toDate").datepicker({
            autoclose: true, changeMonth: true,
            changeYear: true,
            dateFormat: 'dd/M/yy',
            minDate: '@startDateStr',

            //dateVariable : $("input").val(),
            //  maxDate: end,
            yearRange: 1990 + ':' + end.getFullYear()
        });

        ViewTaskClicked();
    }




    $("#CategoryID").on('change', function () {
        window.sessionStorage.setItem("CategoryID", this.value);
    });

    $(document).ready(function () {
        $("#CategoryID").val(window.sessionStorage.getItem("CategoryID"));
        //window.sessionStorage.clear();
    });


    function GetCount(Meeting_Id, Task_Id ) {

        var count = 0;      
        $.ajax({
            async: false,
            type: 'post',
            url: "@Url.Action("GetCounts", "MyTasks")",
            data: JSON.stringify({ "meetingId": Meeting_Id, "taskid": Task_Id }),
            dataType: 'json',
            contentType: 'application/json;charset=utf-8',
            success: function (resdata) {
                count = resdata;
            }

        });
        if (typeof notifyCnt == "undefined" || notifyCnt == null) {
            return "(" + count + "&nbsp;Comments )";
        }
        else {
            $(".notifyCnt").html(count + "&nbsp;Comments");
        }

    }
    function ViewTaskClicked() {


        $("#CategoryID").val(window.sessionStorage.getItem("CategoryID"));


        var Start_date = $("#start_date").val();
        var end_date = $("#end_date").val();
        var Category_id = $("#CategoryID option:selected").val();
        var Frequency_id = $("#ReviewFrequencyID option:selected").val();

        if (Frequency_id == "") {
            Frequency_id = 0;
        }

        if (Category_id == "") {
            Category_id = 0;
        }


        if (Start_date == null || Start_date == "" && end_date == null || end_date == " ") {
            alert("Please fill the dates to proceed");
        }
        else {           
            $.ajax({
                type: 'post',
                url: "@Url.Action("FetchMyTasks", "MyTasks")",
                data: JSON.stringify({ "startDate": Start_date, "endDate": end_date, "categoryId": Category_id,"frequencyId":Frequency_id }),
                dataType: "json",
                contentType: "Application/json;charset=utf-8",
                success: function (resData) {

                    console.log(resData);


                    if (resData == null || resData == "") {
                        TableStr = "<table class='table assigned'><tr><td>No Task Assigned</td></tr></table>";
                    }

                    else {
                        $('.assigned').remove();

                        var TableStr = '<table class="assigned table table-bordered  col-md-12 col-sm-12 ">  <thead><tr>' +

                              '<th style="width:220px;"><center>Task/Action</center> </th>' +
                              '<th><center>Assigned By</center></th>' +
                              '<th><center>Priority</center></th>' +
                              '<th style="width:1px;"><center>Comments</center></th>' +
                              '<th><center>Category</center></th>' +
                              '<th><center>Allocated Date</center></th>' +
                              '<th><center>Completed Date</center></th>' +
                              '<th><center>Frequency</center></th>' +
                              '<th style="width:1px;"><center>Overdue Days</center></th>' +
                              '<th><center>Attachment</center></th></tr></thead>';

                        $.each(resData, function (resKey, resText) {                            

                            var AllocatedDate = new Date(parseInt(resText.Allocated_Date.substr(6)));

                            var Jsdate = new Date(AllocatedDate);
                            var Jsgetdate = getCustomDay(Jsdate.getDate());
                            var Jsnmonth = month[Jsdate.getMonth()];
                            //var Jsnmonth = getCustomDay(Jsdate.getMonth());
                            var Jyear = Jsdate.getFullYear();
                            var JsAllocatedDate = Jsgetdate + "-" + Jsnmonth + "-" + Jyear;


                            var CompletedDate = new Date(parseInt(resText.Completed_date.substr(6)));
                            var JsComplDate = new Date(CompletedDate);
                            var JsComlGetDate = getCustomDay(JsComplDate.getDate());
                            var JsComlMonth = month[JsComplDate.getMonth()];
                            // var JsComlMonth = getCustomDay(JsComplDate.getMonth());

                            var JsComlYear = JsComplDate.getFullYear();
                            var JsCompletedDate = JsComlGetDate + "-" + JsComlMonth + "-" + JsComlYear;

                            resText.Completed_Percentage = resText.Completed_Percentage.split(" ").join("");
                            
                            console.log(resText);
                            if (resText.Comments == "") {
                                resText.Comments = "No Comments"
                            }


                            if (resText.Category == null) {
                                resText.Category = "";
                            }
                            var IndicateCompleted = '';

                            if (resText.Completed_Percentage == "100.00%")

                                {
                                IndicateCompleted = 'completed';

                            }
                           else if (resText.Completed_Percentage == "0.00%") {
                                IndicateCompleted = 'started';

                            }
                            else {
                                IndicateCompleted = 'ongoing';
                            }

                            if (resText.mms_filename != "") {
                                //totalCount
                                if (resText.Overdue_Days > 0) {

                                    TableStr += "<tr class='" + IndicateCompleted + "'>" +
                                         "<td><a href='@Url.Action("MeetingStatusUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "' class='modal-link btn   btn-sm ex1' data-placement='top' >" + resText.task + "</a><span class='pull-right'  id='totalCount'>" + GetCount(resText.Meeting_Id, resText.Task_Id) + "</span></td>" +
                                         "<td>" + resText.Assigned_By + "</td>" +
                                         "<td>" + resText.Priority + "</td>" +
                                         "<td><a href='@Url.Action("ShowComments", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn   btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Comments + "</td>" +
                                         "<td>" + resText.Category + "</td>" +
                                        "<td><center>" + JsAllocatedDate + "</center></td>" +
                                        "<td><center>" + JsCompletedDate + "</center></td>" +
                                              "<td>" + (resText.Freq_Name == null ? " " : resText.Freq_Name) + "</td>" +
                                         @*"<td><a href='@Url.Action("PercentageUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn   btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Completed_Percentage + "</a></td>" +*@
                                         "<td><center>" + resText.Overdue_Days + "</center></td>" +
                                        "<td><center> <a href='@Url.Action("Index","AttachMent")?meetingId=" + resText.Meeting_Id + "' class='glyphicon glyphicon-paperclip modal-link btn   btn-sm' data-placement='top' data-toggle='tooltip' style='width:25px'></a></center></td>" +
                                         // "<td> <a href='@Url.Action("Index","AttachMent")?meetingId=" + resText.meeting_id + "' class='modal-link btn   btn-sm' data-placement='top' data-toggle='tooltip'><center><img src='C:/Users/Thangavel/Desktop/paper.png' height='15' width='15'style='background:black;'/></center></a></td>" +
                                        "</tr>";
                                    

                                }
                                else {
                                    TableStr += "<tr class='" + IndicateCompleted + "'>" +
                                         "<td><a href='@Url.Action("MeetingStatusUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "' class='modal-link btn   btn-sm ex1' data-placement='top' >" + resText.task + "</a><span class='pull-right'  id='totalCount'>" + GetCount(resText.Meeting_Id, resText.Task_Id) + "</span></td>" +
                                         "<td>" + resText.Assigned_By + "</td>" +
                                         "<td>" + resText.Priority + "</td>" +
                                         "<td><a href='@Url.Action("ShowComments", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn   btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false' data-backdrop='static' data-keyboard='false'>" + resText.Comments + "</td>" +
                                         "<td>" + resText.Category + "</td>" +
                                        "<td><center>" + JsAllocatedDate + "</center></td>" +
                                        "<td><center>" + JsCompletedDate + "</center></td>" +
                                              "<td>" + (resText.Freq_Name == null ? " " : resText.Freq_Name) + "</td>" +
                                         @*"<td><a href='@Url.Action("PercentageUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn   btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Completed_Percentage + "</a></td>" +*@
                                         "<td><center>0</center></td>" +
                                         "<td> <a href='@Url.Action("Index", "AttachMent")?meetingId=" + resText.Meeting_Id + "' class='modal-link btn   btn-sm' data-placement='top' data-toggle='tooltip'><center><img src='../Content/Images/paper.png' height='15' width='15'/></center></a></td>" +

                                        // "<td> <a href='@Url.Action("Index","AttachMent")?meetingId=" + resText.meeting_id + "' class='modal-link btn   btn-sm' data-placement='top' data-toggle='tooltip'><center><img src='C:/Users/Thangavel/Desktop/paper.png' height='15' width='15' style='background:black;'/></center></a></td>" +
                               "</tr>";
                                }

                            }
                            else {
                                if (resText.Overdue_Days > 0) {

                                    if (resText.Status == "Completed") {
                                        TableStr += "<tr class='alert-success " + IndicateCompleted + "'>" +
                                            "<td><a href='@Url.Action("MeetingStatusUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "' class='modal-link btn  btn-sm ex1' data-placement='top' >" + resText.task + "</a><span class='pull-right'  id='totalCount'>" + GetCount(resText.Meeting_Id, resText.Task_Id) + "</span></td>" +
                                            "<td>" + resText.Assigned_By + "</td>" +
                                            "<td>" + resText.Priority + "</td>" +
                                            "<td><a href='@Url.Action("ShowComments", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn  btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Comments + "</td>" +
                                            "<td>" + resText.Category + "</td>" +
                                            "<td><center>" + JsAllocatedDate + "</center></td>" +
                                            "<td><center>" + JsCompletedDate + "</center></td>" +
                                              "<td>" + (resText.Freq_Name == null ? " " : resText.Freq_Name) + "</td>" +
                                            @*"<td><a href='@Url.Action("PercentageUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn  btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Completed_Percentage + "</a></td>" +*@
                                            "<td><center>" + resText.Overdue_Days + "</center></td>" +
                                            //"<td><center><img src='/mmsuser/Content/Images/paper.png' height='15' width='15'/></center></td>" +
                                            "<td></td>" +

                                   "</tr>";
                                    }
                                    else {
                                        TableStr += "<tr class='" + IndicateCompleted + "'>" +
                                            "<td><a href='@Url.Action("MeetingStatusUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "' class='modal-link btn  btn-sm ex1' data-placement='top' >" + resText.task + "</a><span class='pull-right'  id='totalCount'>" + GetCount(resText.Meeting_Id, resText.Task_Id) + "</span></td>" +
                                            "<td>" + resText.Assigned_By + "</td>" +
                                            "<td>" + resText.Priority + "</td>" +
                                            "<td><a href='@Url.Action("ShowComments", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn  btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Comments + "</td>" +
                                            "<td>" + resText.Category + "</td>" +
                                            "<td><center>" + JsAllocatedDate + "</center></td>" +
                                            "<td><center>" + JsCompletedDate + "</center></td>" +
                                              "<td>" + (resText.Freq_Name == null ? " " : resText.Freq_Name) + "</td>" +
                                            @*"<td><a href='@Url.Action("PercentageUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn  btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Completed_Percentage + "</a></td>" +*@
                                            "<td><center>" + resText.Overdue_Days + "</center></td>" +
                                            //"<td><center><img src='/mmsuser/Content/Images/paper.png' height='15' width='15'/></center></td>" +
                                            "<td></td>" +
                                   "</tr>";
                                    }

                                }
                                else {

                                    if (resText.Status == "Completed") {
                                        TableStr += "<tr class='alert-success " + IndicateCompleted + "'>" +
                                                "<td><a href='@Url.Action("MeetingStatusUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "' class='modal-link btn  btn-sm ex1' data-placement='top' >" + resText.task + "</a><span class='pull-right'  id='totalCount'>" + GetCount(resText.Meeting_Id, resText.Task_Id) + "</span></td>" +
                                                "<td>" + resText.Assigned_By + "</td>" +
                                                "<td>" + resText.Priority + "</td>" +
                                                "<td><a href='@Url.Action("ShowComments", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn  btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Comments + "</td>" +
                                                "<td>" + resText.Category + "</td>" +
                                                "<td><center>" + JsAllocatedDate + "</center></td>" +
                                                "<td><center>" + JsCompletedDate + "</center></td>" +
                                              "<td>" + (resText.Freq_Name == null ? " " : resText.Freq_Name) + "</td>" +
                                                @*"<td><a href='@Url.Action("PercentageUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn  btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Completed_Percentage + "</a></td>" +*@
                                                "<td><center>0</center></td>" +
                                                //"<td><center><img src='/mmsuser/Content/Images/paper.png' height='15' width='15'/></center></td>" +
                                                 "<td></td>" +
                                       "</tr>";
                                    }
                                    else {
                                        TableStr += "<tr class='" + IndicateCompleted + "'>" +
                                              "<td><a href='@Url.Action("MeetingStatusUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "' class='modal-link btn  btn-sm ex1' data-placement='top' >" + resText.task + "</a><span class='pull-right'  id='totalCount'>" + GetCount(resText.Meeting_Id, resText.Task_Id) + "</span></td>" +
                                              "<td>" + resText.Assigned_By + "</td>" +
                                              "<td>" + resText.Priority + "</td>" +
                                              "<td><a href='@Url.Action("ShowComments", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn  btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Comments + "</td>" +
                                              "<td>" + resText.Category + "</td>" +
                                              "<td><center>" + JsAllocatedDate + "</center></td>" +
                                              "<td><center>" + JsCompletedDate + "</center></td>" +
                                              "<td>" + (resText.Freq_Name == null ? " " : resText.Freq_Name) + "</td>" +
                                              @*"<td><a href='@Url.Action("PercentageUpdate", "MyTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn  btn-sm' data-placement='top' data-backdrop='static' data-keyboard='false'>" + resText.Completed_Percentage + "</a></td>" +*@
                                              "<td><center>0</center></td>" +
                                              // "<td><center><img src='/mmsuser/Content/Images/paper.png' height='15' width='15'/></center></td>" +
                                              "<td></td>" +
                                     "</tr>";
                                    }
                                }
                            }
                        });
                    }


                    $(".result_grid").append(TableStr);
                    InitializePaging();
                },
                error: function (resData, txtStatus, jqhr) {
                    console.log(resData.error);

                }

            })
        }
    }



</script>