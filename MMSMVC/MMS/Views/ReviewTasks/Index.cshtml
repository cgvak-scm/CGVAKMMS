@model dynamic
@{
    ViewBag.Title = "Review Tasks";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    string startDateStr = Convert.ToDateTime(ViewBag.StartDate).ToString("dd/MMM/yyyy");
    string endDateStr = Convert.ToDateTime(ViewBag.EndDate).ToString("dd/MMM/yyyy");
}

<style>
    p.notifyCnt {
        color: blue;
        text-align: right;
    }

    #bindTaskComments {
        display: none;
    }

    #btnAddComment {
        display: none;
    }
</style>
<style>
    .modalcomments {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        overflow: auto;
        z-index: 1010;
        display: flex;
        width: 600px;
        max-width: 100%;
        height: 400px;
        max-height: 100%;
    }

    .modal-guts {
        /* other stuff we already covered */
        /* cover the modal */
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        /* spacing as needed */
        padding: 20px 50px 20px 20px;
        /* let it scroll */
        overflow: auto;
    }

    #close {
        float: right;
        display: inline-block;
        padding: 2px 5px;
        background: #ccc;
        background-color: chocolate;
    }

    .fragment {
        display: none;
        background-color: #d9edf7;
        display: inline-block;
        width: 600px;
        border: ridge;
        flood-color: gainsboro;
        padding: 2px 5px;
        float: right;
    }
</style>
<style>
    /* The container */
    .container1 {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 12px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        /* Hide the browser's default checkbox */
        .container1 input {
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

    /* Create a custom checkbox */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
    }

    /* On mouse-over, add a grey background color */
    .container1:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the checkbox is checked, add a blue background */
    .container1 input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .container1 input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    .container1 .checkmark:after {
        left: 9px;
        top: 5px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }
</style>
<style type="text/css">
    #modal-content .navbar, #modal-content .mms-footer-bar {
        display: none;
    }
</style>

<div class="panel panel-primary">
    <div class="panel-heading">
        Review Tasks
    </div>
    <div class="panel-body">
        <form class="mytasks">
            <div class="alert alert-warning">
                <div class="row">
                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">Till Date</div>
                            @Html.TextBox("end_date", endDateStr, new
                       {
                           @class = "form-control input-sm toDate",
                           @style = "background-color:white; height:30px;",
                           @required = "required",
                           @readonly = "readonly",
                           @disabled = "disabled"
                       })
                        </div>
                    </div>
                    @* Participant Block *@

                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">Participants</div>

                            @Html.DropDownList("Participants", new SelectList(ViewBag.Participants, "Participant", "Name"), "All", new { @class = "form-control input-sm Participants", @style = "width:160px;" })

                        </div>
                    </div>

                    @* Participant Block Ends *@

                    @* Category Block *@
                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">Category</div>

                            @Html.DropDownList("Category", new SelectList(ViewBag.Categories, "ID", "CategoryName"), "All", new { @class = "form-control input-sm CategoryTypeID" })
                        </div>
                    </div>

                    @* End Of Category Block *@

                    @* Priority Block *@

                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">Priority</div>
                            @Html.DropDownList("Priority", new List<SelectListItem>{

                                                new SelectListItem { Text="High",Value="2" },
                                               new SelectListItem { Text="Medium",Value="1" },
                                               new SelectListItem { Text="Low",Value="0" }
                                               }, "All", new { @class = "form-control input-sm " })
                        </div>

                        @* End Priority Block *@
                    </div>
                    <br /><br />

                    <div class="col-md-3 col-sm-4">
                        <div class="input-group">
                            <div class="input-group-addon input-md">Frequency</div>
                            @Html.DropDownList("ReviewFrequencyID", new MultiSelectList(ViewBag.ReviewFrequencyID, "Freq_In_Days", "Freq_Name"), htmlAttributes: new { @multiple = "multiple", @class = "form-control listbox ReviewFrequencyID input-sm required" })
                            
                        </div>
                    </div>
                   
                    <div class="col-md-3 col-sm-4 ">
                        <div class="input-group input-md">
                            <button type="button" id="review_multiple" class="btn btn-primary btn-sm">Review Multiple Tasks</button>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-4">
                        <div class="input-group input-sm" style="padding:0px!important;">
                            <button type="submit" id="view_task" class="btn btn-primary btn-sm">View Tasks To Be Review</button>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="responsive-table">
                        <div class="result_grid  col-md-12">
                            <!--- dynamic results will be fetched here -->
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


<div id="review-alert" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h5 class="modal-title" id="mySmallModalLabel">Are you sure want to review this?</h5>
            </div>
            <div class="modal-body text-center">
                <a href="#" class="btn btn-primary" id="myyes" data-dismiss="modal">Yes</a>
                <a href="#" class="btn btn-danger" data-dismiss="modal">No</a>
            </div>
        </div>
    </div>
</div>

<div id="review-success" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h5 class="modal-title" id="mySmallModalLabel">Selected task has been reviewed successfully. </h5>
            </div>

        </div>
    </div>
</div>

<div id="bindTaskComments" class="modalcomments modalcontent fragment" style="padding:40px 50px;">
    <div class="modal-guts">

    </div>
</div>

<div id="EmailSend" class="dialog">
    <table>
        <tr>
            <td>To:</td>
            <td>
                <input type="text" id="txtToEmailAddress" readonly="readonly" style="width: 250px;" />
            </td>
        </tr>
        <tr>
            <td>CC:</td>
            <td>
                <input type="text" id="txtCC" readonly="readonly" style="width: 250px;" />
            </td>
        </tr>
        <tr>
            <td>Subject:</td>
            <td>
                <input type="text" id="txtEmailsubject" style="width: 250px;" />
            </td>
        </tr>
        <tr>
            <td align="justify">Content</td>
            <td>
                <textarea id="txtEmailBody" style="height: 200px; width: 250px;" cols="10" rows="6"></textarea>
            </td>
        </tr>
        <tr>
            <td>&nbsp</td>
            <td><input type="button" class="btn btn-default" value="send" onclick="EmailComments()" style="float:left" /></td>
        </tr>
    </table>
    <div style="float: right; width: 60%; margin-top: 10px;">

    </div>
</div>

<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-multiselect.js"></script>
@*<script src="~/Scripts/bootstrap-multiselect.js"></script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/customVal")
}

<script>
    function myFunction(Mtg_ID, taskId) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("Review","ReviewTasks")',
            data: {
                meetingId: Mtg_ID,
                taskId: taskId
            },
            success: function () {
                $('#review-alert').modal('hide');
                window.location.reload();
                console.log(meetingId, taskId);
                $('#review-success').modal('show');
            },
            error: function () {
                alert("Please try again");
            }

        });
    }

   $(".listbox").multiselect({
       includeSelectAllOption: true
    });

    $(".CategoryTypeID").on('change', function () {
        window.sessionStorage.setItem("CategoryTypeID", this.value);
    });

    $(document).ready(function () {
        $("#bindTaskComments").hide();
        $(".CategoryTypeID").val(window.sessionStorage.getItem("CategoryTypeID"));
        $(document).on("click", "#command-close", function () {
            $("#bindTaskComments").hide();
        });
    });

    //Participants
    $("#Participants").on('change', function () {
        window.sessionStorage.setItem("Participants", this.value);
    });

    $(document).ready(function () {
        $("#Participants").val(window.sessionStorage.getItem("Participants"));
    });

    //Priority
    $("#Priority").on('change', function () {
        window.sessionStorage.setItem("Priority", this.value);
    });

    $(document).ready(function () {
        $("#Priority").val(window.sessionStorage.getItem("Priority"));
    });

    //Frequency
    $("#ReviewFrequencyID").on('change', function () {
        window.sessionStorage.setItem("ReviewFrequencyID", this.value);
    });

    $(document).ready(function () {
        $("#ReviewFrequencyID").val(window.sessionStorage.getItem("ReviewFrequencyID"));
    });

    var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

    var start = new Date();
    start.setFullYear(start.getFullYear() - 70);
    var end = new Date();
    end.setFullYear(end.getFullYear() + 1);

    function getCustomDay(dayStr) {
        var day = parseInt(dayStr);
        if (day < 10)
            return '0' + dayStr;
        else
            return dayStr;
    }
    $(document).ready(function () {
        $(".fromDate").datepicker({
            changeMonth: true,
            changeYear: true,
            minDate: new Date('3/1/2017'),
            yearRange: 2017 + ':' + end.getFullYear(),
            autoclose: true,
            dateFormat: 'dd/M/yy',
            onSelect: function (selected) {
                console.log(selected);
                var dt = new Date(selected);
                dt.setDate(dt.getDate() + 1);
                $(".toDate").datepicker("option", "minDate", dt);
                var ReviewStartDate = $('.fromDate').val();
                $.get('@Url.Action("Index", "ReviewTasks")', { ReviewStartDate: ReviewStartDate });
            },
        });
        LoadInitialEvents();
        $("#view_task").click(function (e) {
            e.preventDefault();
            $('.assigned').remove();
            $(".Paginate").remove();
            ViewTaskClicked();
        });
    });

    /////
    function EndDateChange(_startDate) {
        $("#end_date").datepicker('remove');
        $("#end_date").datepicker({ startDate: _startDate, autoclose: true, dateFormat: 'dd/M/yy', }).datepicker('fill');
    }

    function InitializePaging() {
        var jslink = $("<script src='@Url.Content("~/Scripts/jquery.simplePagination.js")' type='text/javascript'/>");
        $('head').append(jslink);
        $(".assigned").simplePagination();
    }

    function LoadInitialEvents() {
        var d = new Date();
        var curr_date = getCustomDay(d.getDate());
        var curr_month = month[d.getMonth()];
        var curr_year = d.getFullYear();
        var mydate = curr_date + "/" + curr_month + "/" + curr_year;

        $(".toDate").datepicker({
            autoclose: true, changeMonth: true,
            changeYear: true,
            dateFormat: 'dd/M/yy',
            minDate: 0,
            yearRange: 2017 + ':' + end.getFullYear(),

            autoclose: true,
            dateFormat: 'dd/M/yy',
            onSelect: function (selected) {
                console.log(selected);
                var ReviewEndDate = $('.toDate').val();
                $.get('@Url.Action("Index", "ReviewTasks")', { ReviewEndDate: ReviewEndDate });
            }
        });
        ViewTaskClicked();
    }

    function monthnumber(s) {
        var count = 1;
        for (var i = 0; i < month.length; i++) {
            if (month[i] == s) {
                count = i + 1;
            }
        }
        return count;
    }
    var d = new Date();
    var td = d.setDate(d.getDate() + 1);
    var tp = new Date(parseInt(td));
    var tomorrow_date = getCustomDay(tp.getDate());
    var tomorrow_month = month[d.getMonth()];

    var k = new Date();
    var pd = k.setDate(k.getDate() - 1);
    var pp = new Date(parseInt(pd));
    var previous_date = getCustomDay(pp.getDate());
    var previous_month = month[pp.getMonth()];

    var ds = new Date();
    var curr_date = getCustomDay(ds.getDate());

    var curr_month = month[ds.getMonth()];
    var curr_year = ds.getFullYear();

    var mydate = curr_date + "/" + curr_month + "/" + curr_year;
    var yesterdate = previous_date + "/" + previous_month + "/" + curr_year;
    var tomorrowdate = tomorrow_date + "/" + tomorrow_month + "/" + curr_year;

    var Starting;
    var ending;

    function ViewTaskClicked() {

        var PriorityType = $("#Priority option:selected").text();

        var Category_id = $(".CategoryTypeID option:selected").val();

        if (Category_id == "") {
            Category_id = 0;
        }

        var Participants = $("#Participants option:selected").val();
        if (Participants == "") {
            Participants = 0;
        }

        var FrequencyId = $('select#ReviewFrequencyID').val();

        if (FrequencyId != null) {
            var ReequencyAll = FrequencyId[0];

            if (ReequencyAll == "multiselect-all") {
                FrequencyId = "All";
            }
        }
        if (FrequencyId == "") {
            FrequencyId = 0;
        }

        var Start_date;
        var end_date;
        if (Starting == null || Starting == "") {
            Start_date = '01-03-2017 00:00:00';
        }
        else {
            Start_date = Starting;
        }
        if (ending == null || ending == "") {
            end_date = $("#end_date").val();
        }
        else {
            end_date = ending;
        }

        if (end_date == null || end_date == "") {
            alert("Please fill the dates to proceed");
        }

        else {

            $.ajax({
                type: 'post',
                url: "@Url.Action("FetchMyTasks", "ReviewTasks")",
                data: JSON.stringify({ "startDate": Start_date, "endDate": end_date, "Category_id": Category_id, "Participant": Participants, "PriorityType": PriorityType, "FrequencyId": FrequencyId }),
                dataType: "json",
                contentType: "Application/json;charset=utf-8",
                success: function (resData)
                {
                    let width = screen.width;

                    //For Desktop Screen
                    if (width > '600')
                    {
                        if (resData == null || resData == "")
                        {
                            TableStr = "<table class='table assigned'><tr><td>No Task</td></tr></table>";
                        }
                        else
                        {
                            var TableStr = "<table class='assigned table table-bordered  col-md-12 col-sm-12 '><thead><tr>" +
                                "<th style=''><label class='container1'><input type='checkbox' id='review-select-all' ><span class='checkmark'></span></label></th>" +
                                "<th style=''><center>Task/Action</center> </th>" +
                                "<th style=''><center>Last Added Comment</center></th>" +
                                " <th><center>Assigned To</center></th>" +
                                '<th><center>Last Reviewed Date</center></th>' +
                                " <th><center>Assigned Date</center></th>" +
                                " <th><center>Overdue days</center></th>" +

                                '<th><center>Comment / Review</center></th></tr></thead>';

                            $.each(resData, function (resKey, resText) {
                                var CompletedDate = resText.Completion_Date;
                                var JsComplDate = new Date(CompletedDate);
                                var JsComlGetDate = getCustomDay(JsComplDate.getDate());
                                var JsComlMonth = month[JsComplDate.getMonth()];
                                var JsComlYear = JsComplDate.getFullYear();
                                var JsCompletedDate = JsComlGetDate + "-" + JsComlMonth + "-" + JsComlYear;

                                var ReviewingDate = new Date(parseInt(resText.Review_Date.substr(6)));
                                var JsRevDate = new Date(ReviewingDate);
                                var JsRevGetDate = getCustomDay(JsRevDate.getDate());
                                var JsRevMonth = month[JsRevDate.getMonth()];
                                var JsRevYear = JsRevDate.getFullYear();
                                var JsReviewDate = JsRevGetDate + "-" + JsRevMonth + "-" + JsRevYear;

                                var AssignedDate = new Date(parseInt(resText.Assigned_Date.substr(6)));
                                var JsAssDate = new Date(AssignedDate);
                                var JsAssGetDate = getCustomDay(JsAssDate.getDate());
                                var JsAssMonth = month[JsAssDate.getMonth()];
                                var JsAssYear = JsAssDate.getFullYear();
                                var JsAssignedDate = JsAssGetDate + "-" + JsAssMonth + "-" + JsAssYear;

                                var reviewnumber = monthnumber(JsRevMonth);
                                var mydatenumber = monthnumber(curr_month);


                                if (resText.Comments == "") {
                                    resText.Comments = "No Comment"
                                }

                                if (resText.Category == null) {
                                    resText.Category = "";
                                }
                                if (resText != "") {

                                    TableStr += "<tr>" +
                                        "<td><label class='container1'><input type='checkbox' class='checkAll' id='review-select' meetingid=" + resText.Meeting_Id + " taskid=" + resText.Task_Id + "><span class='checkmark'></span></label></td>" +
                                        '<td><a class="BindComments" onclick="CallGetComments(' + resText.Meeting_Id + ',' + resText.Task_Id + ')">' + resText.Task + '</a></td>' +
                                        '<td><align-left>' + resText.Comments + '</align-left><a class="BindComments" onclick="CallGetComments(' + resText.Meeting_Id + ',' + resText.Task_Id + ')"> <p class="notifyCnt">' + GetCount(resText.Task_Id, resText.Meeting_Id) + '</p></a></td>' +
                                        //"<td><align-left>" + resText.Comments + "</align-left> <p class='notifyCnt'>" + GetCount(resText.Task_Id, resText.Meeting_Id) + "</p></td>" +

                                        "<td><align-left>" + resText.Chairperson + "</align-left></td>" +
                                        "<td><center>" + JsReviewDate + "</center></td>" +

                                        "<td><center>" + JsAssignedDate + "</center></td>" +

                                        "<td><center>" + resText.Overdue_days + "</center></td>"

                                        + "<td><center><a href='@Url.Action("ShowComments", "ReviewTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn btn-default btn-sm' data-placement='top'>Comment</a>       <a data-toggle='modal' data-target='#review-alert' class='ReviewClick btn btn-default btn-sm' meetingid=" + resText.Meeting_Id + " taskid=" + resText.Task_Id + "><b>Review</b></a></center></td>"
                                }
                            });
                        }
                    }

                    //For Mobile Screen
                    else
                    {
                        var TableStr = "";

                        if (resData == null || resData == "")
                        {
                            TableStr += "<table class='table assigned'><tr><td>No Task</td></tr></table>";
                        }
                        else
                        {
                            TableStr += "<table class='assigned table table-bordered  row-md-12 row-sm-12 '>" 

                            $.each(resData, function (resKey, resText) {
                                var CompletedDate = resText.Completion_Date;
                                var JsComplDate = new Date(CompletedDate);
                                var JsComlGetDate = getCustomDay(JsComplDate.getDate());
                                var JsComlMonth = month[JsComplDate.getMonth()];
                                var JsComlYear = JsComplDate.getFullYear();
                                var JsCompletedDate = JsComlGetDate + "-" + JsComlMonth + "-" + JsComlYear;

                                var ReviewingDate = new Date(parseInt(resText.Review_Date.substr(6)));
                                var JsRevDate = new Date(ReviewingDate);
                                var JsRevGetDate = getCustomDay(JsRevDate.getDate());
                                var JsRevMonth = month[JsRevDate.getMonth()];
                                var JsRevYear = JsRevDate.getFullYear();
                                var JsReviewDate = JsRevGetDate + "-" + JsRevMonth + "-" + JsRevYear;

                                var AssignedDate = new Date(parseInt(resText.Assigned_Date.substr(6)));
                                var JsAssDate = new Date(AssignedDate);
                                var JsAssGetDate = getCustomDay(JsAssDate.getDate());
                                var JsAssMonth = month[JsAssDate.getMonth()];
                                var JsAssYear = JsAssDate.getFullYear();
                                var JsAssignedDate = JsAssGetDate + "-" + JsAssMonth + "-" + JsAssYear;

                                var reviewnumber = monthnumber(JsRevMonth);
                                var mydatenumber = monthnumber(curr_month);


                                if (resText.Comments == "") {
                                    resText.Comments = "No Comment"
                                }

                                if (resText.Category == null) {
                                    resText.Category = "";
                                }
                                if (resText != "")
                                {
                                    TableStr += 
                                        "<tr><th style=''><label class='container1'><input type='checkbox' id='review-select-all' ><span class='checkmark'></span></label></th><td><label class='container1'><input type='checkbox' class='checkAll' id='review-select' meetingid=" + resText.Meeting_Id + " taskid=" + resText.Task_Id + "><span class='checkmark'></span></label></td></tr>" +
                                        "<tr><th style=''>Task/Action</th><td><a class='BindComments' onclick='CallGetComments(' + resText.Meeting_Id + ',' + resText.Task_Id + ')'>' + resText.Task + '</a></td></tr>" +
                                        "<tr><th style=''>Last Added Comment</th><td><align-left>' + resText.Comments + '</align-left><a class='BindComments' onclick='CallGetComments(' + resText.Meeting_Id + ',' + resText.Task_Id + ')'> <p class='notifyCnt'>' + GetCount(resText.Task_Id, resText.Meeting_Id) + '</p></a></td></tr>" +
                                        //"<td><align-left>" + resText.Comments + "</align-left> <p class='notifyCnt'>" + GetCount(resText.Task_Id, resText.Meeting_Id) + "</p></td>" +

                                        "<tr><th>Assigned To</th><td><align-left>" + resText.Chairperson + "</align-left></td></tr>" +
                                        "<tr><th>Last Reviewed Date</th><td>" + JsReviewDate + "</td></tr>" +

                                        "<tr><th>Assigned Date</th><td>" + JsAssignedDate + "</td></tr>" +

                                        "<tr><th>Overdue days</th><td>" + resText.Overdue_days + "</td></tr>"

                                      + "<tr><th>Comment / Review</th><td><a href='@Url.Action("ShowComments", "ReviewTasks")?meetingId=" + resText.Meeting_Id + "&taskId=" + resText.Task_Id + "'  class='modal-link btn btn-default btn-sm' data-placement='top'>Comment</a>       <a data-toggle='modal' data-target='#review-alert' class='ReviewClick btn btn-default btn-sm' meetingid=" + resText.Meeting_Id + " taskid=" + resText.Task_Id + "><b>Review</b></a></td></tr>"
                                }
                            });
                        }

                    }

                        $(".result_grid").append(TableStr);

                        InitializePaging();
                },
                    error: function (resData, txtStatus, jqhr) {
                        console.log(resData.error);
                    }
            });
        }
        $("#bindTaskComments").hide();
    }
    $(document).on("click", ".ReviewClick", function () {
        var meetingid = $(this).attr("meetingid");
        var taskid = $(this).attr("taskid");
        $("#myyes").attr("meetingid", meetingid);
        $("#myyes").attr("taskid", taskid);
    });

    $(document).on("click", "#myyes", function () {
        var meetingid = $(this).attr("meetingid");
        var taskid = $(this).attr("taskid");
        myFunction(meetingid, taskid);
    });
</script>

<script>

    $(document).on("click", "#review-select-all", function () {
        $(".checkAll").prop('checked', $(this).prop('checked'));
    });

    $(document).on("click", ".checkAll", function () {
        $("#review-select-all").prop('checked', false);
    });

    var mycount = 0;
    var arr = [];

    $('#review_multiple').click(function () {
        $('.assigned input[type="checkbox"]:checked').not('#review-select-all').each(function () {
            arr.push({
                meetingid: $(this).attr("meetingid"),
                taskid: $(this).attr("taskid")
            });
        });
        myloadajax();
    });

    function myloadajax() {
        if(mycount < arr.length)
        {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Review","ReviewTasks")',
                data: {
                    meetingId: arr[mycount].meetingid,
                    taskId: arr[mycount].taskid
                },
                success: function () {
                    mycount++;
                    myloadajax();
                },
                error: function () {
                    alert("Please try again");
                }
            });
        }
        else
        {
            $('#review-alert').modal('hide');
            $('#review-success').modal('show');
            window.location.reload();
        }
    }

</script>


<script>
    //Shaheer Changes

    function GetCount(TaskId, Meeting_Id) {
        var count = 0;
        $.ajax({
            async: false,
            type: 'post',
            url: "@Url.Action("GetCounts", "MeetingDetails")",
            data: JSON.stringify({ "meetingId": Meeting_Id, "employeeId": 0, "participant": 0, "task": 0, "task_id": TaskId }),
            dataType: 'json',
            contentType: 'application/json;charset=utf-8',
            success: function (selectCount) {
                count = selectCount;
            }
        });

        if (typeof notifyCnt == "undefined" || notifyCnt == null) {
            return "(" + count + "&nbsp;Comments )";
        }
        else {
            $(".notifyCnt").html(count + "&nbsp;Comments");
        }
    }

    function CallGetComments(Mtg_ID, taskId) {

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetCommentsList", "MeetingDetails")",
            data: { meetingId: Mtg_ID, respPerson: "", empId: 0, meetingStatus: "", taskId: taskId },
            dataType: "text",
            beforeSend: function () {
                $("#bindTaskComments").html("<img id='wait'  style='max-width:100%;padding:5% 40%;'  src='../Content/Images/wait.gif'/>");

            },
            success: function (resData) {
                if (resData.indexOf("Mtg_Status_EmpID") == -1) {
                    window.location.href = "@Url.Action("Login", "Account")";
                }
                $("#wait").remove();
                $("#bindTaskComments").show();
                $("#bindTaskComments").html("<button type='button' id='command-close' class='close' data-dismiss='modal'>&times;</button>");
                $("#bindTaskComments").append(resData);
                InitializeEmailComments();

                var scrollPos = $("#bindTaskComments").offset().top;
                $(window).scroll(scrollPos);
            },
            failure: function (response) {
                alert(response.d);
            }

        });
    }

    function InitializeEmailComments() {
        $(".emailcomment").click(function () {

            $('#EmailSend').dialog().dialog('open');
            var To_Mail = $(this).data('to_email');
            var to_CC = $(this).data('cc_mail');
            $(this).parents('.tablecomments').find('.comment').text();
            var Subject_Task = document.getElementById('Mtg_Task').value;  // $(this).data('subject_task');
            var Body_Content = $(this).parents('.tablecomments').find('.comment').text();
            $(this).parents('.tablecomments').find('.comment').text();
            $('#txtToEmailAddress').val(To_Mail);
            $("#txtCC").val(to_CC);
            $('#txtEmailsubject').val(Subject_Task);
            $('#txtEmailBody').val(Body_Content);

        });
    }

    function EmailComments() {
        emailaddr = $('#txtToEmailAddress').val();
        ccaddr = $("#txtCC").val();
        subject = $('#txtEmailsubject').val();
        content = $('#txtEmailBody').val();
        var Commented_By = "@Session["LoggedEmployeeName"]";
        var respPerson = document.getElementById('RespPerson').value;
        var Mtg_Status = document.getElementById('Mtg_Status').value;
        var Email = "@Session["LoggedEmail"]";

        $.ajax({
            type: "POST",
            url: "@Url.Action("EmailComments", "MeetingDetails")",
            data: JSON.stringify({ emailAddress: emailaddr, cc: ccaddr, subject: subject, bodyContent: content, respPerson: respPerson, taskStatus: Mtg_Status, commentedBy: Commented_By, currentMail: Email }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function OnSuccessAddComment(result) {
                $('#EmailSend').dialog('close');
                alert('Email sent successfully');

                $("#wrapper").removeClass("overlay");

                $("#bindTaskComments").hide();
            },
            failure: function (response) {
                alert(response.d);
            }
        });
    }

    $('#EmailSend').dialog({
        title: 'Send Email', autoOpen: false, height: 400, width: 450, modal: true, open: function () {
            $("#wrapper").not($(this)).addClass("overlay");
        }
    })

    $("body").on("click", ".ui-dialog-titlebar-close", function () {
        $("#wrapper").removeClass("overlay");
    });

</script>