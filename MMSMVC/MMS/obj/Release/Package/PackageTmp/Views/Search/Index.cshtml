@model MMS.Models.MMS_Meeting_Template

@{
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<div class="panel panel-primary">
    <div class="panel-heading">
        Create Meeting Template
    </div>
    <div class="panel-body">
        <style>
            label.error {
                position: absolute;
                font-size: 11px;
                color: #ff0000;
            }
        </style>
        @using (Html.BeginForm("Index", "Search", FormMethod.Post, htmlAttributes: new { @class = "meeting-form", @enctype = "multipart/form-data" }))
        {

            @Html.ValidationSummary(true, "fill the errors", new { @class = "text-danger" })
            @*<input type="file" id="UploadedFile" name="uploadFile" class="btn-sm" multiple />*@



            <div class="form-horizontal">

                <div class="col-md-12 col-sm-12">
                    <div class="form-inline alert alert-warning" style="padding: 8px;">

                        <label>
                            Meeting Details
                        </label>

                    </div>

                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.Label("Meeting Name", htmlAttributes: new { @class = "control-label col-md-4 required" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.meeting_name, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "meetingObj",@maxlength="150" } })

                            </div>
                        </div>
                    </div>


                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("Time", htmlAttributes: new { @class = "control-label col-md-3 required" })
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="inputbottom">
                                            @Html.EditorFor(model => model.meeting_time, new { htmlAttributes = new { @class = " meeting_hours form-control input-sm ", @required = "required", @id = "meetingDate" ,@readonly="reaadonly"} })
                                        </div>

                                    </div>
                                    <div class="col-md-3">
                                        @Html.Label("Duration", htmlAttributes: new { @class = "control-label col-md-3 required" })
</div>

                                        <div class="col-md-5">
                                            <div class="inputbottom">
                                                @Html.EditorFor(model => model.meeting_duration, new { htmlattributes = new { @class = " form-control Meeting_duration", @required = "required", @id = "meetingHours", @readonly = "reaadonly" } })
                                            </div>
                                        </div>
                                    </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.Label("Meeting Venue", htmlAttributes: new { @class = "control-label col-md-4 required" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.meeting_venue, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "meetingVenue", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>



                </div>


            </div>

            <div class="form-horizontal">

                <div class="col-md-12 col-sm-12">

                    <div class="form-inline alert alert-warning" style="padding: 8px;">
                        <label>
                            Participant Details
                        </label>
                    </div>


                    <div class="col-md-5">

                        <div class="form-group">
                            @Html.Label("Department", htmlAttributes: new { @class = "control-label col-md-4 required" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.department, new SelectList(ViewBag.Departments, "DepartmentName", "DepartmentName"), "--SELECT---", htmlAttributes: new { @class = "form-control Meeting_Department", @required = "required" })

                            </div>
                        </div>
                    </div>

                    <div class="col-md-7">

                        <div class="form-group">
                            @Html.Label("If others specify", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.Editor("Meeting_other_dept", new { htmlattributes = new { @class = "form-control Meeting_other_dept" } })

                            </div>
                        </div>
                    </div>


                    <div class="col-md-5">
                        <div class="form-group">
                            <div class="col-md-4"><div class="form-group">&nbsp;</div></div>
                            <div class="col-md-8">

                                @Html.ListBox("Participants", new SelectList(""), htmlAttributes: new { @class = "form-control " })
                            </div>

                        </div>
                    </div>

                    <div class="col-md-7">
                        <div class="form-group">
                            <div class="col-md-3 col-xs-5">
                                <input type="button" class="form-control btn-default" value=">>" name="move_next" id="move_nxt" />
                                <br />
                                <input type="button" class="form-control btn-default" value="<<" name="move_prev" id="move_prv" />
                                <br />
                            </div>
                            <div class="col-md-9">

                                @Html.ListBox("Added_Participants", new SelectList(""), htmlAttributes: new { @class = "form-control" })

                                @Html.Hidden("hidden_participants")



                            </div>
                        </div>
                    </div>




                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.Label("Objective", htmlAttributes: new { @class = "control-label col-md-4 required" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.objective, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "meeting_type", @maxlength = "150" } })

                            </div>
                        </div>
                    </div>

                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.Label("Meeting Chairperson", htmlAttributes: new { @class = "control-label col-md-3 required" })
                            <div class="col-md-9">
                                @{

                                    @*@Html.DropDownListFor(model => model.meeting_chairperson, new SelectList(""), "--SELECT--", htmlAttributes: new { @class = "form-control temp_meeting_chairperson ", @required = "required" })*@

                                    @Html.DropDownList("ChairPerson", new SelectList(""), "--SELECT--", htmlAttributes: new { @class = "form-control temp_meeting_chairperson ", @required = "required" })

                                }


                            </div>
                        </div>
                    </div>


                </div>
            </div>


            <div id="alertbox" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
                <div class="modal-dialog modal-sm" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            <h5 class="modal-title text-center" id="mySmallModalLabel">Please enter all the fields </h5>
                        </div>

                    </div>
                </div>
            </div>



            <div class="col-md-12 col-sm-12">

                <div class="col-md-12 text-right smcenter">
                    <div class="form-horizontal">
                        <input type="submit" value="Save" class="btn" name="command" id="save_template_meeting" />


                    </div>

                </div>
            </div>
                                    }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/customValScript")
}

<script>

    $(document).ready(function () {



        ///*   createMeeting Dynamic add content     */
        //$('#save_template_meeting').click(function () {
        //    $("#Added_Participants option").attr("selected", "selected");
        //    $("$#meeting_chairperson option").attr("selected","selected");
        //    $("form").submit();
        //});



        //if (($('#meetingObj').val() == "") && ($('#meetingVenue').val() == "") && ($('#meetingDate').val() == "") && ($('#meetingHours').val() == "") && ($('#department').val() == "") && ($('#ChairPerson').val() == "") && ($('#meeting_type').val() == "")) {
        //    $('#save_template_meeting').attr('disabled', true);
        //}
        //else {
        //$('#save_template_meeting').attr('disabled', true);
        //}



        /*   createMeeting Dynamic add content     */
        $('#save_template_meeting').click(function () {
   
            var meetingObj = $.trim($('#meetingObj').val());
            var meetingObj = $.trim($('#meetingVenue').val());
            var meetingObj = $.trim($('#meetingDate').val());
            var meetingObj = $.trim($('#meetingHours').val());
            var meetingObj = $.trim($('#department').val());
            var meetingObj = $.trim($('#ChairPerson').val());
            var meetingObj = $.trim($('#meeting_type').val());

            // Check meetingObj if empty of not
            if (meetingObj == '') {
                // $('#save_template_meeting').attr('disabled', true);
                //alert('Please Enter all Fields');
                $('#alertbox').modal('show');
                return false;

            }
            // Check meetingVenue if empty of not
            if (meetingVenue == '') {
                // $('#save_template_meeting').attr('disabled', true);
                //alert('Please Enter all Fields');
                $('#alertbox').modal('show');
                return false;

            }
            // Check meetingDate if empty of not
            if (meetingDate == '') {
                //  $('#save_template_meeting').attr('disabled', true);
                //alert('Please Enter all Fields');
                $('#alertbox').modal('show');
                return false;

            }
            // Check meetingHours if empty of not
            if (meetingHours == '') {
                //  $('#save_template_meeting').attr('disabled', true);
                //alert('Please Enter all Fields');
                $('#alertbox').modal('show');
                return false;

            }
            // Check department if empty of not
            if (department == '') {
               // $('#save_template_meeting').attr('disabled', true);
                // alert('Please Enter all Fields');
                $('#alertbox').modal('show');
                return false;
            }
            // Check ChairPerson if empty of not
            if (ChairPerson == '') {
                //$('#save_template_meeting').attr('disabled', true);
                // alert('Please Enter all Fields');
                $('#alertbox').modal('show');
                return false;
            }
            // Check meeting_type if empty of not
            if (meeting_type == '') {
                //$('#save_template_meeting').attr('disabled', true);
                // alert('Please Enter all Fields');
                $('#alertbox').modal('show');
                return false;

            }
            else
            {
                $('#save_template_meeting').attr('disabled', false);
            }


            //if (($('#meetingObj').val() == "") && ($('#meetingVenue').val() == "") && ($('#meetingDate').val() == "") && ($('#meetingHours').val() == "") && ($('#department').val() == "") && ($('#ChairPerson').val() == "") && ($('#meeting_type').val() == "")) {
            //    $('#save_template_meeting').attr('disabled', false);
            //}
            //else {
            //    $('#save_template_meeting').attr('disabled', false);
            //}


                $("#Added_Participants option").attr("selected", "selected");
                $("#ChairPerson").attr("selected", "selected");
            //    $("form").submit();

            $("form").submit();
        });






        $("body").addClass("active");

        if ($("html").hasClass("attach-active")) {
            $(this).remove();
        }

        $("#meetingObj").change(function () {

            var data = 'meetingName=' + $(this).val();

            $.post('/Search/CheckMeetingName', data).success(function (res) {
                if (res > 0) {
                    alert("Meeting Name already exist!..");
                    $("#meetingObj").val("");
                }
            });
        });




        function GetSelectedOptions() {
            var items;
            $("#Added_Participants option").each(function () {
                items += "<option value='" + $(this).val() + "'>" + $(this).text() + "</option>";

            });
            return items;
        }


        function getSelectedChairPerson()
        {
            
        var item;
        $("#ChairPerson option").each(function () {
                items += "<option value='" + $(this).val() + "'>" + $(this).text() + "</option>";

            });
        }

        function InitializeDate() {
            var getDate = new Date();
            getDate.setDate(getDate.getDate());
            $(".dyn_datepicker").datepicker({ startDate: $("#meetingDate").val(), autoclose: true });
        }





        $("#searchMeeting").on('input', function () {
            if ($(this).val() == "") {
                $("#meetingObj,#meetingDate,#meetingHours,#meetingVenue,#meetingDuration,#meeting_type").val("");

            }

        });




    });





</script>


