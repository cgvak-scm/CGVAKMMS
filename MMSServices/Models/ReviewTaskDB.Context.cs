//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMSServices.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ReviewTaskDBEntities : DbContext
    {
        public ReviewTaskDBEntities()
            : base("name=ReviewTaskDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Employee_Master> Employee_Master { get; set; }
        public DbSet<MMS_Employee_Master> MMS_Employee_Master { get; set; }
        public DbSet<MMS_Meeting_Category> MMS_Meeting_Category { get; set; }
        public DbSet<MMS_Meeting_Details> MMS_Meeting_Details { get; set; }
        public DbSet<MMS_Meeting_Participant> MMS_Meeting_Participant { get; set; }
        public DbSet<MMS_Meeting_Status> MMS_Meeting_Status { get; set; }
        public DbSet<MMS_Meeting_Status_Update> MMS_Meeting_Status_Update { get; set; }
        public DbSet<MMS_Review_Frequency> MMS_Review_Frequency { get; set; }
        public DbSet<MMS_Track_ReviewTasks> MMS_Track_ReviewTasks { get; set; }
        public DbSet<Task_Status> Task_Status { get; set; }
        public DbSet<MMS_Priority> MMS_Priority { get; set; }
        public DbSet<MMS_Meeting_Master> MMS_Meeting_Master { get; set; }
        public DbSet<MMS_Meeting_Template> MMS_Meeting_Template { get; set; }
        public DbSet<MMS_Notifications> MMS_Notifications { get; set; }
    
        public virtual int sp_insert_Meeting_Status(Nullable<int> empId_In, string status_Task_In, Nullable<int> status_ResponsiblePerson_In, Nullable<System.DateTime> status_Date_In, string status_Comments_In, Nullable<int> meeting_status_In, string meeting_Status_Hours, Nullable<int> meeting_Id, Nullable<int> commented_By, Nullable<int> commented_By_ID, Nullable<int> task_Id)
        {
            var empId_InParameter = empId_In.HasValue ?
                new ObjectParameter("EmpId_In", empId_In) :
                new ObjectParameter("EmpId_In", typeof(int));
    
            var status_Task_InParameter = status_Task_In != null ?
                new ObjectParameter("Status_Task_In", status_Task_In) :
                new ObjectParameter("Status_Task_In", typeof(string));
    
            var status_ResponsiblePerson_InParameter = status_ResponsiblePerson_In.HasValue ?
                new ObjectParameter("Status_ResponsiblePerson_In", status_ResponsiblePerson_In) :
                new ObjectParameter("Status_ResponsiblePerson_In", typeof(int));
    
            var status_Date_InParameter = status_Date_In.HasValue ?
                new ObjectParameter("Status_Date_In", status_Date_In) :
                new ObjectParameter("Status_Date_In", typeof(System.DateTime));
    
            var status_Comments_InParameter = status_Comments_In != null ?
                new ObjectParameter("Status_Comments_In", status_Comments_In) :
                new ObjectParameter("Status_Comments_In", typeof(string));
    
            var meeting_status_InParameter = meeting_status_In.HasValue ?
                new ObjectParameter("Meeting_status_In", meeting_status_In) :
                new ObjectParameter("Meeting_status_In", typeof(int));
    
            var meeting_Status_HoursParameter = meeting_Status_Hours != null ?
                new ObjectParameter("Meeting_Status_Hours", meeting_Status_Hours) :
                new ObjectParameter("Meeting_Status_Hours", typeof(string));
    
            var meeting_IdParameter = meeting_Id.HasValue ?
                new ObjectParameter("Meeting_Id", meeting_Id) :
                new ObjectParameter("Meeting_Id", typeof(int));
    
            var commented_ByParameter = commented_By.HasValue ?
                new ObjectParameter("Commented_By", commented_By) :
                new ObjectParameter("Commented_By", typeof(int));
    
            var commented_By_IDParameter = commented_By_ID.HasValue ?
                new ObjectParameter("Commented_By_ID", commented_By_ID) :
                new ObjectParameter("Commented_By_ID", typeof(int));
    
            var task_IdParameter = task_Id.HasValue ?
                new ObjectParameter("Task_Id", task_Id) :
                new ObjectParameter("Task_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_Meeting_Status", empId_InParameter, status_Task_InParameter, status_ResponsiblePerson_InParameter, status_Date_InParameter, status_Comments_InParameter, meeting_status_InParameter, meeting_Status_HoursParameter, meeting_IdParameter, commented_ByParameter, commented_By_IDParameter, task_IdParameter);
        }
    
        public virtual ObjectResult<sp_select_meeting_status_Result> sp_select_meeting_status(Nullable<int> status_Task_In)
        {
            var status_Task_InParameter = status_Task_In.HasValue ?
                new ObjectParameter("Status_Task_In", status_Task_In) :
                new ObjectParameter("Status_Task_In", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_select_meeting_status_Result>("sp_select_meeting_status", status_Task_InParameter);
        }
    
        public virtual ObjectResult<Proc_Get_Review_Tasks_Result> Proc_Get_Review_Tasks(Nullable<int> chairperson, Nullable<int> category_id, Nullable<int> participant, string priorityType, string reviewFrequency)
        {
            var chairpersonParameter = chairperson.HasValue ?
                new ObjectParameter("Chairperson", chairperson) :
                new ObjectParameter("Chairperson", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("Category_id", category_id) :
                new ObjectParameter("Category_id", typeof(int));
    
            var participantParameter = participant.HasValue ?
                new ObjectParameter("Participant", participant) :
                new ObjectParameter("Participant", typeof(int));
    
            var priorityTypeParameter = priorityType != null ?
                new ObjectParameter("PriorityType", priorityType) :
                new ObjectParameter("PriorityType", typeof(string));
    
            var reviewFrequencyParameter = reviewFrequency != null ?
                new ObjectParameter("ReviewFrequency", reviewFrequency) :
                new ObjectParameter("ReviewFrequency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Get_Review_Tasks_Result>("Proc_Get_Review_Tasks", chairpersonParameter, category_idParameter, participantParameter, priorityTypeParameter, reviewFrequencyParameter);
        }
    
        public virtual ObjectResult<sp_select_Meeting_Name_Result> sp_select_Meeting_Name(Nullable<int> chairPerson, Nullable<System.DateTime> startDate_In, Nullable<System.DateTime> endDate_In, string priority, Nullable<int> status)
        {
            var chairPersonParameter = chairPerson.HasValue ?
                new ObjectParameter("ChairPerson", chairPerson) :
                new ObjectParameter("ChairPerson", typeof(int));
    
            var startDate_InParameter = startDate_In.HasValue ?
                new ObjectParameter("StartDate_In", startDate_In) :
                new ObjectParameter("StartDate_In", typeof(System.DateTime));
    
            var endDate_InParameter = endDate_In.HasValue ?
                new ObjectParameter("EndDate_In", endDate_In) :
                new ObjectParameter("EndDate_In", typeof(System.DateTime));
    
            var priorityParameter = priority != null ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_select_Meeting_Name_Result>("sp_select_Meeting_Name", chairPersonParameter, startDate_InParameter, endDate_InParameter, priorityParameter, statusParameter);
        }
    
        public virtual int Sp_Update_MMS_Meeting_Details_Change(Nullable<int> emp_id, Nullable<int> task_Id, Nullable<System.DateTime> completion_Date, Nullable<int> status, Nullable<int> category, Nullable<int> meetingId, string comments, Nullable<System.DateTime> nextReviewDate, Nullable<int> reviewFrequencyID, Nullable<int> commented_by, string task, string priority)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var task_IdParameter = task_Id.HasValue ?
                new ObjectParameter("Task_Id", task_Id) :
                new ObjectParameter("Task_Id", typeof(int));
    
            var completion_DateParameter = completion_Date.HasValue ?
                new ObjectParameter("Completion_Date", completion_Date) :
                new ObjectParameter("Completion_Date", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var meetingIdParameter = meetingId.HasValue ?
                new ObjectParameter("MeetingId", meetingId) :
                new ObjectParameter("MeetingId", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var nextReviewDateParameter = nextReviewDate.HasValue ?
                new ObjectParameter("NextReviewDate", nextReviewDate) :
                new ObjectParameter("NextReviewDate", typeof(System.DateTime));
    
            var reviewFrequencyIDParameter = reviewFrequencyID.HasValue ?
                new ObjectParameter("ReviewFrequencyID", reviewFrequencyID) :
                new ObjectParameter("ReviewFrequencyID", typeof(int));
    
            var commented_byParameter = commented_by.HasValue ?
                new ObjectParameter("commented_by", commented_by) :
                new ObjectParameter("commented_by", typeof(int));
    
            var taskParameter = task != null ?
                new ObjectParameter("task", task) :
                new ObjectParameter("task", typeof(string));
    
            var priorityParameter = priority != null ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MMS_Meeting_Details_Change", emp_idParameter, task_IdParameter, completion_DateParameter, statusParameter, categoryParameter, meetingIdParameter, commentsParameter, nextReviewDateParameter, reviewFrequencyIDParameter, commented_byParameter, taskParameter, priorityParameter);
        }
    
        public virtual int Sp_Update_MMS_Meeting_Details_Change1(Nullable<int> meetingId, string meetingObjective, Nullable<System.DateTime> meetingDate, string meetingTime, string meetingDuration, string meetingVenue, string meetingType, string meetingDepartment, Nullable<int> meetingChairperson, string minutesOfMeeting)
        {
            var meetingIdParameter = meetingId.HasValue ?
                new ObjectParameter("MeetingId", meetingId) :
                new ObjectParameter("MeetingId", typeof(int));
    
            var meetingObjectiveParameter = meetingObjective != null ?
                new ObjectParameter("MeetingObjective", meetingObjective) :
                new ObjectParameter("MeetingObjective", typeof(string));
    
            var meetingDateParameter = meetingDate.HasValue ?
                new ObjectParameter("MeetingDate", meetingDate) :
                new ObjectParameter("MeetingDate", typeof(System.DateTime));
    
            var meetingTimeParameter = meetingTime != null ?
                new ObjectParameter("MeetingTime", meetingTime) :
                new ObjectParameter("MeetingTime", typeof(string));
    
            var meetingDurationParameter = meetingDuration != null ?
                new ObjectParameter("MeetingDuration", meetingDuration) :
                new ObjectParameter("MeetingDuration", typeof(string));
    
            var meetingVenueParameter = meetingVenue != null ?
                new ObjectParameter("MeetingVenue", meetingVenue) :
                new ObjectParameter("MeetingVenue", typeof(string));
    
            var meetingTypeParameter = meetingType != null ?
                new ObjectParameter("MeetingType", meetingType) :
                new ObjectParameter("MeetingType", typeof(string));
    
            var meetingDepartmentParameter = meetingDepartment != null ?
                new ObjectParameter("MeetingDepartment", meetingDepartment) :
                new ObjectParameter("MeetingDepartment", typeof(string));
    
            var meetingChairpersonParameter = meetingChairperson.HasValue ?
                new ObjectParameter("MeetingChairperson", meetingChairperson) :
                new ObjectParameter("MeetingChairperson", typeof(int));
    
            var minutesOfMeetingParameter = minutesOfMeeting != null ?
                new ObjectParameter("MinutesOfMeeting", minutesOfMeeting) :
                new ObjectParameter("MinutesOfMeeting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_MMS_Meeting_Details_Change1", meetingIdParameter, meetingObjectiveParameter, meetingDateParameter, meetingTimeParameter, meetingDurationParameter, meetingVenueParameter, meetingTypeParameter, meetingDepartmentParameter, meetingChairpersonParameter, minutesOfMeetingParameter);
        }
    
        public virtual int sp_add_mms_notifications(Nullable<int> meeting_id, Nullable<int> chairperson)
        {
            var meeting_idParameter = meeting_id.HasValue ?
                new ObjectParameter("meeting_id", meeting_id) :
                new ObjectParameter("meeting_id", typeof(int));
    
            var chairpersonParameter = chairperson.HasValue ?
                new ObjectParameter("chairperson", chairperson) :
                new ObjectParameter("chairperson", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_mms_notifications", meeting_idParameter, chairpersonParameter);
        }
    
        public virtual ObjectResult<string> sp_get_EmailId(Nullable<int> particpanId_In)
        {
            var particpanId_InParameter = particpanId_In.HasValue ?
                new ObjectParameter("ParticpanId_In", particpanId_In) :
                new ObjectParameter("ParticpanId_In", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_get_EmailId", particpanId_InParameter);
        }
    
        public virtual int sp_insert_Attachment(Nullable<int> mid, string fname, string fextension, byte[] file)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("Mid", mid) :
                new ObjectParameter("Mid", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var fextensionParameter = fextension != null ?
                new ObjectParameter("Fextension", fextension) :
                new ObjectParameter("Fextension", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_Attachment", midParameter, fnameParameter, fextensionParameter, fileParameter);
        }
    
        public virtual int sp_insert_meeting_status_24062014_1(Nullable<int> empId_In, string status_Task_In, string status_ResponsiblePerson_In, string status_Date_In, string status_Comments_In, Nullable<int> meeting_Status_In, string meeting_Status_Hours, Nullable<int> meeting_Id, Nullable<int> task_Id)
        {
            var empId_InParameter = empId_In.HasValue ?
                new ObjectParameter("EmpId_In", empId_In) :
                new ObjectParameter("EmpId_In", typeof(int));
    
            var status_Task_InParameter = status_Task_In != null ?
                new ObjectParameter("Status_Task_In", status_Task_In) :
                new ObjectParameter("Status_Task_In", typeof(string));
    
            var status_ResponsiblePerson_InParameter = status_ResponsiblePerson_In != null ?
                new ObjectParameter("Status_ResponsiblePerson_In", status_ResponsiblePerson_In) :
                new ObjectParameter("Status_ResponsiblePerson_In", typeof(string));
    
            var status_Date_InParameter = status_Date_In != null ?
                new ObjectParameter("Status_Date_In", status_Date_In) :
                new ObjectParameter("Status_Date_In", typeof(string));
    
            var status_Comments_InParameter = status_Comments_In != null ?
                new ObjectParameter("Status_Comments_In", status_Comments_In) :
                new ObjectParameter("Status_Comments_In", typeof(string));
    
            var meeting_Status_InParameter = meeting_Status_In.HasValue ?
                new ObjectParameter("Meeting_Status_In", meeting_Status_In) :
                new ObjectParameter("Meeting_Status_In", typeof(int));
    
            var meeting_Status_HoursParameter = meeting_Status_Hours != null ?
                new ObjectParameter("Meeting_Status_Hours", meeting_Status_Hours) :
                new ObjectParameter("Meeting_Status_Hours", typeof(string));
    
            var meeting_IdParameter = meeting_Id.HasValue ?
                new ObjectParameter("Meeting_Id", meeting_Id) :
                new ObjectParameter("Meeting_Id", typeof(int));
    
            var task_IdParameter = task_Id.HasValue ?
                new ObjectParameter("Task_Id", task_Id) :
                new ObjectParameter("Task_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_meeting_status_24062014_1", empId_InParameter, status_Task_InParameter, status_ResponsiblePerson_InParameter, status_Date_InParameter, status_Comments_InParameter, meeting_Status_InParameter, meeting_Status_HoursParameter, meeting_IdParameter, task_IdParameter);
        }
    
        public virtual int sp_insert_MeetingDetails1(Nullable<int> mid, Nullable<int> eid, Nullable<int> cperson, Nullable<int> participant, string task, Nullable<System.DateTime> ctime, string priority, Nullable<int> status, string comments, string category, string isread, Nullable<bool> seen, Nullable<bool> istemplate, Nullable<System.DateTime> nextRevDt, string revfreq, Nullable<int> templateID)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("Mid", mid) :
                new ObjectParameter("Mid", typeof(int));
    
            var eidParameter = eid.HasValue ?
                new ObjectParameter("Eid", eid) :
                new ObjectParameter("Eid", typeof(int));
    
            var cpersonParameter = cperson.HasValue ?
                new ObjectParameter("Cperson", cperson) :
                new ObjectParameter("Cperson", typeof(int));
    
            var participantParameter = participant.HasValue ?
                new ObjectParameter("Participant", participant) :
                new ObjectParameter("Participant", typeof(int));
    
            var taskParameter = task != null ?
                new ObjectParameter("Task", task) :
                new ObjectParameter("Task", typeof(string));
    
            var ctimeParameter = ctime.HasValue ?
                new ObjectParameter("Ctime", ctime) :
                new ObjectParameter("Ctime", typeof(System.DateTime));
    
            var priorityParameter = priority != null ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var isreadParameter = isread != null ?
                new ObjectParameter("Isread", isread) :
                new ObjectParameter("Isread", typeof(string));
    
            var seenParameter = seen.HasValue ?
                new ObjectParameter("seen", seen) :
                new ObjectParameter("seen", typeof(bool));
    
            var istemplateParameter = istemplate.HasValue ?
                new ObjectParameter("istemplate", istemplate) :
                new ObjectParameter("istemplate", typeof(bool));
    
            var nextRevDtParameter = nextRevDt.HasValue ?
                new ObjectParameter("NextRevDt", nextRevDt) :
                new ObjectParameter("NextRevDt", typeof(System.DateTime));
    
            var revfreqParameter = revfreq != null ?
                new ObjectParameter("Revfreq", revfreq) :
                new ObjectParameter("Revfreq", typeof(string));
    
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_MeetingDetails1", midParameter, eidParameter, cpersonParameter, participantParameter, taskParameter, ctimeParameter, priorityParameter, statusParameter, commentsParameter, categoryParameter, isreadParameter, seenParameter, istemplateParameter, nextRevDtParameter, revfreqParameter, templateIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_insert_MeetingMaster(string objective_In, Nullable<System.DateTime> date_In, string time_In, string venue_In, string type_In, string duration_In, string department_In, Nullable<int> chairperson_In, string minutes_Of_Meeting_In, Nullable<int> participants_In, Nullable<bool> istemplate, Nullable<int> templateID)
        {
            var objective_InParameter = objective_In != null ?
                new ObjectParameter("Objective_In", objective_In) :
                new ObjectParameter("Objective_In", typeof(string));
    
            var date_InParameter = date_In.HasValue ?
                new ObjectParameter("Date_In", date_In) :
                new ObjectParameter("Date_In", typeof(System.DateTime));
    
            var time_InParameter = time_In != null ?
                new ObjectParameter("Time_In", time_In) :
                new ObjectParameter("Time_In", typeof(string));
    
            var venue_InParameter = venue_In != null ?
                new ObjectParameter("Venue_In", venue_In) :
                new ObjectParameter("Venue_In", typeof(string));
    
            var type_InParameter = type_In != null ?
                new ObjectParameter("Type_In", type_In) :
                new ObjectParameter("Type_In", typeof(string));
    
            var duration_InParameter = duration_In != null ?
                new ObjectParameter("Duration_In", duration_In) :
                new ObjectParameter("Duration_In", typeof(string));
    
            var department_InParameter = department_In != null ?
                new ObjectParameter("Department_In", department_In) :
                new ObjectParameter("Department_In", typeof(string));
    
            var chairperson_InParameter = chairperson_In.HasValue ?
                new ObjectParameter("Chairperson_In", chairperson_In) :
                new ObjectParameter("Chairperson_In", typeof(int));
    
            var minutes_Of_Meeting_InParameter = minutes_Of_Meeting_In != null ?
                new ObjectParameter("Minutes_Of_Meeting_In", minutes_Of_Meeting_In) :
                new ObjectParameter("Minutes_Of_Meeting_In", typeof(string));
    
            var participants_InParameter = participants_In.HasValue ?
                new ObjectParameter("Participants_In", participants_In) :
                new ObjectParameter("Participants_In", typeof(int));
    
            var istemplateParameter = istemplate.HasValue ?
                new ObjectParameter("Istemplate", istemplate) :
                new ObjectParameter("Istemplate", typeof(bool));
    
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_insert_MeetingMaster", objective_InParameter, date_InParameter, time_InParameter, venue_InParameter, type_InParameter, duration_InParameter, department_InParameter, chairperson_InParameter, minutes_Of_Meeting_InParameter, participants_InParameter, istemplateParameter, templateIDParameter);
        }
    
        public virtual int sp_insert_status_update(Nullable<int> meetingId, Nullable<int> employeeId, string task, Nullable<int> status, Nullable<int> taskId)
        {
            var meetingIdParameter = meetingId.HasValue ?
                new ObjectParameter("MeetingId", meetingId) :
                new ObjectParameter("MeetingId", typeof(int));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var taskParameter = task != null ?
                new ObjectParameter("Task", task) :
                new ObjectParameter("Task", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("TaskId", taskId) :
                new ObjectParameter("TaskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_status_update", meetingIdParameter, employeeIdParameter, taskParameter, statusParameter, taskIdParameter);
        }
    
        public virtual ObjectResult<string> Sp_get_DepartmentsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_get_DepartmentsList");
        }
    
        public virtual ObjectResult<sp_get_EmployeeMaster_forJSON_Result> sp_get_EmployeeMaster_forJSON(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_EmployeeMaster_forJSON_Result>("sp_get_EmployeeMaster_forJSON", deptParameter);
        }
    
        public virtual ObjectResult<sp_get_Employee_Department_Result> sp_get_Employee_Department()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_Employee_Department_Result>("sp_get_Employee_Department");
        }
    }
}
